{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "login-02",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A two column login page with a cover image.",
  "dependencies": [
    "react-icons"
  ],
  "registryDependencies": [
    "button",
    "card",
    "input",
    "form"
  ],
  "files": [
    {
      "path": "blocks/login-02/page.tsx",
      "content": "import { LoginForm } from \"@/registry/new-york/blocks/login-02/components/login-form\";\nexport default function LoginPage() {\n  return (\n    <div className=\"grid min-h-svh lg:grid-cols-2\">\n      <div className=\"flex flex-col gap-4 p-6 md:p-10\">\n        <div className=\"flex justify-center gap-2 md:justify-start\">\n          <a href=\"#\" className=\"flex items-center gap-2 font-semibold\">\n            <div className=\"flex h-7 w-7 items-center justify-center rounded-sm bg-primary text-primary-foreground\">\n              <img\n                src=\"/login-logo.svg\"\n                alt=\"axion/js logo\"\n                height={48}\n                width={48}\n              />\n            </div>\n            axion/js\n          </a>\n        </div>\n        <div className=\"flex flex-1 items-center justify-center\">\n          <div className=\"w-full max-w-xs\">\n            <LoginForm />\n          </div>\n        </div>\n      </div>\n      <div className=\"relative hidden bg-muted lg:block\">\n        <img\n          src=\"/placeholder.svg\"\n          alt=\"Image\"\n          className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/login/page.tsx"
    },
    {
      "path": "blocks/login-02/components/login-form.tsx",
      "content": "\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport {\n  Form,\n  FormField,\n  FormControl,\n  FormLabel,\n  FormItem,\n  FormMessage,\n} from \"@/registry/new-york/ui/form\";\nimport { CardWrapper } from \"@/registry/new-york/blocks/login-02/components/card-wrapper\";\n\nimport Link from \"next/link\";\nimport { Input } from \"@/registry/new-york/ui/input\";\nimport { Button } from \"@/registry/new-york/ui/button\";\n\nexport const LoginSchema = z.object({\n  email: z\n    .string()\n    .min(1, {\n      message: \"Email is required\",\n    })\n    .email({\n      message: \"Invalid email address\",\n    }),\n  password: z.string().min(1, {\n    message: \"Password is required\",\n  }),\n});\n\nexport const LoginForm = () => {\n  const form = useForm<z.infer<typeof LoginSchema>>({\n    resolver: zodResolver(LoginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const onSubmit = (values: z.infer<typeof LoginSchema>) => {\n    // Handle form submission\n  };\n\n  return (\n    <CardWrapper\n      mainHeaderLabel=\"Login\"\n      subHeaderLabel=\"Enter your credentials below to login to your account\"\n      backButtonLabel=\"Don't have an account?\"\n      backButtonHref=\"#\"\n      showSocial={true}\n    >\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...field}\n                      placeholder=\"jhon.doe@example.com\"\n                      type=\"email\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <Input {...field} placeholder=\"******\" type=\"password\" />\n                  </FormControl>\n                  <FormMessage />\n                  <Button\n                    size=\"sm\"\n                    variant=\"link\"\n                    asChild\n                    className=\"px-0 font-normal\"\n                  >\n                    <Link href=\"#\">Forgot password?</Link>\n                  </Button>\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <Button type=\"submit\" className=\"w-full\">\n            Login\n          </Button>\n        </form>\n      </Form>\n    </CardWrapper>\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/login-02/components/card-wrapper.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n} from \"@/components/ui/card\";\nimport { Social } from \"@/registry/new-york/blocks/login-02/components/social\";\n\ninterface BackButtonProps {\n  href: string;\n  label: string;\n}\n\nconst BackButton = ({ href, label }: BackButtonProps) => {\n  return (\n    <Button className=\"font-normal w-full\" size=\"sm\" variant=\"link\" asChild>\n      <Link href={href}>{label}</Link>\n    </Button>\n  );\n};\n\ninterface HeaderProps {\n  mainLabel: string;\n  subLabel: string;\n}\n\nconst Header = ({ mainLabel, subLabel }: HeaderProps) => {\n  return (\n    <div className=\"w-full flex flex-col gap-y-4 items-center justify-center\">\n      <h1 className=\"text-3xl font-bold\">{mainLabel}</h1>\n      <p className=\"text-muted-foreground text-sm\">{subLabel}</p>\n    </div>\n  );\n};\n\ninterface CardWrapperProps {\n  children: React.ReactNode;\n  mainHeaderLabel: string;\n  subHeaderLabel: string;\n  backButtonLabel: string;\n  backButtonHref: string;\n  showSocial?: boolean;\n}\n\nexport const CardWrapper = ({\n  children,\n  mainHeaderLabel,\n  subHeaderLabel,\n  backButtonLabel,\n  backButtonHref,\n  showSocial,\n}: CardWrapperProps) => {\n  return (\n    <Card className=\"w-[400px] shadow-lg\">\n      <CardHeader>\n        <Header mainLabel={mainHeaderLabel} subLabel={subHeaderLabel} />\n      </CardHeader>\n      <CardContent>{children}</CardContent>\n      {showSocial && (\n        <CardFooter>\n          <Social />\n        </CardFooter>\n      )}\n      <CardFooter>\n        <BackButton label={backButtonLabel} href={backButtonHref} />\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport { BackButton, Header, Social };\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/login-02/components/social.tsx",
      "content": "\"use client\";\n\nimport { FcGoogle } from \"react-icons/fc\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const Social = () => {\n  const onClick = async () => {\n    try {\n      // Handle OAuth login\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center w-full gap-x-2\">\n      <Button\n        size=\"lg\"\n        className=\"w-full\"\n        variant=\"outline\"\n        onClick={() => {\n          onClick();\n        }}\n      >\n        <FcGoogle className=\"h-5 w-5\" />\n      </Button>\n\n      <Button\n        size=\"lg\"\n        className=\"w-full\"\n        variant=\"outline\"\n        onClick={() => {\n          onClick();\n        }}\n      >\n        <FaGithub className=\"h-5 w-5\" />\n      </Button>\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/login-02/images/placeholder.svg",
      "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1200\" height=\"1200\" fill=\"none\"><rect width=\"1200\" height=\"1200\" fill=\"#EAEAEA\" rx=\"3\"/><g opacity=\".5\"><g opacity=\".5\"><path fill=\"#FAFAFA\" d=\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\"/><path stroke=\"#C9C9C9\" stroke-width=\"2.418\" d=\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\"/></g><path stroke=\"url(#a)\" stroke-width=\"2.418\" d=\"M0-1.209h553.581\" transform=\"scale(1 -1) rotate(45 1163.11 91.165)\"/><path stroke=\"url(#b)\" stroke-width=\"2.418\" d=\"M404.846 598.671h391.726\"/><path stroke=\"url(#c)\" stroke-width=\"2.418\" d=\"M599.5 795.742V404.017\"/><path stroke=\"url(#d)\" stroke-width=\"2.418\" d=\"m795.717 796.597-391.441-391.44\"/><path fill=\"#fff\" d=\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\"/><g clip-path=\"url(#e)\"><path fill=\"#666\" fill-rule=\"evenodd\" d=\"M616.426 586.58h-31.434v16.176l3.553-3.554.531-.531h9.068l.074-.074 8.463-8.463h2.565l7.18 7.181V586.58Zm-15.715 14.654 3.698 3.699 1.283 1.282-2.565 2.565-1.282-1.283-5.2-5.199h-6.066l-5.514 5.514-.073.073v2.876a2.418 2.418 0 0 0 2.418 2.418h26.598a2.418 2.418 0 0 0 2.418-2.418v-8.317l-8.463-8.463-7.181 7.181-.071.072Zm-19.347 5.442v4.085a6.045 6.045 0 0 0 6.046 6.045h26.598a6.044 6.044 0 0 0 6.045-6.045v-7.108l1.356-1.355-1.282-1.283-.074-.073v-17.989h-38.689v23.43l-.146.146.146.147Z\" clip-rule=\"evenodd\"/></g><path stroke=\"#C9C9C9\" stroke-width=\"2.418\" d=\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\"/></g><defs><linearGradient id=\"a\" x1=\"554.061\" x2=\"-.48\" y1=\".083\" y2=\".087\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"b\" x1=\"796.912\" x2=\"404.507\" y1=\"599.963\" y2=\"599.965\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"c\" x1=\"600.792\" x2=\"600.794\" y1=\"403.677\" y2=\"796.082\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"d\" x1=\"404.85\" x2=\"796.972\" y1=\"403.903\" y2=\"796.02\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><clipPath id=\"e\"><path fill=\"#fff\" d=\"M581.364 580.535h38.689v38.689h-38.689z\"/></clipPath></defs></svg>",
      "type": "registry:file",
      "target": "public/placeholder.svg"
    },
    {
      "path": "blocks/login-02/images/login-logo.svg",
      "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"776\" height=\"925\">\r\n<path d=\"M0 0 C5.73805142 1.66925132 10.87908528 4.30863051 16.1875 7 C17.16871826 7.49419434 18.14993652 7.98838867 19.16088867 8.49755859 C25.81148525 11.8591622 32.42711821 15.28280189 39.00024414 18.79345703 C43.71165905 21.3008069 48.45263145 23.74005637 53.22410583 26.13064575 C56.26465875 27.65480525 59.3000628 29.18909127 62.33554077 30.72332764 C63.85716117 31.48875213 65.38127108 32.24924828 66.90786743 33.00469971 C69.06226409 34.07144465 71.20743785 35.15497738 73.3515625 36.2421875 C74.00792191 36.56165344 74.66428131 36.88111938 75.3405304 37.21026611 C79.72210265 39.46056778 79.72210265 39.46056778 81.02416992 41.98803711 C80.99460809 44.44883587 80.43168166 45.78524489 79.26171875 47.94921875 C78.85920898 48.70581787 78.45669922 49.46241699 78.04199219 50.24194336 C77.59500977 51.04897705 77.14802734 51.85601074 76.6875 52.6875 C76.22891602 53.53256104 75.77033203 54.37762207 75.29785156 55.24829102 C73.88098812 57.84126749 72.44359656 60.42182755 71 63 C70.59281738 63.73541016 70.18563477 64.47082031 69.76611328 65.22851562 C50.83468212 99.24654906 24.97214136 129.01850609 -2.375 156.5 C-3.33756714 157.46957642 -3.33756714 157.46957642 -4.31958008 158.45874023 C-8.71635912 162.84076308 -13.29784277 166.94987846 -18 171 C-19.0480048 171.92580598 -20.09495359 172.85280934 -21.140625 173.78125 C-38.99943394 189.47283893 -58.53128637 203.18728793 -78.6875 215.75 C-79.51822021 216.26900879 -80.34894043 216.78801758 -81.20483398 217.32275391 C-87.98994685 221.50260125 -94.95673263 225.277041 -102 229 C-101.68361572 230.32161133 -101.68361572 230.32161133 -101.36083984 231.66992188 C-89.58739635 281.37007943 -83.75545472 331.47158687 -83.8125 382.5625 C-83.81310425 383.57746552 -83.8137085 384.59243103 -83.81433105 385.63815308 C-83.88112894 427.40189878 -87.11619275 468.95553682 -95 510 C-111.9285691 507.71314539 -128.77183188 504.94956088 -145.61767578 502.12890625 C-149.41977922 501.49232739 -153.2226152 500.86024475 -157.02566719 500.22936058 C-159.98043002 499.73870222 -162.93480465 499.24573897 -165.88906479 498.75206375 C-167.2931721 498.51771343 -168.69739923 498.28407987 -170.10174942 498.05118942 C-172.04625221 497.72837274 -173.99018218 497.40211132 -175.93408203 497.07568359 C-177.03656281 496.891539 -178.13904358 496.70739441 -179.27493286 496.51766968 C-182 496 -182 496 -185 495 C-184.50572298 487.91746827 -183.74997512 480.94356699 -182.64160156 473.93139648 C-174.58439098 422.3629641 -173.0958761 366.81071693 -180 315 C-180.13435455 313.96628265 -180.13435455 313.96628265 -180.27142334 312.91168213 C-182.5102944 295.69704584 -185.32233733 278.67376423 -189.62036133 261.83642578 C-190 260 -190 260 -190 257 C-191.03769531 257.29003906 -192.07539063 257.58007812 -193.14453125 257.87890625 C-256.43469756 273.61494804 -346.65976635 276.03544795 -403.91064453 242.28955078 C-429.31762782 226.60835357 -445.02403684 202.97146785 -452.0546875 174.3125 C-458.93443759 143.88754079 -452.77029582 111.43319156 -436.41601562 85.09082031 C-415.20327166 52.29930354 -383.27015173 35.1007867 -346 27 C-303.43021723 18.05840179 -257.94399189 28.14790506 -221.71533203 51.57128906 C-214.51433669 56.35192064 -207.58228498 61.39210051 -201 67 C-199.89222886 67.92353918 -198.78413132 68.84668694 -197.67578125 69.76953125 C-187.33512119 78.44152389 -177.65226546 87.61388173 -169 98 C-168.54931152 98.53157715 -168.09862305 99.0631543 -167.63427734 99.61083984 C-158.92607587 109.90437343 -151.26751245 120.65099577 -144 132 C-143.60458008 132.61439941 -143.20916016 133.22879883 -142.80175781 133.86181641 C-140.84975057 136.89664496 -138.91365583 139.94084596 -137 143 C-115.7574977 129.87249237 -95.55797363 115.88241048 -77.13671875 98.953125 C-75.23087653 97.21103887 -73.28496698 95.54045187 -71.3125 93.875 C-67.18409628 90.27739104 -63.31574245 86.4251101 -59.4375 82.5625 C-58.81206299 81.94165527 -58.18662598 81.32081055 -57.54223633 80.68115234 C-53.16013109 76.2846569 -49.03197975 71.71832334 -45 67 C-44.46028564 66.37230713 -43.92057129 65.74461426 -43.36450195 65.09790039 C-28.44652955 47.63246309 -16.0474004 29.11720512 -5 9 C-4.05430115 7.29506466 -3.10772609 5.59061495 -2.16015625 3.88671875 C-1.74515869 3.13994873 -1.33016113 2.39317871 -0.90258789 1.6237793 C-0.45580688 0.82000854 -0.45580688 0.82000854 0 0 Z M-355 129 C-361.12483276 135.96066005 -363.50321584 141.66568165 -363.30859375 150.99609375 C-362.6969467 156.94997453 -360.26715085 161.06641299 -356 165.1875 C-326.90483612 187.87186506 -273.16342004 176.41997973 -239.25 172.3125 C-235.83176444 171.88652802 -232.4149828 171.45130013 -229 171 C-244.58593801 146.82736467 -268.82854188 124.69728999 -297 117 C-315.83945822 113.28271021 -340.41244919 114.77796869 -355 129 Z \" fill=\"#90C93C\" transform=\"translate(551,274)\"/>\r\n<path d=\"M0 0 C9.85718697 8.32711616 14.95367313 18.55688003 18.0546875 30.9609375 C19.22245005 44.97408808 17.00616179 58.13622383 8.33203125 69.55859375 C-0.11152413 79.43174581 -10.63411711 86.94427385 -23.6953125 88.9609375 C-38.68517709 89.91341848 -51.13984107 87.78310061 -63.6953125 78.9609375 C-64.33082031 78.52136719 -64.96632813 78.08179688 -65.62109375 77.62890625 C-74.78255198 70.5800681 -80.93021409 58.2773628 -82.6953125 46.9609375 C-83.74975287 31.33447692 -80.92429288 17.86142952 -70.6953125 5.5546875 C-51.95191036 -14.52752908 -21.67679952 -16.39897007 0 0 Z \" fill=\"#91CA3D\" transform=\"translate(560.6953125,109.0390625)\"/>\r\n<path d=\"M0 0 C10.02991994 7.86660388 16.15837554 18.59776987 19 31 C20.60593834 46.77312306 17.92716961 60.30999048 8 73 C-0.95711057 82.84195512 -12.79987748 89.60558055 -26.26171875 90.3359375 C-42.7514313 90.67366748 -55.97095074 86.65658341 -68.3125 75.25 C-78.23366288 64.73925982 -82.22576095 51.19283834 -82 37 C-80.41868356 22.89097271 -74.74940491 10.18543034 -63.68359375 1.09765625 C-44.36238881 -13.20426853 -19.91805553 -13.51765208 0 0 Z \" fill=\"#90C93D\" transform=\"translate(451,203)\"/>\r\n<path d=\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-1.96 4.96 -5.92 8.92 -10 13 C-10.66 12.67 -11.32 12.34 -12 12 C-8.27653164 7.57905197 -4.70478962 3.42166518 0 0 Z \" fill=\"#B9DD84\" transform=\"translate(390,202)\"/>\r\n</svg>\r\n",
      "type": "registry:file",
      "target": "public/login-logo.svg"
    }
  ],
  "categories": [
    "authentication",
    "login"
  ]
}