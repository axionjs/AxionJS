{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "reset-password-form-3",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A reset password form.",
  "registryDependencies": [
    "button",
    "input",
    "form"
  ],
  "files": [
    {
      "path": "blocks/reset-password-form-3.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport Link from \"next/link\";\nimport { Loader2 } from \"lucide-react\";\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormMessage,\n} from \"@/registry/default/ui/form\";\nimport { Input } from \"@/registry/default/ui/input\";\nimport { Button } from \"@/registry/default/ui/button\";\n\nconst formSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function ResetPasswordForm3() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: \"\",\n    },\n  });\n\n  async function onSubmit(data: FormValues) {\n    setIsLoading(true);\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 1500));\n    console.log(data);\n    setIsLoading(false);\n    setIsSubmitted(true);\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-muted/50 to-background\">\n      <div className=\"w-full max-w-sm space-y-6\">\n        {!isSubmitted ? (\n          <>\n            <div className=\"space-y-2 text-center\">\n              <div className=\"inline-block rounded-lg bg-primary/10 p-2\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-6 h-6 text-primary\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z\"\n                  />\n                </svg>\n              </div>\n              <h1 className=\"text-3xl font-bold\">Forgot password?</h1>\n              <p className=\"text-muted-foreground\">\n                No worries, we'll send you reset instructions\n              </p>\n            </div>\n\n            <Form {...form}>\n              <form\n                onSubmit={form.handleSubmit(onSubmit)}\n                className=\"space-y-4\"\n              >\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem className=\"space-y-1\">\n                      <FormControl>\n                        <div className=\"relative\">\n                          <Input\n                            placeholder=\" \"\n                            className=\"pt-4 h-14\"\n                            id=\"email-input\"\n                            {...field}\n                          />\n                          <label\n                            htmlFor=\"email-input\"\n                            className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground pointer-events-none transition-all duration-200 peer-focus:-translate-y-4 peer-focus:text-xs peer-focus:text-primary peer-[:not(:placeholder-shown)]:-translate-y-4 peer-[:not(:placeholder-shown)]:text-xs\"\n                          >\n                            Email address\n                          </label>\n                        </div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full h-12\"\n                  disabled={isLoading}\n                  variant=\"shine\"\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Sending reset link...\n                    </>\n                  ) : (\n                    \"Reset password\"\n                  )}\n                </Button>\n\n                <div className=\"text-center\">\n                  <Link\n                    href=\"/login\"\n                    className=\"text-sm text-primary hover:underline inline-flex items-center justify-center\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      strokeWidth={1.5}\n                      stroke=\"currentColor\"\n                      className=\"w-4 h-4 mr-2\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\"\n                      />\n                    </svg>\n                    Back to login\n                  </Link>\n                </div>\n              </form>\n            </Form>\n          </>\n        ) : (\n          <div className=\"text-center space-y-4\">\n            <div className=\"rounded-full w-16 h-16 bg-primary/10 mx-auto flex items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-8 h-8 text-primary\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75\"\n                />\n              </svg>\n            </div>\n            <h1 className=\"text-2xl font-bold\">Check your email</h1>\n            <p className=\"text-muted-foreground\">\n              We've sent a password reset link to{\" \"}\n              <span className=\"font-medium text-foreground\">\n                {form.getValues().email}\n              </span>\n            </p>\n            <div className=\"pt-4 space-y-4\">\n              <Button\n                variant=\"outline\"\n                className=\"w-full\"\n                onClick={() => form.handleSubmit(onSubmit)()}\n              >\n                Resend email\n              </Button>\n              <div className=\"text-center\">\n                <Link\n                  href=\"/login\"\n                  className=\"text-sm text-primary hover:underline inline-flex items-center justify-center\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth={1.5}\n                    stroke=\"currentColor\"\n                    className=\"w-4 h-4 mr-2\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\"\n                    />\n                  </svg>\n                  Back to login\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}