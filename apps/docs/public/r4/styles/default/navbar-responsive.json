{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "navbar-responsive",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A navbar responsive component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "button",
    "input",
    "sheet"
  ],
  "files": [
    {
      "path": "blocks/navbar-responsive.tsx",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\nimport { Input } from \"@/registry/default/ui/input\";\r\nimport { Sheet, SheetContent, SheetTrigger } from \"@/registry/default/ui/sheet\";\r\nimport {\r\n  Search,\r\n  Menu,\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Moon,\r\n  Sun,\r\n} from \"lucide-react\";\r\n\r\nexport default function NavbarResponsive() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const navItems = [\r\n    { name: \"Home\", href: \"#home\" },\r\n    { name: \"Features\", href: \"#features\" },\r\n    { name: \"Pricing\", href: \"#pricing\" },\r\n    {\r\n      name: \"Resources\",\r\n      href: \"#resources\",\r\n      children: [\r\n        { name: \"Documentation\", href: \"#documentation\" },\r\n        { name: \"Tutorials\", href: \"#tutorials\" },\r\n        { name: \"Blog\", href: \"#blog\" },\r\n      ],\r\n    },\r\n    { name: \"About\", href: \"#about\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <header className=\"sticky top-0 z-40 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n        <div className=\"container flex h-16 items-center justify-between\">\r\n          <div className=\"flex items-center gap-2 md:gap-6\">\r\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"h-6 w-6\"\r\n              >\r\n                <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\r\n                <path d=\"M2 17l10 5 10-5\" />\r\n                <path d=\"M2 12l10 5 10-5\" />\r\n              </svg>\r\n              <span className=\"hidden font-bold sm:inline-block\">Axion</span>\r\n            </Link>\r\n\r\n            <div className=\"hidden md:flex md:gap-6\">\r\n              {navItems.map((item) => {\r\n                if (item.children) {\r\n                  return (\r\n                    <div key={item.name} className=\"relative\">\r\n                      <button\r\n                        className=\"flex items-center text-sm font-medium text-muted-foreground transition-colors hover:text-foreground\"\r\n                        onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                      >\r\n                        {item.name}\r\n                        <ChevronDown className=\"ml-1 h-4 w-4\" />\r\n                      </button>\r\n                      <AnimatePresence>\r\n                        {isDropdownOpen && (\r\n                          <motion.div\r\n                            className=\"absolute left-0 top-full z-50 mt-2 w-48 rounded-md border bg-background shadow-lg\"\r\n                            initial={{ opacity: 0, y: -10 }}\r\n                            animate={{ opacity: 1, y: 0 }}\r\n                            exit={{ opacity: 0, y: -10 }}\r\n                            transition={{ duration: 0.2 }}\r\n                          >\r\n                            <div className=\"py-1\">\r\n                              {item.children.map((child) => (\r\n                                <Link\r\n                                  key={child.name}\r\n                                  href={child.href}\r\n                                  className=\"block px-4 py-2 text-sm text-muted-foreground hover:bg-muted hover:text-foreground\"\r\n                                  onClick={() => setIsDropdownOpen(false)}\r\n                                >\r\n                                  {child.name}\r\n                                </Link>\r\n                              ))}\r\n                            </div>\r\n                          </motion.div>\r\n                        )}\r\n                      </AnimatePresence>\r\n                    </div>\r\n                  );\r\n                }\r\n                return (\r\n                  <Link\r\n                    key={item.name}\r\n                    href={item.href}\r\n                    className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-foreground\"\r\n                  >\r\n                    {item.name}\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"hidden md:flex md:gap-4\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                <Input\r\n                  type=\"search\"\r\n                  placeholder=\"Search...\"\r\n                  className=\"w-[200px] pl-8 md:w-[200px] lg:w-[280px]\"\r\n                />\r\n              </div>\r\n              <Button variant=\"ghost\" size=\"icon\" onClick={toggleTheme}>\r\n                {theme === \"light\" ? (\r\n                  <Moon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <Sun className=\"h-5 w-5\" />\r\n                )}\r\n              </Button>\r\n            </div>\r\n            <Button variant=\"outline\" className=\"hidden md:inline-flex\">\r\n              Log In\r\n            </Button>\r\n            <Button>Sign Up</Button>\r\n\r\n            {/* Mobile Menu */}\r\n            <Sheet>\r\n              <SheetTrigger asChild>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\">\r\n                  <Menu className=\"h-5 w-5\" />\r\n                  <span className=\"sr-only\">Toggle Menu</span>\r\n                </Button>\r\n              </SheetTrigger>\r\n              <SheetContent side=\"left\" className=\"w-[300px] sm:w-[400px]\">\r\n                <div className=\"flex flex-col gap-6 py-4\">\r\n                  <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      className=\"h-6 w-6\"\r\n                    >\r\n                      <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\r\n                      <path d=\"M2 17l10 5 10-5\" />\r\n                      <path d=\"M2 12l10 5 10-5\" />\r\n                    </svg>\r\n                    <span className=\"font-bold\">Axion</span>\r\n                  </Link>\r\n\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                    <Input\r\n                      type=\"search\"\r\n                      placeholder=\"Search...\"\r\n                      className=\"pl-8\"\r\n                    />\r\n                  </div>\r\n\r\n                  <nav className=\"flex flex-col space-y-4\">\r\n                    {navItems.map((item) => {\r\n                      if (item.children) {\r\n                        return (\r\n                          <div key={item.name} className=\"space-y-4\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <Link\r\n                                href={item.href}\r\n                                className=\"text-base font-medium text-foreground\"\r\n                              >\r\n                                {item.name}\r\n                              </Link>\r\n                              <ChevronRight className=\"h-4 w-4 text-muted-foreground\" />\r\n                            </div>\r\n                            <div className=\"ml-4 space-y-3 border-l pl-4\">\r\n                              {item.children.map((child) => (\r\n                                <Link\r\n                                  key={child.name}\r\n                                  href={child.href}\r\n                                  className=\"block text-sm text-muted-foreground hover:text-foreground\"\r\n                                >\r\n                                  {child.name}\r\n                                </Link>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <Link\r\n                          key={item.name}\r\n                          href={item.href}\r\n                          className=\"text-base font-medium text-foreground\"\r\n                        >\r\n                          {item.name}\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  </nav>\r\n\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Button variant=\"ghost\" size=\"icon\" onClick={toggleTheme}>\r\n                      {theme === \"light\" ? (\r\n                        <Moon className=\"h-5 w-5\" />\r\n                      ) : (\r\n                        <Sun className=\"h-5 w-5\" />\r\n                      )}\r\n                    </Button>\r\n                    <span className=\"text-sm\">\r\n                      Switch to {theme === \"light\" ? \"dark\" : \"light\"} mode\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"grid gap-2 pt-4\">\r\n                    <Button variant=\"outline\" className=\"w-full\">\r\n                      Log In\r\n                    </Button>\r\n                    <Button className=\"w-full\">Sign Up</Button>\r\n                  </div>\r\n                </div>\r\n              </SheetContent>\r\n            </Sheet>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}