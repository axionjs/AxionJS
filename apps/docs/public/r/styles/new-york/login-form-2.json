{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "login-form-2",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A login form component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "button",
    "input",
    "form",
    "checkbox",
    "use-toast"
  ],
  "files": [
    {
      "path": "blocks/login-form-2.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useId } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { Loader2, AtSignIcon, LockIcon, Github } from \"lucide-react\";\r\n\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\";\r\nimport { Input } from \"@/registry/new-york/ui/input\";\r\nimport { useToast } from \"@/registry/new-york/hooks/use-toast\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Checkbox } from \"@/registry/new-york/ui/checkbox\";\r\n\r\n// Form schema (without zod dependency for lighter implementation)\r\nconst validateEmail = (email) => {\r\n  return String(email)\r\n    .toLowerCase()\r\n    .match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\n};\r\n\r\nconst validatePassword = (password) => {\r\n  return password.length >= 8;\r\n};\r\n\r\n// Animation variants\r\nconst fadeIn = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: { duration: 0.4 },\r\n  },\r\n};\r\n\r\nconst buttonVariants = {\r\n  idle: { scale: 1 },\r\n  hover: { scale: 1.02, transition: { duration: 0.2 } },\r\n  tap: { scale: 0.98, transition: { duration: 0.1 } },\r\n};\r\n\r\nconst staggerChildren = {\r\n  hidden: { opacity: 0 },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      staggerChildren: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\ninterface LoginFormProps {\r\n  /**\r\n   * Function to handle login submission\r\n   */\r\n  onLogin?: (values: any) => Promise<void>;\r\n  /**\r\n   * URL to redirect to after successful login\r\n   */\r\n  redirectTo?: string;\r\n  /**\r\n   * Function to handle social login\r\n   */\r\n  onSocialLogin?: (provider: string) => Promise<void>;\r\n  /**\r\n   * URL for the signup page\r\n   */\r\n  signupUrl?: string;\r\n  /**\r\n   * URL for the forgot password page\r\n   */\r\n  forgotPasswordUrl?: string;\r\n  /**\r\n   * Custom form action for server-side form processing\r\n   */\r\n  formAction?: string;\r\n  /**\r\n   * Custom CSS class for the container\r\n   */\r\n  className?: string;\r\n  /**\r\n   * Color theme for gradient\r\n   */\r\n  colorTheme?: \"professional\" | \"cool-gray\" | \"warm-gray\" | \"subtle-blue\";\r\n  /**\r\n   * Whether to show left panel on mobile\r\n   */\r\n  showLeftPanelOnMobile?: boolean;\r\n}\r\n\r\nexport function LoginForm2({\r\n  onLogin,\r\n  redirectTo = \"/dashboard\",\r\n  onSocialLogin,\r\n  signupUrl = \"/signup\",\r\n  forgotPasswordUrl = \"/reset-password\",\r\n  formAction,\r\n  className,\r\n  colorTheme = \"professional\",\r\n  showLeftPanelOnMobile = false,\r\n}: LoginFormProps) {\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  const [isPending, setIsPending] = React.useState(false);\r\n  const [formErrors, setFormErrors] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  const emailId = useId();\r\n  const passwordId = useId();\r\n\r\n  const form = useForm({\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    },\r\n  });\r\n\r\n  // Custom validation\r\n  const validateForm = (data) => {\r\n    const errors = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n\r\n    if (!validateEmail(data.email)) {\r\n      errors.email = \"Please enter a valid email address\";\r\n    }\r\n\r\n    if (!validatePassword(data.password)) {\r\n      errors.password = \"Password must be at least 8 characters\";\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return !errors.email && !errors.password;\r\n  };\r\n\r\n  // Handle form submission\r\n  async function handleSubmit(values) {\r\n    if (!validateForm(values)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsPending(true);\r\n\r\n      if (onLogin) {\r\n        await onLogin(values);\r\n      } else {\r\n        // Default login logic - replace with your actual login implementation\r\n        await new Promise((resolve) => setTimeout(resolve, 1500)); // Simulate API call\r\n        console.log(\"Login values:\", values);\r\n      }\r\n\r\n      toast({\r\n        title: \"Login successful\",\r\n        description: \"You have been logged in successfully.\",\r\n      });\r\n\r\n      if (redirectTo) {\r\n        router.push(redirectTo);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n\r\n      toast({\r\n        title: \"Login failed\",\r\n        description: \"Please check your credentials and try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsPending(false);\r\n    }\r\n  }\r\n\r\n  // Handle social login\r\n  const handleSocialLogin = async (provider: string) => {\r\n    try {\r\n      setIsPending(true);\r\n\r\n      if (onSocialLogin) {\r\n        await onSocialLogin(provider);\r\n      } else {\r\n        // Simulate social login\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n        console.log(`Logging in with ${provider}`);\r\n\r\n        toast({\r\n          title: \"Social login\",\r\n          description: `Logged in with ${provider}`,\r\n        });\r\n\r\n        if (redirectTo) {\r\n          router.push(redirectTo);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Social login error with ${provider}:`, error);\r\n\r\n      toast({\r\n        title: \"Login failed\",\r\n        description: `Could not log in with ${provider}. Please try again.`,\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsPending(false);\r\n    }\r\n  };\r\n\r\n  // Get gradient classes based on color theme\r\n  const getGradientClasses = () => {\r\n    switch (colorTheme) {\r\n      case \"cool-gray\":\r\n        return \"from-gray-200 to-gray-300 dark:from-gray-700 dark:to-gray-800 text-gray-800 dark:text-white hover:from-gray-300 hover:to-gray-400 dark:hover:from-gray-600 dark:hover:to-gray-700\";\r\n      case \"warm-gray\":\r\n        return \"from-gray-200 to-stone-300 dark:from-gray-700 dark:to-stone-800 text-gray-800 dark:text-white hover:from-gray-300 hover:to-stone-400 dark:hover:from-gray-600 dark:hover:to-stone-700\";\r\n      case \"subtle-blue\":\r\n        return \"from-gray-200 to-blue-100 dark:from-gray-700 dark:to-blue-900 text-gray-800 dark:text-white hover:from-gray-300 hover:to-blue-200 dark:hover:from-gray-600 dark:hover:to-blue-800\";\r\n      case \"professional\":\r\n      default:\r\n        return \"from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 text-gray-800 dark:text-white hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-700 dark:hover:to-gray-600\";\r\n    }\r\n  };\r\n\r\n  // Get panel gradient classes\r\n  const getPanelGradient = () => {\r\n    switch (colorTheme) {\r\n      case \"cool-gray\":\r\n        return \"from-gray-600 to-gray-800\";\r\n      case \"warm-gray\":\r\n        return \"from-stone-600 to-gray-800\";\r\n      case \"subtle-blue\":\r\n        return \"from-gray-700 to-blue-900\";\r\n      case \"professional\":\r\n      default:\r\n        return \"from-gray-700 to-gray-900\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      variants={fadeIn}\r\n      className={cn(\r\n        \"flex min-h-[80vh] w-full items-center justify-center p-4\",\r\n        className,\r\n      )}\r\n    >\r\n      <div className=\"grid w-full max-w-5xl grid-cols-1 md:grid-cols-2 overflow-hidden rounded-2xl shadow-xl\">\r\n        {/* Left panel - only shown on md+ screens by default */}\r\n        <motion.div\r\n          initial={{ opacity: 0, x: -50 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.2 }}\r\n          className={cn(\r\n            `bg-gradient-to-br ${getPanelGradient()} p-8 md:p-12 flex flex-col justify-between`,\r\n            showLeftPanelOnMobile ? \"block\" : \"hidden md:flex\",\r\n          )}\r\n        >\r\n          <motion.div variants={staggerChildren}>\r\n            <motion.h1\r\n              variants={fadeIn}\r\n              className=\"text-3xl font-bold text-white\"\r\n            >\r\n              Welcome back\r\n            </motion.h1>\r\n            <motion.p variants={fadeIn} className=\"mt-2 text-white/80\">\r\n              Log in to your account to continue your journey with us\r\n            </motion.p>\r\n          </motion.div>\r\n\r\n          <motion.div variants={staggerChildren} className=\"space-y-8\">\r\n            <motion.div\r\n              variants={fadeIn}\r\n              className=\"flex items-start space-x-4\"\r\n            >\r\n              <div className=\"h-12 w-12 rounded-full bg-white/10 flex items-center justify-center shrink-0 backdrop-blur-sm\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  className=\"text-white\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-xl font-medium text-white\">\r\n                  Fast & Secure\r\n                </h3>\r\n                <p className=\"text-white/70\">\r\n                  Our platform ensures your data is always safe and secure\r\n                </p>\r\n              </div>\r\n            </motion.div>\r\n\r\n            <motion.div\r\n              variants={fadeIn}\r\n              className=\"flex items-start space-x-4\"\r\n            >\r\n              <div className=\"h-12 w-12 rounded-full bg-white/10 flex items-center justify-center shrink-0 backdrop-blur-sm\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  className=\"text-white\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-xl font-medium text-white\">Protected</h3>\r\n                <p className=\"text-white/70\">\r\n                  Advanced encryption and security protocols to protect your\r\n                  account\r\n                </p>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        </motion.div>\r\n\r\n        {/* Right panel - Form */}\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"bg-white dark:bg-gray-900 p-6 sm:p-8 md:p-12\"\r\n        >\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.3, duration: 0.5 }}\r\n            className=\"mb-8\"\r\n          >\r\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100\">\r\n              Sign in\r\n            </h2>\r\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n              Enter your credentials to access your account\r\n            </p>\r\n          </motion.div>\r\n\r\n          <Form {...form}>\r\n            <form\r\n              ref={formRef}\r\n              onSubmit={form.handleSubmit(handleSubmit)}\r\n              className=\"space-y-4\"\r\n              action={formAction}\r\n              noValidate\r\n            >\r\n              <FormField\r\n                control={form.control}\r\n                name=\"email\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel htmlFor={emailId}>Email</FormLabel>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <Input\r\n                          id={emailId}\r\n                          placeholder=\"name@example.com\"\r\n                          className=\"peer ps-9\"\r\n                          {...field}\r\n                          type=\"email\"\r\n                          autoComplete=\"email\"\r\n                          aria-required=\"true\"\r\n                        />\r\n                        <div className=\"text-muted-foreground/80 pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-3 peer-disabled:opacity-50\">\r\n                          <AtSignIcon size={16} aria-hidden=\"true\" />\r\n                        </div>\r\n                      </div>\r\n                    </FormControl>\r\n                    {formErrors.email && (\r\n                      <FormMessage>{formErrors.email}</FormMessage>\r\n                    )}\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"password\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <FormLabel htmlFor={passwordId}>Password</FormLabel>\r\n                      <Link\r\n                        href={forgotPasswordUrl}\r\n                        className=\"text-xs text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300 transition-colors\"\r\n                      >\r\n                        Forgot password?\r\n                      </Link>\r\n                    </div>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <Input\r\n                          id={passwordId}\r\n                          placeholder=\"Enter your password\"\r\n                          className=\"peer ps-9\"\r\n                          {...field}\r\n                          type=\"password\"\r\n                          autoComplete=\"current-password\"\r\n                          aria-required=\"true\"\r\n                        />\r\n                        <div className=\"text-muted-foreground/80 pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-3 peer-disabled:opacity-50\">\r\n                          <LockIcon size={16} aria-hidden=\"true\" />\r\n                        </div>\r\n                      </div>\r\n                    </FormControl>\r\n                    {formErrors.password && (\r\n                      <FormMessage>{formErrors.password}</FormMessage>\r\n                    )}\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.6, duration: 0.5 }}\r\n              >\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"rememberMe\"\r\n                  render={({ field }) => (\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id=\"remember-me\"\r\n                        checked={field.value}\r\n                        onCheckedChange={(checked) => {\r\n                          const value = checked === true;\r\n                          field.onChange(value);\r\n                        }}\r\n                        className=\"data-[state=checked]:bg-gray-800 data-[state=checked]:border-gray-800 dark:data-[state=checked]:bg-gray-600 dark:data-[state=checked]:border-gray-600\"\r\n                      />\r\n                      <label\r\n                        htmlFor=\"remember-me\"\r\n                        className=\"text-sm text-gray-600 dark:text-gray-400 cursor-pointer\"\r\n                      >\r\n                        Remember me\r\n                      </label>\r\n                    </div>\r\n                  )}\r\n                />\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.7, duration: 0.5 }}\r\n                className=\"pt-2\"\r\n              >\r\n                <motion.div\r\n                  variants={buttonVariants}\r\n                  initial=\"idle\"\r\n                  whileHover=\"hover\"\r\n                  whileTap=\"tap\"\r\n                >\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className={cn(\r\n                      \"w-full h-12 bg-gradient-to-r shadow-md\",\r\n                      getGradientClasses(),\r\n                    )}\r\n                    disabled={isPending}\r\n                    aria-label=\"Sign in to your account\"\r\n                  >\r\n                    <AnimatePresence mode=\"wait\" initial={false}>\r\n                      {isPending ? (\r\n                        <motion.div\r\n                          key=\"loading\"\r\n                          initial={{ opacity: 0 }}\r\n                          animate={{ opacity: 1 }}\r\n                          exit={{ opacity: 0 }}\r\n                          className=\"flex items-center\"\r\n                        >\r\n                          <Loader2\r\n                            className=\"mr-2 h-4 w-4 animate-spin\"\r\n                            aria-hidden=\"true\"\r\n                          />\r\n                          <span>Signing in...</span>\r\n                        </motion.div>\r\n                      ) : (\r\n                        <motion.span\r\n                          key=\"sign-in\"\r\n                          initial={{ opacity: 0 }}\r\n                          animate={{ opacity: 1 }}\r\n                          exit={{ opacity: 0 }}\r\n                          className=\"font-medium\"\r\n                        >\r\n                          Sign in\r\n                        </motion.span>\r\n                      )}\r\n                    </AnimatePresence>\r\n                  </Button>\r\n                </motion.div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.8, duration: 0.5 }}\r\n                className=\"relative my-6\"\r\n              >\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-200 dark:border-gray-800\"></div>\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                  <span className=\"bg-white dark:bg-gray-900 px-2 text-gray-500 dark:text-gray-400\">\r\n                    Or continue with\r\n                  </span>\r\n                </div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.9, duration: 0.5 }}\r\n                className=\"grid grid-cols-3 gap-3\"\r\n              >\r\n                <motion.div\r\n                  variants={buttonVariants}\r\n                  whileHover=\"hover\"\r\n                  whileTap=\"tap\"\r\n                >\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    type=\"button\"\r\n                    className=\"h-12 border-gray-200 hover:border-gray-300 dark:border-gray-800 dark:hover:border-gray-700 transition-colors w-full\"\r\n                    onClick={() => handleSocialLogin(\"github\")}\r\n                    disabled={isPending}\r\n                    aria-label=\"Sign in with GitHub\"\r\n                  >\r\n                    <Github className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </Button>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                  variants={buttonVariants}\r\n                  whileHover=\"hover\"\r\n                  whileTap=\"tap\"\r\n                >\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    type=\"button\"\r\n                    className=\"h-12 border-gray-200 hover:border-gray-300 dark:border-gray-800 dark:hover:border-gray-700 transition-colors w-full\"\r\n                    onClick={() => handleSocialLogin(\"google\")}\r\n                    disabled={isPending}\r\n                    aria-label=\"Sign in with Google\"\r\n                  >\r\n                    <svg\r\n                      className=\"h-5 w-5\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path\r\n                        fill=\"currentColor\"\r\n                        d=\"M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z\"\r\n                      />\r\n                    </svg>\r\n                  </Button>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                  variants={buttonVariants}\r\n                  whileHover=\"hover\"\r\n                  whileTap=\"tap\"\r\n                >\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    type=\"button\"\r\n                    className=\"h-12 border-gray-200 hover:border-gray-300 dark:border-gray-800 dark:hover:border-gray-700 transition-colors w-full\"\r\n                    onClick={() => handleSocialLogin(\"apple\")}\r\n                    disabled={isPending}\r\n                    aria-label=\"Sign in with Apple\"\r\n                  >\r\n                    <svg\r\n                      className=\"h-5 w-5\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"currentColor\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701z\" />\r\n                    </svg>\r\n                  </Button>\r\n                </motion.div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 1, duration: 0.5 }}\r\n                className=\"text-center text-sm text-gray-600 dark:text-gray-400 mt-6\"\r\n              >\r\n                Don&apos;t have an account?{\" \"}\r\n                <Link\r\n                  href={signupUrl}\r\n                  className=\"font-medium text-gray-900 hover:text-gray-700 dark:text-gray-300 dark:hover:text-gray-100 transition-colors\"\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </motion.div>\r\n            </form>\r\n          </Form>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default LoginForm2;\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}