{
  "$schema": "http://localhost:3000/schema/registry-item.json",
  "name": "separator",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "dependencies": [
    "@radix-ui/react-separator"
  ],
  "files": [
    {
      "path": "ui/separator.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface SeparatorProps\r\n  extends React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> {\r\n  orientation?: \"horizontal\" | \"vertical\";\r\n\r\n  decorative?: boolean;\r\n\r\n  dashed?: boolean;\r\n\r\n  label?: React.ReactNode;\r\n\r\n  labelPosition?: \"start\" | \"center\" | \"end\";\r\n}\r\n\r\nexport const Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  SeparatorProps\r\n>(\r\n  (\r\n    {\r\n      orientation = \"horizontal\",\r\n      dashed = false,\r\n      label,\r\n      labelPosition = \"center\",\r\n      decorative = !label,\r\n      className,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const hasLabel = !!label;\r\n\r\n    if (orientation === \"vertical\") {\r\n      return (\r\n        <SeparatorPrimitive.Root\r\n          ref={ref}\r\n          orientation=\"vertical\"\r\n          decorative={decorative}\r\n          className={cn(\r\n            \"relative shrink-0 w-px bg-border\",\r\n            dashed && \"bg-dashed-border\",\r\n            className,\r\n          )}\r\n          {...props}\r\n        >\r\n          {hasLabel && (\r\n            <div\r\n              className={cn(\r\n                \"absolute left-1/2 flex -translate-x-1/2 -translate-y-1/2 rotate-90 whitespace-nowrap px-2 text-sm text-foreground\",\r\n              )}\r\n            >\r\n              {label}\r\n            </div>\r\n          )}\r\n        </SeparatorPrimitive.Root>\r\n      );\r\n    }\r\n\r\n    // Horizontal divider\r\n    return (\r\n      <div className={cn(\"relative flex items-center\", className)}>\r\n        <SeparatorPrimitive.Root\r\n          ref={ref}\r\n          orientation=\"horizontal\"\r\n          decorative={decorative}\r\n          className={cn(\r\n            \"h-[1px] w-full shrink-0 bg-border\",\r\n            dashed && \"bg-dashed-border\",\r\n            hasLabel && labelPosition !== \"start\" ? \"mr-2\" : \"\",\r\n          )}\r\n          {...props}\r\n        />\r\n        {hasLabel && (\r\n          <span\r\n            className={cn(\r\n              \"text-sm text-foreground\",\r\n              labelPosition === \"start\" && \"order-first mr-2\",\r\n              labelPosition === \"center\" &&\r\n                \"absolute left-1/2 -translate-x-1/2 bg-background px-2\",\r\n              labelPosition === \"end\" && \"ml-2\",\r\n            )}\r\n          >\r\n            {label}\r\n          </span>\r\n        )}\r\n        {hasLabel && labelPosition !== \"end\" && (\r\n          <SeparatorPrimitive.Root\r\n            orientation=\"horizontal\"\r\n            decorative={decorative}\r\n            className={cn(\r\n              \"h-[1px] w-full shrink-0 bg-border\",\r\n              dashed && \"bg-dashed-border\",\r\n              labelPosition === \"center\" && \"ml-2\",\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  },\r\n);\r\nSeparator.displayName = \"Separator\";\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}