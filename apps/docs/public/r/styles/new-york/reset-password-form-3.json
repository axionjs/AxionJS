{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "reset-password-form-3",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A reset password form.",
  "registryDependencies": [
    "button",
    "input",
    "form"
  ],
  "files": [
    {
      "path": "blocks/reset-password-form-3.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport Link from \"next/link\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\";\r\nimport { Input } from \"@/registry/new-york/ui/input\";\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\n\r\nconst formSchema = z.object({\r\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\r\n});\r\n\r\ntype FormValues = z.infer<typeof formSchema>;\r\n\r\nexport default function ResetPasswordForm3() {\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\r\n\r\n  const form = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n    },\r\n  });\r\n\r\n  async function onSubmit(data: FormValues) {\r\n    setIsLoading(true);\r\n    // Simulate API call\r\n    await new Promise((resolve) => setTimeout(resolve, 1500));\r\n    console.log(data);\r\n    setIsLoading(false);\r\n    setIsSubmitted(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-muted/50 to-background\">\r\n      <div className=\"w-full max-w-sm space-y-6\">\r\n        {!isSubmitted ? (\r\n          <>\r\n            <div className=\"space-y-2 text-center\">\r\n              <div className=\"inline-block rounded-lg bg-primary/10 p-2\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth={1.5}\r\n                  stroke=\"currentColor\"\r\n                  className=\"w-6 h-6 text-primary\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <h1 className=\"text-3xl font-bold\">Forgot password?</h1>\r\n              <p className=\"text-muted-foreground\">\r\n                No worries, we'll send you reset instructions\r\n              </p>\r\n            </div>\r\n\r\n            <Form {...form}>\r\n              <form\r\n                onSubmit={form.handleSubmit(onSubmit)}\r\n                className=\"space-y-4\"\r\n              >\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"email\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"space-y-1\">\r\n                      <FormControl>\r\n                        <div className=\"relative\">\r\n                          <Input\r\n                            placeholder=\" \"\r\n                            className=\"pt-4 h-14\"\r\n                            id=\"email-input\"\r\n                            {...field}\r\n                          />\r\n                          <label\r\n                            htmlFor=\"email-input\"\r\n                            className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground pointer-events-none transition-all duration-200 peer-focus:-translate-y-4 peer-focus:text-xs peer-focus:text-primary peer-[:not(:placeholder-shown)]:-translate-y-4 peer-[:not(:placeholder-shown)]:text-xs\"\r\n                          >\r\n                            Email address\r\n                          </label>\r\n                        </div>\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"w-full h-12\"\r\n                  disabled={isLoading}\r\n                  variant=\"shine\"\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                      Sending reset link...\r\n                    </>\r\n                  ) : (\r\n                    \"Reset password\"\r\n                  )}\r\n                </Button>\r\n\r\n                <div className=\"text-center\">\r\n                  <Link\r\n                    href=\"/login\"\r\n                    className=\"text-sm text-primary hover:underline inline-flex items-center justify-center\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth={1.5}\r\n                      stroke=\"currentColor\"\r\n                      className=\"w-4 h-4 mr-2\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\"\r\n                      />\r\n                    </svg>\r\n                    Back to login\r\n                  </Link>\r\n                </div>\r\n              </form>\r\n            </Form>\r\n          </>\r\n        ) : (\r\n          <div className=\"text-center space-y-4\">\r\n            <div className=\"rounded-full w-16 h-16 bg-primary/10 mx-auto flex items-center justify-center\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth={1.5}\r\n                stroke=\"currentColor\"\r\n                className=\"w-8 h-8 text-primary\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <h1 className=\"text-2xl font-bold\">Check your email</h1>\r\n            <p className=\"text-muted-foreground\">\r\n              We've sent a password reset link to{\" \"}\r\n              <span className=\"font-medium text-foreground\">\r\n                {form.getValues().email}\r\n              </span>\r\n            </p>\r\n            <div className=\"pt-4 space-y-4\">\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"w-full\"\r\n                onClick={() => form.handleSubmit(onSubmit)()}\r\n              >\r\n                Resend email\r\n              </Button>\r\n              <div className=\"text-center\">\r\n                <Link\r\n                  href=\"/login\"\r\n                  className=\"text-sm text-primary hover:underline inline-flex items-center justify-center\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    strokeWidth={1.5}\r\n                    stroke=\"currentColor\"\r\n                    className=\"w-4 h-4 mr-2\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\"\r\n                    />\r\n                  </svg>\r\n                  Back to login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}