{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "register-form",
  "type": "registry:auth",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "Register form with email, password, and username fields.",
  "files": [
    {
      "path": "auth/components/register-form.tsx",
      "content": "\"use client\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport { useState, useTransition } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormField,\r\n  FormControl,\r\n  FormLabel,\r\n  FormItem,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\";\r\nimport { RegisterSchema } from \"@/registry/new-york/auth/schemas\";\r\nimport { CardWrapper } from \"@/registry/new-york/auth/components/card-wrapper\";\r\nimport { Input } from \"@/registry/new-york/ui/input\";\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\nimport { FormError } from \"@/registry/new-york/auth/components/form-error\";\r\nimport { FormSuccess } from \"@/registry/new-york/auth/components/form-success\";\r\nimport { register } from \"@/registry/new-york/auth/actions/auth-actions\";\r\n\r\nexport const RegisterForm = () => {\r\n  const [error, setError] = useState<string | undefined>(\"\");\r\n  const [success, setSuccess] = useState<string | undefined>(\"\");\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const form = useForm<z.infer<typeof RegisterSchema>>({\r\n    resolver: zodResolver(RegisterSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = (values: z.infer<typeof RegisterSchema>) => {\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    startTransition(() => {\r\n      register(values).then((data) => {\r\n        setError(data.error);\r\n        setSuccess(data.success);\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <CardWrapper\r\n      mainHeaderLabel=\"Register\"\r\n      subHeaderLabel=\"Create an account\"\r\n      backButtonLabel=\"Already have an account?\"\r\n      backButtonHref=\"/auth/login\"\r\n      showSocial\r\n    >\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"name\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Name</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      disabled={isPending}\r\n                      {...field}\r\n                      placeholder=\"Jhon Doe\"\r\n                      type=\"text\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"email\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      disabled={isPending}\r\n                      {...field}\r\n                      placeholder=\"jhon.doe@example.com\"\r\n                      type=\"email\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"password\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      disabled={isPending}\r\n                      {...field}\r\n                      placeholder=\"******\"\r\n                      type=\"password\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n          <FormError message={error} />\r\n          <FormSuccess message={success} />\r\n          <Button disabled={isPending} type=\"submit\" className=\"w-full\">\r\n            Create an account\r\n          </Button>\r\n        </form>\r\n      </Form>\r\n    </CardWrapper>\r\n  );\r\n};\r\n",
      "type": "registry:auth_comp",
      "target": ""
    }
  ]
}