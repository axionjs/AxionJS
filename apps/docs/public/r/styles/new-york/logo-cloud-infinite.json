{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "logo-cloud-infinite",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A logo cloud infinite component.",
  "files": [
    {
      "path": "blocks/logo-cloud-infinite.tsx",
      "content": "\"use client\";\r\n\r\nimport { useRef, useEffect } from \"react\";\r\n\r\nexport default function LogoCloudInfinite() {\r\n  const logos = [\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/nvidia.svg\",\r\n      alt: \"Nvidia Logo\",\r\n      className: \"h-5\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/column.svg\",\r\n      alt: \"Column Logo\",\r\n      className: \"h-4\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/github.svg\",\r\n      alt: \"GitHub Logo\",\r\n      className: \"h-4\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/nike.svg\",\r\n      alt: \"Nike Logo\",\r\n      className: \"h-5\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/lemonsqueezy.svg\",\r\n      alt: \"Lemon Squeezy Logo\",\r\n      className: \"h-5\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/laravel.svg\",\r\n      alt: \"Laravel Logo\",\r\n      className: \"h-4\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/lilly.svg\",\r\n      alt: \"Lilly Logo\",\r\n      className: \"h-7\",\r\n    },\r\n    {\r\n      src: \"https://html.tailus.io/blocks/customers/openai.svg\",\r\n      alt: \"OpenAI Logo\",\r\n      className: \"h-6\",\r\n    },\r\n  ];\r\n\r\n  // Double the logos for the infinite scroll effect\r\n  const allLogos = [...logos, ...logos];\r\n\r\n  const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = scrollRef.current;\r\n    if (!scrollContainer) return;\r\n\r\n    let animationId: number;\r\n    let scrollPos = 0;\r\n    const speed = 0.5;\r\n\r\n    const scroll = () => {\r\n      if (!scrollContainer) return;\r\n\r\n      scrollPos += speed;\r\n      if (scrollPos >= scrollContainer.scrollWidth / 2) {\r\n        scrollPos = 0;\r\n      }\r\n\r\n      scrollContainer.style.transform = `translateX(-${scrollPos}px)`;\r\n      animationId = requestAnimationFrame(scroll);\r\n    };\r\n\r\n    scroll();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"bg-background overflow-hidden py-16\">\r\n      <div className=\"group relative m-auto max-w-7xl px-6\">\r\n        <div className=\"flex flex-col items-center md:flex-row\">\r\n          <div className=\"md:max-w-44 md:border-r md:pr-6\">\r\n            <p className=\"text-end text-sm\">Powering the best teams</p>\r\n          </div>\r\n          <div className=\"relative py-6 md:w-[calc(100%-11rem)] overflow-hidden\">\r\n            <div className=\"flex\" ref={scrollRef} style={{ gap: \"112px\" }}>\r\n              {allLogos.map((logo, index) => (\r\n                <div key={index} className=\"flex-shrink-0\">\r\n                  <img\r\n                    className={`mx-auto w-fit dark:invert ${logo.className}`}\r\n                    src={logo.src || \"/placeholder.svg\"}\r\n                    alt={logo.alt}\r\n                    width=\"auto\"\r\n                    height={logo.className.replace(\"h-\", \"\")}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Gradient overlays for fading effect */}\r\n            <div className=\"absolute inset-y-0 left-0 w-20 bg-gradient-to-r from-background to-transparent\"></div>\r\n            <div className=\"absolute inset-y-0 right-0 w-20 bg-gradient-to-l from-background to-transparent\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}