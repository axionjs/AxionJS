{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "timeline-chart",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "charts/timeline-chart.tsx",
      "content": "\"use client\";\r\n\r\nimport { TrendingUp } from \"lucide-react\";\r\nimport {\r\n  Line,\r\n  LineChart,\r\n  ReferenceLine,\r\n  XAxis,\r\n  YAxis,\r\n  ResponsiveContainer,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/new-york/ui/card\";\r\nimport {\r\n  type ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/new-york/ui/chart\";\r\n\r\nconst milestones = [\r\n  { date: \"2024-01-15\", event: \"Project Start\" },\r\n  { date: \"2024-02-10\", event: \"Design Phase Complete\" },\r\n  { date: \"2024-03-05\", event: \"Development Milestone 1\" },\r\n  { date: \"2024-04-20\", event: \"Testing Phase\" },\r\n  { date: \"2024-05-15\", event: \"Beta Release\" },\r\n  { date: \"2024-06-30\", event: \"Product Launch\" },\r\n];\r\n\r\nconst progressData = [\r\n  { date: \"2024-01-01\", progress: 0 },\r\n  { date: \"2024-01-15\", progress: 5 },\r\n  { date: \"2024-02-01\", progress: 15 },\r\n  { date: \"2024-02-10\", progress: 25 },\r\n  { date: \"2024-02-15\", progress: 30 },\r\n  { date: \"2024-03-01\", progress: 40 },\r\n  { date: \"2024-03-05\", progress: 45 },\r\n  { date: \"2024-03-15\", progress: 50 },\r\n  { date: \"2024-04-01\", progress: 60 },\r\n  { date: \"2024-04-20\", progress: 70 },\r\n  { date: \"2024-05-01\", progress: 80 },\r\n  { date: \"2024-05-15\", progress: 85 },\r\n  { date: \"2024-06-01\", progress: 95 },\r\n  { date: \"2024-06-30\", progress: 100 },\r\n];\r\n\r\nconst chartConfig = {\r\n  progress: {\r\n    label: \"Progress\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n  milestone: {\r\n    label: \"Milestone\",\r\n    color: \"hsl(var(--chart-2))\",\r\n  },\r\n} satisfies ChartConfig;\r\n\r\nexport function TimelineChart() {\r\n  // Function to determine optimal label position based on milestone index\r\n  const getLabelPosition = (index) => {\r\n    // Alternate positions to reduce overlap\r\n    return index % 2 === 0 ? \"top\" : \"bottom\";\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Timeline Chart</CardTitle>\r\n        <CardDescription>Project progress and milestones</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"h-auto\">\r\n        <ChartContainer config={chartConfig}>\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              accessibilityLayer\r\n              data={progressData}\r\n              margin={{ top: 40, right: 30, bottom: 40, left: 30 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                dataKey=\"date\"\r\n                tickLine={false}\r\n                axisLine={false}\r\n                tickFormatter={(value) => {\r\n                  const date = new Date(value);\r\n                  return date.getMonth() + 1 + \"/\" + date.getDate();\r\n                }}\r\n              />\r\n              <YAxis\r\n                tickLine={false}\r\n                axisLine={false}\r\n                domain={[0, 100]}\r\n                tickFormatter={(value) => value + \"%\"}\r\n              />\r\n              <ChartTooltip\r\n                content={\r\n                  <ChartTooltipContent\r\n                    formatter={(value) => value + \"%\"}\r\n                    labelFormatter={(label) => {\r\n                      const date = new Date(label);\r\n                      return date.toLocaleDateString(\"en-US\", {\r\n                        month: \"short\",\r\n                        day: \"numeric\",\r\n                      });\r\n                    }}\r\n                  />\r\n                }\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"progress\"\r\n                stroke={chartConfig.progress.color}\r\n                strokeWidth={2}\r\n                dot={{ fill: chartConfig.progress.color, r: 4 }}\r\n              />\r\n              {milestones.map((milestone, index) => (\r\n                <ReferenceLine\r\n                  key={\"milestone-\" + index}\r\n                  x={milestone.date}\r\n                  stroke={chartConfig.milestone.color}\r\n                  strokeDasharray=\"3 3\"\r\n                  label={{\r\n                    value: milestone.event,\r\n                    position: getLabelPosition(index),\r\n                    fill: chartConfig.milestone.color,\r\n                    fontSize: 10,\r\n                    angle: -35,\r\n                    offset: 15,\r\n                  }}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </ChartContainer>\r\n      </CardContent>\r\n      <CardFooter className=\"flex-col items-start gap-2 text-sm\">\r\n        <div className=\"flex gap-2 font-medium leading-none\">\r\n          Project on track for June 30 launch <TrendingUp className=\"h-4 w-4\" />\r\n        </div>\r\n        <div className=\"leading-none text-muted-foreground\">\r\n          Vertical lines indicate key milestones\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:block",
      "target": ""
    }
  ],
  "categories": [
    "charts",
    "charts-timeline"
  ]
}