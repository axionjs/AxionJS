{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "signup-form-3",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A signup form.",
  "registryDependencies": [
    "button",
    "input",
    "form",
    "checkbox",
    "use-toast",
    "password-input"
  ],
  "files": [
    {
      "path": "blocks/signup-form-3.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport Link from \"next/link\";\nimport { Loader2 } from \"lucide-react\";\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/new-york/ui/form\";\nimport { Input } from \"@/registry/new-york/ui/input\";\nimport { Button } from \"@/registry/new-york/ui/button\";\nimport { Checkbox } from \"@/registry/new-york/ui/checkbox\";\nimport PasswordInput from \"@/registry/new-york/ui/password-input\";\nimport { useToast } from \"@/registry/new-york/hooks/use-toast\";\n\nconst formSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\n  password: z\n    .string()\n    .min(8, { message: \"Password must be at least 8 characters\" })\n    .regex(/[A-Z]/, {\n      message: \"Password must contain at least one uppercase letter\",\n    })\n    .regex(/[a-z]/, {\n      message: \"Password must contain at least one lowercase letter\",\n    })\n    .regex(/[0-9]/, { message: \"Password must contain at least one number\" }),\n  terms: z.boolean().refine((val) => val === true, {\n    message: \"You must accept the terms and conditions\",\n  }),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\ninterface SignupFormProps {\n  /**\n   * Optional callback that runs after successful form submission\n   */\n  onSignupSuccess?: (data: FormValues) => void;\n  /**\n   * Optional callback that runs if submission fails\n   */\n  onSignupError?: (error: unknown) => void;\n  /**\n   * Custom form action for server submission\n   */\n  formAction?: string;\n}\n\nexport default function SignupForm({\n  onSignupSuccess,\n  onSignupError,\n  formAction,\n}: SignupFormProps) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [password, setPassword] = React.useState(\"\");\n  const { toast } = useToast();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: \"\",\n      terms: false,\n    },\n    mode: \"onChange\", // Validate on change for better user experience\n  });\n\n  async function onSubmit(data: FormValues) {\n    try {\n      setIsLoading(true);\n\n      // If a form action is provided, the form will be submitted there\n      // Otherwise, we handle the submission client-side\n      if (!formAction) {\n        // Simulate API call (replace with your actual API call)\n        await new Promise((resolve) => setTimeout(resolve, 1500));\n        console.log(data);\n      }\n\n      // Show success toast\n      toast({\n        title: \"Account created successfully!\",\n        description: \"Welcome to our platform. You can now sign in.\",\n        variant: \"default\",\n      });\n\n      // Call success callback if provided\n      if (onSignupSuccess) {\n        onSignupSuccess(data);\n      }\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n\n      // Show error toast\n      toast({\n        title: \"Signup failed\",\n        description:\n          \"There was a problem creating your account. Please try again.\",\n        variant: \"destructive\",\n      });\n\n      // Call error callback if provided\n      if (onSignupError) {\n        onSignupError(error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center p-4 bg-gradient-to-br from-primary/5 via-background to-muted/50\">\n      <div className=\"w-full max-w-sm space-y-8\">\n        <div className=\"space-y-2 text-center\">\n          <div className=\"inline-block rounded-lg bg-primary/10 p-2\">\n            <div\n              className=\"h-6 w-6 rounded-full bg-primary\"\n              aria-hidden=\"true\"\n            />\n          </div>\n          <h1 className=\"text-3xl font-bold\">Create account</h1>\n          <p className=\"text-muted-foreground\">\n            Enter your email to get started\n          </p>\n        </div>\n\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className=\"space-y-6\"\n            action={formAction}\n            noValidate\n          >\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem className=\"space-y-1\">\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Input\n                        placeholder=\" \"\n                        className=\"pt-4 h-14\"\n                        id=\"email-input\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        aria-label=\"Email address\"\n                        aria-required=\"true\"\n                        {...field}\n                      />\n                      <FormLabel\n                        htmlFor=\"email-input\"\n                        className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground pointer-events-none transition-all duration-200 peer-focus:-translate-y-4 peer-focus:text-xs peer-focus:text-primary peer-[:not(:placeholder-shown)]:-translate-y-4 peer-[:not(:placeholder-shown)]:text-xs\"\n                      >\n                        Email address\n                      </FormLabel>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem className=\"space-y-1\">\n                  <FormControl>\n                    <PasswordInput\n                      value={password}\n                      onChange={(value) => {\n                        setPassword(value);\n                        field.onChange(value);\n                      }}\n                      aria-label=\"Password\"\n                      aria-required=\"true\"\n                      aria-describedby=\"password-requirements\"\n                    />\n                  </FormControl>\n                  <div\n                    id=\"password-requirements\"\n                    className=\"text-xs text-muted-foreground\"\n                  >\n                    Password must be at least 8 characters and include\n                    uppercase, lowercase, and numbers\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"terms\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      aria-required=\"true\"\n                      aria-label=\"Accept terms and conditions\"\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel className=\"text-sm font-medium leading-none cursor-pointer\">\n                      I agree to the{\" \"}\n                      <Link\n                        href=\"/terms\"\n                        className=\"text-primary hover:underline\"\n                      >\n                        terms of service\n                      </Link>{\" \"}\n                      and{\" \"}\n                      <Link\n                        href=\"/privacy\"\n                        className=\"text-primary hover:underline\"\n                      >\n                        privacy policy\n                      </Link>\n                    </FormLabel>\n                    <FormMessage />\n                  </div>\n                </FormItem>\n              )}\n            />\n\n            <Button\n              type=\"submit\"\n              className=\"w-full h-12\"\n              disabled={isLoading}\n              variant=\"shine\"\n              aria-label=\"Create account\"\n            >\n              {isLoading ? (\n                <>\n                  <Loader2\n                    className=\"mr-2 h-4 w-4 animate-spin\"\n                    aria-hidden=\"true\"\n                  />\n                  <span>Creating account...</span>\n                </>\n              ) : (\n                \"Create account\"\n              )}\n            </Button>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <span className=\"w-full border-t\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-background px-2 text-muted-foreground\">\n                  Or continue with\n                </span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-2\">\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"h-12 w-full\"\n                type=\"button\"\n                aria-label=\"Sign up with Google\"\n              >\n                <svg className=\"h-5 w-5\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  />\n                  <path\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  />\n                  <path\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  />\n                  <path\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  />\n                </svg>\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"h-12 w-full\"\n                type=\"button\"\n                aria-label=\"Sign up with Facebook\"\n              >\n                <svg\n                  className=\"h-5 w-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  aria-hidden=\"true\"\n                >\n                  <path d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\" />\n                </svg>\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"h-12 w-full\"\n                type=\"button\"\n                aria-label=\"Sign up with GitHub\"\n              >\n                <svg\n                  className=\"h-5 w-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  aria-hidden=\"true\"\n                >\n                  <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n                </svg>\n              </Button>\n            </div>\n\n            <p className=\"text-center text-sm text-muted-foreground\">\n              Already have an account?{\" \"}\n              <Link\n                href=\"/login\"\n                className=\"font-medium text-primary hover:underline\"\n              >\n                Sign in\n              </Link>\n            </p>\n          </form>\n        </Form>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}