{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "signup-form-3",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A signup form.",
  "registryDependencies": [
    "button",
    "input",
    "form",
    "checkbox",
    "use-toast",
    "password-input"
  ],
  "files": [
    {
      "path": "blocks/signup-form-3.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport Link from \"next/link\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\";\r\nimport { Input } from \"@/registry/new-york/ui/input\";\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\nimport { Checkbox } from \"@/registry/new-york/ui/checkbox\";\r\nimport PasswordInput from \"@/registry/new-york/ui/password-input\";\r\nimport { useToast } from \"@/registry/new-york/hooks/use-toast\";\r\n\r\nconst formSchema = z.object({\r\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\r\n  password: z\r\n    .string()\r\n    .min(8, { message: \"Password must be at least 8 characters\" })\r\n    .regex(/[A-Z]/, {\r\n      message: \"Password must contain at least one uppercase letter\",\r\n    })\r\n    .regex(/[a-z]/, {\r\n      message: \"Password must contain at least one lowercase letter\",\r\n    })\r\n    .regex(/[0-9]/, { message: \"Password must contain at least one number\" }),\r\n  terms: z.boolean().refine((val) => val === true, {\r\n    message: \"You must accept the terms and conditions\",\r\n  }),\r\n});\r\n\r\ntype FormValues = z.infer<typeof formSchema>;\r\n\r\ninterface SignupFormProps {\r\n  /**\r\n   * Optional callback that runs after successful form submission\r\n   */\r\n  onSignupSuccess?: (data: FormValues) => void;\r\n  /**\r\n   * Optional callback that runs if submission fails\r\n   */\r\n  onSignupError?: (error: unknown) => void;\r\n  /**\r\n   * Custom form action for server submission\r\n   */\r\n  formAction?: string;\r\n}\r\n\r\nexport default function SignupForm({\r\n  onSignupSuccess,\r\n  onSignupError,\r\n  formAction,\r\n}: SignupFormProps) {\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const { toast } = useToast();\r\n\r\n  const form = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      terms: false,\r\n    },\r\n    mode: \"onChange\", // Validate on change for better user experience\r\n  });\r\n\r\n  async function onSubmit(data: FormValues) {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      // If a form action is provided, the form will be submitted there\r\n      // Otherwise, we handle the submission client-side\r\n      if (!formAction) {\r\n        // Simulate API call (replace with your actual API call)\r\n        await new Promise((resolve) => setTimeout(resolve, 1500));\r\n        console.log(data);\r\n      }\r\n\r\n      // Show success toast\r\n      toast({\r\n        title: \"Account created successfully!\",\r\n        description: \"Welcome to our platform. You can now sign in.\",\r\n        variant: \"default\",\r\n      });\r\n\r\n      // Call success callback if provided\r\n      if (onSignupSuccess) {\r\n        onSignupSuccess(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error);\r\n\r\n      // Show error toast\r\n      toast({\r\n        title: \"Signup failed\",\r\n        description:\r\n          \"There was a problem creating your account. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n\r\n      // Call error callback if provided\r\n      if (onSignupError) {\r\n        onSignupError(error);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen w-full flex items-center justify-center p-4 bg-gradient-to-br from-primary/5 via-background to-muted/50\">\r\n      <div className=\"w-full max-w-sm space-y-8\">\r\n        <div className=\"space-y-2 text-center\">\r\n          <div className=\"inline-block rounded-lg bg-primary/10 p-2\">\r\n            <div\r\n              className=\"h-6 w-6 rounded-full bg-primary\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold\">Create account</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Enter your email to get started\r\n          </p>\r\n        </div>\r\n\r\n        <Form {...form}>\r\n          <form\r\n            onSubmit={form.handleSubmit(onSubmit)}\r\n            className=\"space-y-6\"\r\n            action={formAction}\r\n            noValidate\r\n          >\r\n            <FormField\r\n              control={form.control}\r\n              name=\"email\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"space-y-1\">\r\n                  <FormControl>\r\n                    <div className=\"relative\">\r\n                      <Input\r\n                        placeholder=\" \"\r\n                        className=\"pt-4 h-14\"\r\n                        id=\"email-input\"\r\n                        type=\"email\"\r\n                        autoComplete=\"email\"\r\n                        aria-label=\"Email address\"\r\n                        aria-required=\"true\"\r\n                        {...field}\r\n                      />\r\n                      <FormLabel\r\n                        htmlFor=\"email-input\"\r\n                        className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground pointer-events-none transition-all duration-200 peer-focus:-translate-y-4 peer-focus:text-xs peer-focus:text-primary peer-[:not(:placeholder-shown)]:-translate-y-4 peer-[:not(:placeholder-shown)]:text-xs\"\r\n                      >\r\n                        Email address\r\n                      </FormLabel>\r\n                    </div>\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"password\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"space-y-1\">\r\n                  <FormControl>\r\n                    <PasswordInput\r\n                      value={password}\r\n                      onChange={(value) => {\r\n                        setPassword(value);\r\n                        field.onChange(value);\r\n                      }}\r\n                      aria-label=\"Password\"\r\n                      aria-required=\"true\"\r\n                      aria-describedby=\"password-requirements\"\r\n                    />\r\n                  </FormControl>\r\n                  <div\r\n                    id=\"password-requirements\"\r\n                    className=\"text-xs text-muted-foreground\"\r\n                  >\r\n                    Password must be at least 8 characters and include\r\n                    uppercase, lowercase, and numbers\r\n                  </div>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"terms\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\r\n                  <FormControl>\r\n                    <Checkbox\r\n                      checked={field.value}\r\n                      onCheckedChange={field.onChange}\r\n                      aria-required=\"true\"\r\n                      aria-label=\"Accept terms and conditions\"\r\n                    />\r\n                  </FormControl>\r\n                  <div className=\"space-y-1 leading-none\">\r\n                    <FormLabel className=\"text-sm font-medium leading-none cursor-pointer\">\r\n                      I agree to the{\" \"}\r\n                      <Link\r\n                        href=\"/terms\"\r\n                        className=\"text-primary hover:underline\"\r\n                      >\r\n                        terms of service\r\n                      </Link>{\" \"}\r\n                      and{\" \"}\r\n                      <Link\r\n                        href=\"/privacy\"\r\n                        className=\"text-primary hover:underline\"\r\n                      >\r\n                        privacy policy\r\n                      </Link>\r\n                    </FormLabel>\r\n                    <FormMessage />\r\n                  </div>\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full h-12\"\r\n              disabled={isLoading}\r\n              variant=\"shine\"\r\n              aria-label=\"Create account\"\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Loader2\r\n                    className=\"mr-2 h-4 w-4 animate-spin\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  <span>Creating account...</span>\r\n                </>\r\n              ) : (\r\n                \"Create account\"\r\n              )}\r\n            </Button>\r\n\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-0 flex items-center\">\r\n                <span className=\"w-full border-t\" />\r\n              </div>\r\n              <div className=\"relative flex justify-center text-xs uppercase\">\r\n                <span className=\"bg-background px-2 text-muted-foreground\">\r\n                  Or continue with\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"h-12 w-full\"\r\n                type=\"button\"\r\n                aria-label=\"Sign up with Google\"\r\n              >\r\n                <svg className=\"h-5 w-5\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                  <path\r\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\r\n                    fill=\"#4285F4\"\r\n                  />\r\n                  <path\r\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\r\n                    fill=\"#34A853\"\r\n                  />\r\n                  <path\r\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\r\n                    fill=\"#FBBC05\"\r\n                  />\r\n                  <path\r\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\r\n                    fill=\"#EA4335\"\r\n                  />\r\n                </svg>\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"h-12 w-full\"\r\n                type=\"button\"\r\n                aria-label=\"Sign up with Facebook\"\r\n              >\r\n                <svg\r\n                  className=\"h-5 w-5\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\" />\r\n                </svg>\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"h-12 w-full\"\r\n                type=\"button\"\r\n                aria-label=\"Sign up with GitHub\"\r\n              >\r\n                <svg\r\n                  className=\"h-5 w-5\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n                </svg>\r\n              </Button>\r\n            </div>\r\n\r\n            <p className=\"text-center text-sm text-muted-foreground\">\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                href=\"/login\"\r\n                className=\"font-medium text-primary hover:underline\"\r\n              >\r\n                Sign in\r\n              </Link>\r\n            </p>\r\n          </form>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}