{
  "$schema": "http://localhost:3000/schema/registry-item.json",
  "name": "flex",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/flex.tsx",
      "content": "import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst flexVariants = cva(\"flex\", {\r\n  variants: {\r\n    direction: {\r\n      row: \"flex-row\",\r\n      column: \"flex-col\",\r\n      \"row-reverse\": \"flex-row-reverse\",\r\n      \"column-reverse\": \"flex-col-reverse\",\r\n    },\r\n    align: {\r\n      start: \"items-start\",\r\n      center: \"items-center\",\r\n      end: \"items-end\",\r\n      stretch: \"items-stretch\",\r\n      baseline: \"items-baseline\",\r\n    },\r\n    justify: {\r\n      start: \"justify-start\",\r\n      center: \"justify-center\",\r\n      end: \"justify-end\",\r\n      between: \"justify-between\",\r\n      around: \"justify-around\",\r\n      evenly: \"justify-evenly\",\r\n    },\r\n    gap: {\r\n      none: \"gap-0\",\r\n      sm: \"gap-2\",\r\n      md: \"gap-4\",\r\n      lg: \"gap-6\",\r\n      xl: \"gap-8\",\r\n    },\r\n    wrap: {\r\n      true: \"flex-wrap\",\r\n      false: \"flex-nowrap\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    direction: \"row\",\r\n    align: \"stretch\",\r\n    justify: \"start\",\r\n    gap: \"none\",\r\n    wrap: false,\r\n  },\r\n});\r\n\r\ninterface FlexProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof flexVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Flex = React.forwardRef<HTMLDivElement, FlexProps>(\r\n  (\r\n    { className, direction, align, justify, gap, wrap, asChild, ...props },\r\n    ref,\r\n  ) => {\r\n    const Comp = asChild ? Slot : \"div\";\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        className={cn(\r\n          flexVariants({\r\n            direction,\r\n            align,\r\n            justify,\r\n            gap,\r\n            wrap,\r\n            className,\r\n          }),\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nFlex.displayName = \"Flex\";\r\n\r\nexport { Flex };\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}