{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "scatter-chart",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "charts/scatter-chart.tsx",
      "content": "\"use client\";\r\n\r\nimport { TrendingUp } from \"lucide-react\";\r\nimport {\r\n  CartesianGrid,\r\n  Scatter,\r\n  ScatterChart,\r\n  XAxis,\r\n  YAxis,\r\n  ZAxis,\r\n} from \"recharts\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/new-york/ui/card\";\r\nimport {\r\n  type ChartConfig,\r\n  ChartContainer,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/new-york/ui/chart\";\r\n\r\nconst chartData = [\r\n  { category: \"A\", price: 120, rating: 4.5, sales: 240 },\r\n  { category: \"A\", price: 150, rating: 4.8, sales: 280 },\r\n  { category: \"A\", price: 90, rating: 4.2, sales: 200 },\r\n  { category: \"A\", price: 180, rating: 4.9, sales: 300 },\r\n  { category: \"A\", price: 110, rating: 4.3, sales: 220 },\r\n  { category: \"B\", price: 70, rating: 3.8, sales: 150 },\r\n  { category: \"B\", price: 60, rating: 3.5, sales: 130 },\r\n  { category: \"B\", price: 80, rating: 4.0, sales: 170 },\r\n  { category: \"B\", price: 50, rating: 3.2, sales: 120 },\r\n  { category: \"B\", price: 65, rating: 3.7, sales: 140 },\r\n  { category: \"C\", price: 200, rating: 4.7, sales: 180 },\r\n  { category: \"C\", price: 220, rating: 4.9, sales: 190 },\r\n  { category: \"C\", price: 190, rating: 4.6, sales: 170 },\r\n  { category: \"C\", price: 250, rating: 5.0, sales: 210 },\r\n  { category: \"C\", price: 230, rating: 4.8, sales: 200 },\r\n];\r\n\r\nconst chartConfig = {\r\n  A: {\r\n    label: \"Category A\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n  B: {\r\n    label: \"Category B\",\r\n    color: \"hsl(var(--chart-2))\",\r\n  },\r\n  C: {\r\n    label: \"Category C\",\r\n    color: \"hsl(var(--chart-3))\",\r\n  },\r\n} satisfies ChartConfig;\r\n\r\nexport function ScatterPlotChart() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Scatter Plot Chart</CardTitle>\r\n        <CardDescription>Price vs. Rating with Sales Volume</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <ChartContainer config={chartConfig}>\r\n          <ScatterChart\r\n            accessibilityLayer\r\n            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"price\"\r\n              name=\"Price\"\r\n              unit=\"$\"\r\n              label={{ value: \"Price ($)\", position: \"bottom\", offset: 0 }}\r\n              tickLine={false}\r\n              axisLine={false}\r\n            />\r\n            <YAxis\r\n              dataKey=\"rating\"\r\n              name=\"Rating\"\r\n              unit=\" stars\"\r\n              label={{ value: \"Rating\", angle: -90, position: \"left\" }}\r\n              tickLine={false}\r\n              axisLine={false}\r\n              domain={[3, 5]}\r\n            />\r\n            <ZAxis\r\n              dataKey=\"sales\"\r\n              range={[50, 400]}\r\n              name=\"Sales\"\r\n              unit=\" units\"\r\n            />\r\n            <ChartTooltip\r\n              cursor={{ strokeDasharray: \"3 3\" }}\r\n              content={\r\n                <ChartTooltipContent\r\n                  formatter={(value, name) => {\r\n                    if (name === \"Price\") return \"$\" + value;\r\n                    if (name === \"Rating\") return value + \" stars\";\r\n                    if (name === \"Sales\") return value + \" units\";\r\n                    return value;\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n            <Scatter\r\n              name=\"Category A\"\r\n              data={chartData.filter((item) => item.category === \"A\")}\r\n              fill=\"var(--color-A)\"\r\n            />\r\n            <Scatter\r\n              name=\"Category B\"\r\n              data={chartData.filter((item) => item.category === \"B\")}\r\n              fill=\"var(--color-B)\"\r\n            />\r\n            <Scatter\r\n              name=\"Category C\"\r\n              data={chartData.filter((item) => item.category === \"C\")}\r\n              fill=\"var(--color-C)\"\r\n            />\r\n            <ChartLegend content={<ChartLegendContent />} />\r\n          </ScatterChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n      <CardFooter className=\"flex-col items-start gap-2 text-sm\">\r\n        <div className=\"flex gap-2 font-medium leading-none\">\r\n          Higher ratings correlate with higher sales{\" \"}\r\n          <TrendingUp className=\"h-4 w-4\" />\r\n        </div>\r\n        <div className=\"leading-none text-muted-foreground\">\r\n          Bubble size represents sales volume\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:block",
      "target": ""
    }
  ],
  "categories": [
    "charts",
    "charts-scatter"
  ]
}