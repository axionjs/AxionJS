{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "newsletter-form-1",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A newsletter form component.",
  "registryDependencies": [
    "button",
    "input",
    "form",
    "use-toast"
  ],
  "files": [
    {
      "path": "blocks/newsletter-form-1.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\";\r\nimport { Input } from \"@/registry/new-york/ui/input\";\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\nimport { useToast } from \"@/registry/new-york/hooks/use-toast\";\r\n\r\nconst formSchema = z.object({\r\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\r\n});\r\n\r\ntype FormValues = z.infer<typeof formSchema>;\r\n\r\nexport default function NewsletterForm1() {\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const form = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n    },\r\n  });\r\n\r\n  async function onSubmit(data: FormValues) {\r\n    setIsLoading(true);\r\n    // Simulate API call\r\n    await new Promise((resolve) => setTimeout(resolve, 1500));\r\n    console.log(data);\r\n    setIsLoading(false);\r\n\r\n    toast({\r\n      title: \"Subscription successful!\",\r\n      description: \"You've been added to our newsletter.\",\r\n    });\r\n\r\n    form.reset();\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto p-4\">\r\n      <div className=\"text-center space-y-2 mb-4\">\r\n        <h2 className=\"text-2xl font-bold\">Subscribe to our newsletter</h2>\r\n        <p className=\"text-muted-foreground\">\r\n          Get the latest updates and news delivered to your inbox\r\n        </p>\r\n      </div>\r\n\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n          <FormField\r\n            control={form.control}\r\n            name=\"email\"\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormControl>\r\n                  <div className=\"flex space-x-2\">\r\n                    <Input\r\n                      placeholder=\"name@example.com\"\r\n                      className=\"flex-1\"\r\n                      {...field}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={isLoading}\r\n                      variant=\"ringHover\"\r\n                    >\r\n                      {isLoading ? (\r\n                        <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                      ) : (\r\n                        \"Subscribe\"\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n        </form>\r\n      </Form>\r\n\r\n      <p className=\"text-xs text-muted-foreground text-center mt-4\">\r\n        By subscribing, you agree to our Terms of Service and Privacy Policy.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}