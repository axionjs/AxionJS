{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "path": "ui/accordion.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\r\nimport { ChevronDown } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// 1. Accordion Root\r\n// ------------------------------------------------------------\r\n// Allows you to pass global accessibility attributes like\r\n// aria-label, aria-labelledby, role, etc. directly in usage.\r\nconst Accordion = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"w-full\", className)}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </AccordionPrimitive.Root>\r\n));\r\nAccordion.displayName = \"Accordion\";\r\n\r\n// 2. Accordion Item\r\n// ------------------------------------------------------------\r\n// A single collapsible item in the Accordion. Pass any additional\r\n// accessibility attributes (e.g., aria-label) from usage.\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </AccordionPrimitive.Item>\r\n));\r\nAccordionItem.displayName = \"AccordionItem\";\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header asChild>\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"group flex w-full items-center justify-between py-4 text-left text-sm font-medium\",\r\n        \"transition-all hover:underline\",\r\n        \"[&[data-state=open]>svg]:rotate-180\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown\r\n        className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n));\r\nAccordionTrigger.displayName = \"AccordionTrigger\";\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"overflow-hidden text-sm\",\r\n      // Radix UI data attributes for tailwind-based animations\r\n      \"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <div className=\"pb-4 pt-0\">{children}</div>\r\n  </AccordionPrimitive.Content>\r\n));\r\nAccordionContent.displayName = \"AccordionContent\";\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "keyframes": {
            "accordion-down": {
              "from": {
                "height": "0"
              },
              "to": {
                "height": "var(--radix-accordion-content-height)"
              }
            },
            "accordion-up": {
              "from": {
                "height": "var(--radix-accordion-content-height)"
              },
              "to": {
                "height": "0"
              }
            }
          },
          "animation": {
            "accordion-down": "accordion-down 0.2s ease-out",
            "accordion-up": "accordion-up 0.2s ease-out"
          }
        }
      }
    }
  }
}