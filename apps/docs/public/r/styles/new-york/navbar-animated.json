{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "navbar-animated",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A navbar animated component.",
  "registryDependencies": [
    "button",
    "input",
    "avatar",
    "sheet",
    "logo"
  ],
  "files": [
    {
      "path": "blocks/navbar-animated.tsx",
      "content": "\"use client\";\r\n\r\nimport { useState, useRef, useEffect, useId } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Moon, Sun, Search, Bell, Menu } from \"lucide-react\";\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\nimport { Input } from \"@/registry/new-york/ui/input\";\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/registry/new-york/ui/avatar\";\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetTrigger,\r\n} from \"@/registry/new-york/ui/sheet\";\r\nimport { Logo } from \"@/registry/new-york/ui/logo\";\r\n\r\nconst navItems = [\r\n  { name: \"Dashboard\", href: \"#dashboard\" },\r\n  { name: \"Projects\", href: \"#projects\" },\r\n  { name: \"Team\", href: \"#team\" },\r\n  { name: \"Analytics\", href: \"#analytics\" },\r\n  { name: \"Settings\", href: \"#settings\" },\r\n  { name: \"Help\", href: \"#help\" },\r\n];\r\n\r\nexport default function NavbarAnimated() {\r\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [hoverStyle, setHoverStyle] = useState({});\r\n  const [activeStyle, setActiveStyle] = useState({ left: \"0px\", width: \"0px\" });\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const tabRefs = useRef<(HTMLAnchorElement | null)[]>([]);\r\n  const searchInputId = useId();\r\n\r\n  useEffect(() => {\r\n    if (hoveredIndex !== null) {\r\n      const hoveredElement = tabRefs.current[hoveredIndex];\r\n      if (hoveredElement) {\r\n        const { offsetLeft, offsetWidth } = hoveredElement;\r\n        setHoverStyle({\r\n          left: `${offsetLeft}px`,\r\n          width: `${offsetWidth}px`,\r\n        });\r\n      }\r\n    }\r\n  }, [hoveredIndex]);\r\n\r\n  useEffect(() => {\r\n    const activeElement = tabRefs.current[activeIndex];\r\n    if (activeElement) {\r\n      const { offsetLeft, offsetWidth } = activeElement;\r\n      setActiveStyle({\r\n        left: `${offsetLeft}px`,\r\n        width: `${offsetWidth}px`,\r\n      });\r\n    }\r\n  }, [activeIndex]);\r\n\r\n  useEffect(() => {\r\n    // Initialize active indicator position\r\n    requestAnimationFrame(() => {\r\n      const firstElement = tabRefs.current[0];\r\n      if (firstElement) {\r\n        const { offsetLeft, offsetWidth } = firstElement;\r\n        setActiveStyle({\r\n          left: `${offsetLeft}px`,\r\n          width: `${offsetWidth}px`,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${isDarkMode ? \"dark\" : \"\"}`}>\r\n      <header className=\"sticky top-0 z-40 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n        <div className=\"container flex h-16 items-center justify-between\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n              <Logo />\r\n              <span className=\"hidden font-bold sm:inline-block\">Axion</span>\r\n            </Link>\r\n\r\n            {/* Mobile menu trigger */}\r\n            <Sheet>\r\n              <SheetTrigger asChild className=\"md:hidden\">\r\n                <Button variant=\"ghost\" size=\"icon\">\r\n                  <Menu className=\"h-5 w-5\" />\r\n                  <span className=\"sr-only\">Toggle menu</span>\r\n                </Button>\r\n              </SheetTrigger>\r\n              <SheetContent side=\"left\">\r\n                <div className=\"px-2 py-6\">\r\n                  <Link href=\"/\" className=\"flex items-center mb-6\">\r\n                    <Logo className=\"mr-2\" />\r\n                    <span className=\"font-bold\">Axion</span>\r\n                  </Link>\r\n                  <nav className=\"flex flex-col space-y-4\">\r\n                    {navItems.map((item, index) => (\r\n                      <Link\r\n                        key={index}\r\n                        href={item.href}\r\n                        className=\"px-3 py-2 text-base font-medium rounded-md hover:bg-muted\"\r\n                        onClick={() => setActiveIndex(index)}\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    ))}\r\n                  </nav>\r\n                </div>\r\n              </SheetContent>\r\n            </Sheet>\r\n\r\n            {/* Desktop navigation */}\r\n            <nav className=\"hidden md:flex items-center\">\r\n              <div className=\"relative\">\r\n                {/* Hover Highlight */}\r\n                <div\r\n                  className=\"absolute h-[30px] transition-all duration-300 ease-out bg-muted dark:bg-muted rounded-md flex items-center\"\r\n                  style={{\r\n                    ...hoverStyle,\r\n                    opacity: hoveredIndex !== null ? 1 : 0,\r\n                  }}\r\n                />\r\n\r\n                {/* Active Indicator */}\r\n                <div\r\n                  className=\"absolute bottom-[-18px] h-[2px] bg-foreground dark:bg-foreground transition-all duration-300 ease-out\"\r\n                  style={activeStyle}\r\n                />\r\n\r\n                {/* Navigation Items */}\r\n                <div className=\"relative flex space-x-1 items-center\">\r\n                  {navItems.map((item, index) => (\r\n                    <Link\r\n                      key={index}\r\n                      href={item.href}\r\n                      ref={(el) => (tabRefs.current[index] = el)}\r\n                      className={`px-3 py-2 cursor-pointer transition-colors duration-300 h-[30px] ${\r\n                        index === activeIndex\r\n                          ? \"text-foreground\"\r\n                          : \"text-muted-foreground\"\r\n                      }`}\r\n                      onMouseEnter={() => setHoveredIndex(index)}\r\n                      onMouseLeave={() => setHoveredIndex(null)}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveIndex(index);\r\n                      }}\r\n                    >\r\n                      <div className=\"text-sm font-medium whitespace-nowrap flex items-center justify-center h-full\">\r\n                        {item.name}\r\n                      </div>\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"hidden md:flex md:gap-4\">\r\n              <div className=\"relative\">\r\n                <label htmlFor={searchInputId} className=\"sr-only\">\r\n                  Search\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <Input\r\n                    id={searchInputId}\r\n                    type=\"search\"\r\n                    placeholder=\"Search...\"\r\n                    className=\"peer ps-9 w-[200px] md:w-[200px] lg:w-[280px]\"\r\n                  />\r\n                  <div className=\"text-muted-foreground/80 pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-3 peer-disabled:opacity-50\">\r\n                    <Search size={16} aria-hidden=\"true\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Button variant=\"ghost\" size=\"icon\" className=\"relative\">\r\n              <Bell className=\"h-5 w-5\" />\r\n              <span className=\"absolute top-1 right-1 h-2 w-2 rounded-full bg-primary\"></span>\r\n            </Button>\r\n\r\n            <Button variant=\"ghost\" size=\"icon\" onClick={toggleDarkMode}>\r\n              {isDarkMode ? (\r\n                <Sun className=\"h-5 w-5\" />\r\n              ) : (\r\n                <Moon className=\"h-5 w-5\" />\r\n              )}\r\n            </Button>\r\n\r\n            <Avatar className=\"h-8 w-8\">\r\n              <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"User\" />\r\n              <AvatarFallback>U</AvatarFallback>\r\n            </Avatar>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Page content */}\r\n      <main className=\"container py-8\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Animated Navbar</h1>\r\n        <p className=\"text-muted-foreground mb-4\">\r\n          This navbar features smooth animations for hover and active states.\r\n          Try hovering over the navigation items and clicking them to see the\r\n          animations.\r\n        </p>\r\n        <div className=\"grid gap-4 grid-cols-1 md:grid-cols-3\">\r\n          {[1, 2, 3, 4, 5, 6].map((i) => (\r\n            <div key={i} className=\"p-6 border rounded-lg bg-card\">\r\n              <h3 className=\"font-medium mb-2\">Content Block {i}</h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                This is a sample content block to demonstrate the navbar's\r\n                functionality.\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}