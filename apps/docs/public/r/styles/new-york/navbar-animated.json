{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "navbar-animated",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A navbar animated component.",
  "registryDependencies": [
    "button",
    "input",
    "avatar",
    "sheet",
    "logo"
  ],
  "files": [
    {
      "path": "blocks/navbar-animated.tsx",
      "content": "\"use client\";\n\nimport { useState, useRef, useEffect, useId } from \"react\";\nimport Link from \"next/link\";\nimport { Moon, Sun, Search, Bell, Menu } from \"lucide-react\";\nimport { Button } from \"@/registry/new-york/ui/button\";\nimport { Input } from \"@/registry/new-york/ui/input\";\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/new-york/ui/avatar\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTrigger,\n} from \"@/registry/new-york/ui/sheet\";\nimport { Logo } from \"@/registry/new-york/ui/logo\";\n\nconst navItems = [\n  { name: \"Dashboard\", href: \"#dashboard\" },\n  { name: \"Projects\", href: \"#projects\" },\n  { name: \"Team\", href: \"#team\" },\n  { name: \"Analytics\", href: \"#analytics\" },\n  { name: \"Settings\", href: \"#settings\" },\n  { name: \"Help\", href: \"#help\" },\n];\n\nexport default function NavbarAnimated() {\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [hoverStyle, setHoverStyle] = useState({});\n  const [activeStyle, setActiveStyle] = useState({ left: \"0px\", width: \"0px\" });\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const tabRefs = useRef<(HTMLAnchorElement | null)[]>([]);\n  const searchInputId = useId();\n\n  useEffect(() => {\n    if (hoveredIndex !== null) {\n      const hoveredElement = tabRefs.current[hoveredIndex];\n      if (hoveredElement) {\n        const { offsetLeft, offsetWidth } = hoveredElement;\n        setHoverStyle({\n          left: `${offsetLeft}px`,\n          width: `${offsetWidth}px`,\n        });\n      }\n    }\n  }, [hoveredIndex]);\n\n  useEffect(() => {\n    const activeElement = tabRefs.current[activeIndex];\n    if (activeElement) {\n      const { offsetLeft, offsetWidth } = activeElement;\n      setActiveStyle({\n        left: `${offsetLeft}px`,\n        width: `${offsetWidth}px`,\n      });\n    }\n  }, [activeIndex]);\n\n  useEffect(() => {\n    // Initialize active indicator position\n    requestAnimationFrame(() => {\n      const firstElement = tabRefs.current[0];\n      if (firstElement) {\n        const { offsetLeft, offsetWidth } = firstElement;\n        setActiveStyle({\n          left: `${offsetLeft}px`,\n          width: `${offsetWidth}px`,\n        });\n      }\n    });\n  }, []);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? \"dark\" : \"\"}`}>\n      <header className=\"sticky top-0 z-40 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n        <div className=\"container flex h-16 items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\n              <Logo />\n              <span className=\"hidden font-bold sm:inline-block\">Axion</span>\n            </Link>\n\n            {/* Mobile menu trigger */}\n            <Sheet>\n              <SheetTrigger asChild className=\"md:hidden\">\n                <Button variant=\"ghost\" size=\"icon\">\n                  <Menu className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">Toggle menu</span>\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"left\">\n                <div className=\"px-2 py-6\">\n                  <Link href=\"/\" className=\"flex items-center mb-6\">\n                    <Logo className=\"mr-2\" />\n                    <span className=\"font-bold\">Axion</span>\n                  </Link>\n                  <nav className=\"flex flex-col space-y-4\">\n                    {navItems.map((item, index) => (\n                      <Link\n                        key={index}\n                        href={item.href}\n                        className=\"px-3 py-2 text-base font-medium rounded-md hover:bg-muted\"\n                        onClick={() => setActiveIndex(index)}\n                      >\n                        {item.name}\n                      </Link>\n                    ))}\n                  </nav>\n                </div>\n              </SheetContent>\n            </Sheet>\n\n            {/* Desktop navigation */}\n            <nav className=\"hidden md:flex items-center\">\n              <div className=\"relative\">\n                {/* Hover Highlight */}\n                <div\n                  className=\"absolute h-[30px] transition-all duration-300 ease-out bg-muted dark:bg-muted rounded-md flex items-center\"\n                  style={{\n                    ...hoverStyle,\n                    opacity: hoveredIndex !== null ? 1 : 0,\n                  }}\n                />\n\n                {/* Active Indicator */}\n                <div\n                  className=\"absolute bottom-[-18px] h-[2px] bg-foreground dark:bg-foreground transition-all duration-300 ease-out\"\n                  style={activeStyle}\n                />\n\n                {/* Navigation Items */}\n                <div className=\"relative flex space-x-1 items-center\">\n                  {navItems.map((item, index) => (\n                    <Link\n                      key={index}\n                      href={item.href}\n                      ref={(el) => (tabRefs.current[index] = el)}\n                      className={`px-3 py-2 cursor-pointer transition-colors duration-300 h-[30px] ${\n                        index === activeIndex\n                          ? \"text-foreground\"\n                          : \"text-muted-foreground\"\n                      }`}\n                      onMouseEnter={() => setHoveredIndex(index)}\n                      onMouseLeave={() => setHoveredIndex(null)}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setActiveIndex(index);\n                      }}\n                    >\n                      <div className=\"text-sm font-medium whitespace-nowrap flex items-center justify-center h-full\">\n                        {item.name}\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </nav>\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            <div className=\"hidden md:flex md:gap-4\">\n              <div className=\"relative\">\n                <label htmlFor={searchInputId} className=\"sr-only\">\n                  Search\n                </label>\n                <div className=\"relative\">\n                  <Input\n                    id={searchInputId}\n                    type=\"search\"\n                    placeholder=\"Search...\"\n                    className=\"peer ps-9 w-[200px] md:w-[200px] lg:w-[280px]\"\n                  />\n                  <div className=\"text-muted-foreground/80 pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-3 peer-disabled:opacity-50\">\n                    <Search size={16} aria-hidden=\"true\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <Button variant=\"ghost\" size=\"icon\" className=\"relative\">\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute top-1 right-1 h-2 w-2 rounded-full bg-primary\"></span>\n            </Button>\n\n            <Button variant=\"ghost\" size=\"icon\" onClick={toggleDarkMode}>\n              {isDarkMode ? (\n                <Sun className=\"h-5 w-5\" />\n              ) : (\n                <Moon className=\"h-5 w-5\" />\n              )}\n            </Button>\n\n            <Avatar className=\"h-8 w-8\">\n              <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"User\" />\n              <AvatarFallback>U</AvatarFallback>\n            </Avatar>\n          </div>\n        </div>\n      </header>\n\n      {/* Page content */}\n      <main className=\"container py-8\">\n        <h1 className=\"text-3xl font-bold mb-6\">Animated Navbar</h1>\n        <p className=\"text-muted-foreground mb-4\">\n          This navbar features smooth animations for hover and active states.\n          Try hovering over the navigation items and clicking them to see the\n          animations.\n        </p>\n        <div className=\"grid gap-4 grid-cols-1 md:grid-cols-3\">\n          {[1, 2, 3, 4, 5, 6].map((i) => (\n            <div key={i} className=\"p-6 border rounded-lg bg-card\">\n              <h3 className=\"font-medium mb-2\">Content Block {i}</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                This is a sample content block to demonstrate the navbar's\n                functionality.\n              </p>\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}