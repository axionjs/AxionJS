{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "pricing-comparison",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A pricing comparison component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "button",
    "badge",
    "table",
    "use-media-query"
  ],
  "files": [
    {
      "path": "blocks/pricing-comparison.tsx",
      "content": "\"use client\";\r\n\r\nimport { Badge } from \"@/registry/new-york/ui/badge\";\r\nimport { Button } from \"@/registry/new-york/ui/button\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/registry/new-york/ui/table\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Check, X } from \"lucide-react\";\r\nimport { motion } from \"motion/react\";\r\nimport { useMediaQuery } from \"@/registry/new-york/hooks/use-media-query\";\r\n\r\nconst plans = [\r\n  {\r\n    name: \"Free\",\r\n    price: 0,\r\n    description: \"Basic features for personal projects\",\r\n    features: {\r\n      \"AI-generated portraits\": \"5\",\r\n      \"Turnaround time\": \"24 hours\",\r\n      \"Style options\": \"1\",\r\n      \"Filter options\": \"1\",\r\n      \"Retouch credits\": \"0\",\r\n      \"Commercial usage\": false,\r\n      \"Priority support\": false,\r\n      \"Custom branding\": false,\r\n      \"API access\": false,\r\n    },\r\n    buttonText: \"Start for free\",\r\n  },\r\n  {\r\n    name: \"Pro\",\r\n    price: 39,\r\n    isRecommended: true,\r\n    description: \"Everything you need for professional work\",\r\n    features: {\r\n      \"AI-generated portraits\": \"50\",\r\n      \"Turnaround time\": \"3 hours\",\r\n      \"Style options\": \"5\",\r\n      \"Filter options\": \"5\",\r\n      \"Retouch credits\": \"5\",\r\n      \"Commercial usage\": true,\r\n      \"Priority support\": true,\r\n      \"Custom branding\": false,\r\n      \"API access\": false,\r\n    },\r\n    buttonText: \"Upgrade to Pro\",\r\n    isPopular: true,\r\n  },\r\n  {\r\n    name: \"Enterprise\",\r\n    price: 99,\r\n    description: \"Advanced features for teams and businesses\",\r\n    features: {\r\n      \"AI-generated portraits\": \"Unlimited\",\r\n      \"Turnaround time\": \"1 hour\",\r\n      \"Style options\": \"10\",\r\n      \"Filter options\": \"10\",\r\n      \"Retouch credits\": \"20\",\r\n      \"Commercial usage\": true,\r\n      \"Priority support\": true,\r\n      \"Custom branding\": true,\r\n      \"API access\": true,\r\n    },\r\n    buttonText: \"Contact sales\",\r\n  },\r\n];\r\n\r\nconst featureLabels = {\r\n  \"AI-generated portraits\": \"Number of portraits you can generate per month\",\r\n  \"Turnaround time\": \"Average time to receive your generated portraits\",\r\n  \"Style options\": \"Number of different artistic styles available\",\r\n  \"Filter options\": \"Number of different filters to enhance your portraits\",\r\n  \"Retouch credits\": \"Credits to request manual retouching by our designers\",\r\n  \"Commercial usage\": \"Use generated portraits for commercial purposes\",\r\n  \"Priority support\": \"Get faster responses from our support team\",\r\n  \"Custom branding\": \"Add your own branding to the generated portraits\",\r\n  \"API access\": \"Integrate with our API for automated workflows\",\r\n};\r\n\r\nexport default function PricingComparison() {\r\n  const isDesktop = useMediaQuery(\"(min-width: 1024px)\");\r\n\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    show: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n  };\r\n\r\n  // Render mobile cards view\r\n  const renderMobileView = () => (\r\n    <div className=\"space-y-8\">\r\n      {plans.map((plan) => (\r\n        <motion.div\r\n          key={plan.name}\r\n          className={cn(\"relative border rounded-lg p-6\", {\r\n            \"border-[2px] border-primary\": plan.isPopular,\r\n          })}\r\n          variants={item}\r\n          whileHover={{ y: -5, transition: { duration: 0.2 } }}\r\n        >\r\n          {plan.isPopular && (\r\n            <Badge className=\"absolute top-2 left-2 bg-primary text-primary-foreground\">\r\n              Most Popular\r\n            </Badge>\r\n          )}\r\n          <h3 className=\"text-lg font-medium\">{plan.name}</h3>\r\n          <p className=\"mt-2 text-4xl font-bold\">\r\n            ${plan.price}\r\n            <span className=\"text-sm text-muted-foreground font-normal ml-1\">\r\n              /month\r\n            </span>\r\n          </p>\r\n          <p className=\"mt-4 font-medium text-muted-foreground\">\r\n            {plan.description}\r\n          </p>\r\n          <Button\r\n            variant={plan.isPopular ? \"default\" : \"outline\"}\r\n            size=\"lg\"\r\n            className=\"w-full mt-6\"\r\n          >\r\n            {plan.buttonText}\r\n          </Button>\r\n\r\n          <div className=\"mt-6 space-y-4\">\r\n            <h4 className=\"font-medium\">Features</h4>\r\n            <div className=\"space-y-3\">\r\n              {Object.entries(plan.features).map(([feature, value]) => (\r\n                <div\r\n                  key={feature}\r\n                  className=\"flex justify-between items-center py-2 border-b\"\r\n                >\r\n                  <span className=\"text-sm\">{feature}</span>\r\n                  <span className=\"font-medium\">\r\n                    {typeof value === \"boolean\" ? (\r\n                      value ? (\r\n                        <Check className=\"h-5 w-5 text-green-600\" />\r\n                      ) : (\r\n                        <X className=\"h-5 w-5 text-red-500\" />\r\n                      )\r\n                    ) : (\r\n                      value\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  // Render desktop table view\r\n  const renderDesktopView = () => (\r\n    <div className=\"overflow-x-auto\">\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead className=\"w-[250px]\">Features</TableHead>\r\n            {plans.map((plan) => (\r\n              <TableHead key={plan.name} className=\"text-center\">\r\n                <div\r\n                  className={cn(\r\n                    \"relative pb-8 pt-2\",\r\n                    plan.isPopular ? \"text-primary\" : \"\",\r\n                  )}\r\n                >\r\n                  {plan.isPopular && (\r\n                    <Badge className=\"absolute top-2 left-1/2 -translate-x-1/2 bg-primary text-primary-foreground\">\r\n                      Most Popular\r\n                    </Badge>\r\n                  )}\r\n                  <div className=\"text-lg font-medium\">{plan.name}</div>\r\n                  <div className=\"mt-2 text-3xl font-bold\">\r\n                    ${plan.price}\r\n                    <span className=\"text-xs text-muted-foreground font-normal\">\r\n                      /month\r\n                    </span>\r\n                  </div>\r\n                  <Button\r\n                    variant={plan.isPopular ? \"default\" : \"outline\"}\r\n                    className=\"mt-4 w-full\"\r\n                  >\r\n                    {plan.buttonText}\r\n                  </Button>\r\n                </div>\r\n              </TableHead>\r\n            ))}\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {Object.entries(featureLabels).map(\r\n            ([feature, description], index) => (\r\n              <TableRow key={feature}>\r\n                <TableCell className=\"font-medium\">\r\n                  <div>\r\n                    <div>{feature}</div>\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      {description}\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                {plans.map((plan) => {\r\n                  const value =\r\n                    plan.features[feature as keyof typeof plan.features];\r\n                  return (\r\n                    <TableCell\r\n                      key={`${plan.name}-${feature}`}\r\n                      className=\"text-center\"\r\n                    >\r\n                      <motion.div\r\n                        initial={{ scale: 0.8, opacity: 0 }}\r\n                        animate={{ scale: 1, opacity: 1 }}\r\n                        transition={{ delay: 0.05 * index }}\r\n                        className=\"flex justify-center\"\r\n                      >\r\n                        {typeof value === \"boolean\" ? (\r\n                          value ? (\r\n                            <Check className=\"h-5 w-5 text-green-600\" />\r\n                          ) : (\r\n                            <X className=\"h-5 w-5 text-red-500\" />\r\n                          )\r\n                        ) : (\r\n                          <span className=\"font-medium\">{value}</span>\r\n                        )}\r\n                      </motion.div>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ),\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center py-12 px-4 md:px-6\">\r\n      <motion.h1\r\n        className=\"text-5xl font-bold text-center tracking-tight mb-4\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        Compare Plans\r\n      </motion.h1>\r\n      <motion.p\r\n        className=\"text-xl text-center text-muted-foreground max-w-2xl mb-12\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.2 }}\r\n      >\r\n        Choose the perfect plan for your needs. All plans include access to our\r\n        AI portrait generator.\r\n      </motion.p>\r\n\r\n      <motion.div\r\n        className=\"w-full max-w-6xl\"\r\n        variants={container}\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n      >\r\n        {isDesktop ? renderDesktopView() : renderMobileView()}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}