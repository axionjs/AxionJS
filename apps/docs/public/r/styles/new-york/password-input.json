{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "password-input",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "registryDependencies": [
    "input"
  ],
  "files": [
    {
      "path": "ui/password-input.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Input } from \"@/registry/new-york/ui/input\";\n\ninterface PasswordRequirement {\n  regex: RegExp;\n  text: string;\n}\n\ninterface StrengthCheck {\n  met: boolean;\n  text: string;\n}\n\ninterface PasswordInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  error?: string;\n}\n\nconst checkStrength = (password: string): StrengthCheck[] => {\n  const requirements: PasswordRequirement[] = [\n    { regex: /.{8,}/, text: \"At least 8 characters\" },\n    { regex: /[0-9]/, text: \"At least 1 number\" },\n    { regex: /[a-z]/, text: \"At least 1 lowercase letter\" },\n    { regex: /[A-Z]/, text: \"At least 1 uppercase letter\" },\n  ];\n\n  return requirements.map((req) => ({\n    met: req.regex.test(password),\n    text: req.text,\n  }));\n};\n\nconst getStrengthColor = (score: number): string => {\n  if (score === 0) return \"bg-border\";\n  if (score <= 1) return \"bg-red-500\";\n  if (score <= 2) return \"bg-orange-500\";\n  if (score === 3) return \"bg-amber-500\";\n  return \"bg-emerald-500\";\n};\n\nconst getStrengthText = (score: number): string => {\n  if (score === 0) return \"Enter a password\";\n  if (score <= 2) return \"Weak password\";\n  if (score === 3) return \"Medium password\";\n  return \"Strong password\";\n};\n\nconst PasswordInput: React.FC<PasswordInputProps> = ({\n  value,\n  onChange,\n  error,\n}) => {\n  const strength = checkStrength(value);\n  const strengthScore = strength.filter((req) => req.met).length;\n\n  return (\n    <div>\n      <Input\n        id=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={value}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          onChange(e.target.value)\n        }\n      />\n      <div\n        className=\"mt-3 h-1 w-full overflow-hidden rounded-full bg-border\"\n        role=\"progressbar\"\n        aria-label=\"Password strength\"\n        aria-valuenow={strengthScore}\n        aria-valuemin={0}\n        aria-valuemax={4}\n      >\n        <div\n          className={`h-full ${getStrengthColor(\n            strengthScore,\n          )} transition-all duration-500`}\n          style={{ width: `${(strengthScore / 4) * 100}%` }}\n        ></div>\n      </div>\n      <p className=\"mt-2 text-sm\">{getStrengthText(strengthScore)}</p>\n      <ul className=\"mt-2 space-y-1 text-xs\">\n        {strength.map((req, index) => (\n          <li\n            key={index}\n            className={`flex items-center gap-2 ${\n              req.met ? \"text-emerald-500\" : \"text-muted-foreground\"\n            }`}\n          >\n            {req.met ? \"✓\" : \"✕\"} {req.text}\n          </li>\n        ))}\n      </ul>\n      {error && <p className=\"mt-1 text-sm text-destructive\">{error}</p>}\n    </div>\n  );\n};\n\nexport default PasswordInput;\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}