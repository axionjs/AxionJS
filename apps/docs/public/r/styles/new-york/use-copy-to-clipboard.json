{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "use-copy-to-clipboard",
  "type": "registry:hook",
  "author": "axionjs (https://www.axionjs.com)",
  "files": [
    {
      "path": "hooks/use-copy-to-clipboard.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\ninterface UseCopyToClipboardReturn {\r\n  value: string;\r\n  copy: (text: string) => Promise<boolean>;\r\n  isCopied: boolean;\r\n}\r\n\r\n/**\r\n * A hook that provides copy to clipboard functionality\r\n * @returns An object with the copied value, copy function, and isCopied state\r\n */\r\nexport function useCopyToClipboard(): UseCopyToClipboardReturn {\r\n  const [value, setValue] = React.useState<string>(\"\");\r\n  const [isCopied, setIsCopied] = React.useState<boolean>(false);\r\n\r\n  const copy = React.useCallback(async (text: string) => {\r\n    if (!navigator?.clipboard) {\r\n      console.warn(\"Clipboard not supported\");\r\n      return false;\r\n    }\r\n\r\n    // Try to save to clipboard then save it in the state\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setValue(text);\r\n      setIsCopied(true);\r\n\r\n      // Reset the isCopied state after 2 seconds\r\n      setTimeout(() => {\r\n        setIsCopied(false);\r\n      }, 2000);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.warn(\"Copy failed\", error);\r\n      setValue(\"\");\r\n      setIsCopied(false);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  return { value, copy, isCopied };\r\n}\r\n",
      "type": "registry:hook",
      "target": ""
    }
  ]
}