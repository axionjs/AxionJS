{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "password-input",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "registryDependencies": [
    "input"
  ],
  "files": [
    {
      "path": "ui/password-input.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Input } from \"@/registry/default/ui/input\";\r\n\r\ninterface PasswordRequirement {\r\n  regex: RegExp;\r\n  text: string;\r\n}\r\n\r\ninterface StrengthCheck {\r\n  met: boolean;\r\n  text: string;\r\n}\r\n\r\ninterface PasswordInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  error?: string;\r\n}\r\n\r\nconst checkStrength = (password: string): StrengthCheck[] => {\r\n  const requirements: PasswordRequirement[] = [\r\n    { regex: /.{8,}/, text: \"At least 8 characters\" },\r\n    { regex: /[0-9]/, text: \"At least 1 number\" },\r\n    { regex: /[a-z]/, text: \"At least 1 lowercase letter\" },\r\n    { regex: /[A-Z]/, text: \"At least 1 uppercase letter\" },\r\n  ];\r\n\r\n  return requirements.map((req) => ({\r\n    met: req.regex.test(password),\r\n    text: req.text,\r\n  }));\r\n};\r\n\r\nconst getStrengthColor = (score: number): string => {\r\n  if (score === 0) return \"bg-border\";\r\n  if (score <= 1) return \"bg-red-500\";\r\n  if (score <= 2) return \"bg-orange-500\";\r\n  if (score === 3) return \"bg-amber-500\";\r\n  return \"bg-emerald-500\";\r\n};\r\n\r\nconst getStrengthText = (score: number): string => {\r\n  if (score === 0) return \"Enter a password\";\r\n  if (score <= 2) return \"Weak password\";\r\n  if (score === 3) return \"Medium password\";\r\n  return \"Strong password\";\r\n};\r\n\r\nconst PasswordInput: React.FC<PasswordInputProps> = ({\r\n  value,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  const strength = checkStrength(value);\r\n  const strengthScore = strength.filter((req) => req.met).length;\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        id=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        value={value}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          onChange(e.target.value)\r\n        }\r\n      />\r\n      <div\r\n        className=\"mt-3 h-1 w-full overflow-hidden rounded-full bg-border\"\r\n        role=\"progressbar\"\r\n        aria-label=\"Password strength\"\r\n        aria-valuenow={strengthScore}\r\n        aria-valuemin={0}\r\n        aria-valuemax={4}\r\n      >\r\n        <div\r\n          className={`h-full ${getStrengthColor(\r\n            strengthScore,\r\n          )} transition-all duration-500`}\r\n          style={{ width: `${(strengthScore / 4) * 100}%` }}\r\n        ></div>\r\n      </div>\r\n      <p className=\"mt-2 text-sm\">{getStrengthText(strengthScore)}</p>\r\n      <ul className=\"mt-2 space-y-1 text-xs\">\r\n        {strength.map((req, index) => (\r\n          <li\r\n            key={index}\r\n            className={`flex items-center gap-2 ${\r\n              req.met ? \"text-emerald-500\" : \"text-muted-foreground\"\r\n            }`}\r\n          >\r\n            {req.met ? \"✓\" : \"✕\"} {req.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {error && <p className=\"mt-1 text-sm text-destructive\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}