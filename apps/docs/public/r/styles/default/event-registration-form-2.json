{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "event-registration-form-2",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A form for event registration.",
  "registryDependencies": [
    "button",
    "input",
    "form",
    "card",
    "textarea",
    "checkbox",
    "select",
    "use-toast",
    "separator"
  ],
  "files": [
    {
      "path": "blocks/event-registration-form-2.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Loader2, Calendar, MapPin, Clock, Users } from \"lucide-react\";\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\";\nimport { Input } from \"@/registry/default/ui/input\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Textarea } from \"@/registry/default/ui/textarea\";\nimport { useToast } from \"@/lib/use-toast\";\nimport { Checkbox } from \"@/registry/default/ui/checkbox\";\nimport { Separator } from \"@/registry/default/ui/separator\";\n\nconst formSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters\" }),\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\n  company: z.string().optional(),\n  jobTitle: z.string().optional(),\n  specialRequirements: z.string().optional(),\n  agreeTerms: z.boolean().refine((val) => val === true, {\n    message: \"You must agree to the terms and conditions\",\n  }),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function EventRegistrationForm2() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      company: \"\",\n      jobTitle: \"\",\n      specialRequirements: \"\",\n      agreeTerms: false,\n    },\n  });\n\n  async function onSubmit(data: FormValues) {\n    setIsLoading(true);\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 1500));\n    console.log(data);\n    setIsLoading(false);\n\n    toast({\n      title: \"Registration successful!\",\n      description: \"You've been registered for the event.\",\n    });\n\n    form.reset();\n  }\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto grid md:grid-cols-5 gap-6\">\n      {/* Event details */}\n      <div className=\"md:col-span-2 space-y-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Tech Conference 2025</h2>\n          <p className=\"text-muted-foreground mt-1\">\n            Join us for the biggest tech event of the year\n          </p>\n        </div>\n\n        <div className=\"aspect-video relative rounded-lg overflow-hidden\">\n          <img\n            src=\"/placeholder.svg?height=300&width=500\"\n            alt=\"Event banner\"\n            className=\"object-cover w-full h-full\"\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-3\">\n            <Calendar className=\"h-5 w-5 text-primary\" />\n            <div>\n              <p className=\"font-medium\">April 15-16, 2025</p>\n              <p className=\"text-sm text-muted-foreground\">9:00 AM - 5:00 PM</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-3\">\n            <MapPin className=\"h-5 w-5 text-primary\" />\n            <div>\n              <p className=\"font-medium\">Tech Convention Center</p>\n              <p className=\"text-sm text-muted-foreground\">\n                123 Innovation Blvd, San Francisco, CA\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-3\">\n            <Clock className=\"h-5 w-5 text-primary\" />\n            <div>\n              <p className=\"font-medium\">2 Full Days</p>\n              <p className=\"text-sm text-muted-foreground\">\n                Over 50 sessions and workshops\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-3\">\n            <Users className=\"h-5 w-5 text-primary\" />\n            <div>\n              <p className=\"font-medium\">Limited Capacity</p>\n              <p className=\"text-sm text-muted-foreground\">\n                Only 500 spots available\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <p className=\"font-medium\">Ticket includes:</p>\n          <ul className=\"mt-2 space-y-1 text-sm\">\n            <li className=\"flex items-center gap-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-4 h-4 text-primary\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              Access to all keynotes and sessions\n            </li>\n            <li className=\"flex items-center gap-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-4 h-4 text-primary\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              Lunch and refreshments\n            </li>\n            <li className=\"flex items-center gap-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-4 h-4 text-primary\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              Networking opportunities\n            </li>\n            <li className=\"flex items-center gap-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-4 h-4 text-primary\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              Conference materials\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      {/* Registration form */}\n      <div className=\"md:col-span-3 p-6 border rounded-lg shadow-sm\">\n        <h2 className=\"text-xl font-bold mb-6\">Register for the event</h2>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Full Name</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"John Doe\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"name@example.com\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Company (Optional)</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Company name\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Job Title (Optional)</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Your role\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"specialRequirements\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Special Requirements (Optional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Dietary restrictions, accessibility needs, etc.\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Separator />\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-lg font-bold\">Total</div>\n              <div className=\"text-lg font-bold\">$299.00</div>\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"agreeTerms\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel>\n                      I agree to the event terms and conditions\n                    </FormLabel>\n                    <FormMessage />\n                  </div>\n                </FormItem>\n              )}\n            />\n\n            <Button\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n              variant=\"linkHover\"\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Processing...\n                </>\n              ) : (\n                \"Complete Registration\"\n              )}\n            </Button>\n          </form>\n        </Form>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}