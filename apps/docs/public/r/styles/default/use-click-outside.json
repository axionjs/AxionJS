{
  "$schema": "https://www.axionjs.com/schema/registry-item.json",
  "name": "use-click-outside",
  "type": "registry:hook",
  "author": "axionjs (https://www.axionjs.com)",
  "files": [
    {
      "path": "hooks/use-click-outside.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\n/**\r\n * A hook that detects clicks outside of an element\r\n * @param handler The callback to run when a click outside is detected\r\n * @param active Whether the detection is active\r\n * @returns A ref to attach to the element\r\n */\r\nexport function useClickOutside<T extends HTMLElement = HTMLElement>(\r\n  handler: () => void,\r\n  active = true,\r\n): React.RefObject<T> {\r\n  const ref = React.useRef<T>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!active || typeof window === \"undefined\") return;\r\n\r\n    const handleClick = (e: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(e.target as Node)) {\r\n        handler();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    document.addEventListener(\"touchstart\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n      document.removeEventListener(\"touchstart\", handleClick);\r\n    };\r\n  }, [handler, active]);\r\n\r\n  return ref;\r\n}\r\n",
      "type": "registry:hook",
      "target": ""
    }
  ]
}