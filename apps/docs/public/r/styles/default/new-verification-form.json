{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "new-verification-form",
  "type": "registry:auth",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "Form for verifying a user's email address.",
  "dependencies": [
    "react-spinners"
  ],
  "files": [
    {
      "path": "auth/components/new-verification-form.tsx",
      "content": "\"use client\";\r\n\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { useSearchParams, useRouter } from \"next/navigation\";\r\nimport { CardWrapper } from \"./card-wrapper\";\r\nimport { FormSuccess } from \"@/registry/default/auth/components/form-success\";\r\nimport { FormError } from \"@/registry/default/auth/components/form-error\";\r\nimport {\r\n  newVerification,\r\n  verifyEmailChange,\r\n} from \"@/registry/default/auth/actions/auth-actions\";\r\n\r\nexport function NewVerificationForm() {\r\n  const router = useRouter();\r\n  const [error, setError] = useState<string | undefined>();\r\n  const [success, setSuccess] = useState<string | undefined>();\r\n\r\n  const searchParams = useSearchParams();\r\n  const token = searchParams.get(\"token\");\r\n  const isEmailChange = searchParams.get(\"emailChange\") === \"true\";\r\n\r\n  const onsubmit = useCallback(() => {\r\n    if (success || error) return;\r\n\r\n    if (!token) {\r\n      setError(\"Missing token!\");\r\n      return;\r\n    }\r\n\r\n    if (isEmailChange) {\r\n      verifyEmailChange(token)\r\n        .then((data) => {\r\n          setSuccess(data.success);\r\n          setError(data.error);\r\n          if (data.success) {\r\n            // Refresh the page after a short delay to reflect changes\r\n            setTimeout(() => {\r\n              router.refresh();\r\n            }, 2000);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setError(\"Something went wrong!\");\r\n        });\r\n    } else {\r\n      newVerification(token)\r\n        .then((data) => {\r\n          setSuccess(data.success);\r\n          setError(data.error);\r\n          if (data.success) {\r\n            // Refresh the page after a short delay to reflect changes\r\n            setTimeout(() => {\r\n              router.refresh();\r\n            }, 2000);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setError(\"Something went wrong!\");\r\n        });\r\n    }\r\n  }, [token, success, error, isEmailChange, router]);\r\n\r\n  useEffect(() => {\r\n    onsubmit();\r\n  }, [onsubmit]);\r\n\r\n  return (\r\n    <CardWrapper\r\n      mainHeaderLabel=\"Email Verification\"\r\n      subHeaderLabel={\r\n        isEmailChange\r\n          ? \"Confirming your email change\"\r\n          : \"Confirming your verification\"\r\n      }\r\n      backButtonHref={isEmailChange ? \"/profile\" : \"/login\"}\r\n      backButtonLabel={isEmailChange ? \"Back to Profile\" : \"Back to Login\"}\r\n    >\r\n      <div className=\"flex w-full items-center justify-center\">\r\n        {!success && !error && <BeatLoader />}\r\n        <FormSuccess message={success} />\r\n        {!success && <FormError message={error} />}\r\n      </div>\r\n    </CardWrapper>\r\n  );\r\n}\r\n",
      "type": "registry:auth_comp",
      "target": ""
    }
  ]
}