{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "login-01",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A simple login page.",
  "dependencies": [
    "react-icons"
  ],
  "registryDependencies": [
    "button",
    "card",
    "input",
    "form"
  ],
  "files": [
    {
      "path": "blocks/login-01/page.tsx",
      "content": "import { LoginForm } from \"@/registry/default/blocks/login-01/components/login-form\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <div className=\"flex min-h-svh w-full items-center justify-center p-6 md:p-10\">\r\n      <div className=\"w-full max-w-sm\">\r\n        <LoginForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "app/login/page.tsx"
    },
    {
      "path": "blocks/login-01/components/login-form.tsx",
      "content": "\"use client\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport * as z from \"zod\";\r\nimport {\r\n  Form,\r\n  FormField,\r\n  FormControl,\r\n  FormLabel,\r\n  FormItem,\r\n  FormMessage,\r\n} from \"@/registry/default/ui/form\";\r\nimport { CardWrapper } from \"@/registry/default/blocks/login-02/components/card-wrapper\";\r\n\r\nimport Link from \"next/link\";\r\nimport { Input } from \"@/registry/default/ui/input\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\n\r\nexport const LoginSchema = z.object({\r\n  email: z\r\n    .string()\r\n    .min(1, {\r\n      message: \"Email is required\",\r\n    })\r\n    .email({\r\n      message: \"Invalid email address\",\r\n    }),\r\n  password: z.string().min(1, {\r\n    message: \"Password is required\",\r\n  }),\r\n});\r\n\r\nexport const LoginForm = () => {\r\n  const form = useForm<z.infer<typeof LoginSchema>>({\r\n    resolver: zodResolver(LoginSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = (values: z.infer<typeof LoginSchema>) => {\r\n    // Handle form submission\r\n  };\r\n\r\n  return (\r\n    <CardWrapper\r\n      mainHeaderLabel=\"Login\"\r\n      subHeaderLabel=\"Enter your credentials below to login to your account\"\r\n      backButtonLabel=\"Don't have an account?\"\r\n      backButtonHref=\"#\"\r\n      showSocial={true}\r\n    >\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"email\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      {...field}\r\n                      placeholder=\"jhon.doe@example.com\"\r\n                      type=\"email\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <FormField\r\n              control={form.control}\r\n              name=\"password\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <FormControl>\r\n                    <Input {...field} placeholder=\"******\" type=\"password\" />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"link\"\r\n                    asChild\r\n                    className=\"px-0 font-normal\"\r\n                  >\r\n                    <Link href=\"#\">Forgot password?</Link>\r\n                  </Button>\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <Button type=\"submit\" className=\"w-full\">\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </Form>\r\n    </CardWrapper>\r\n  );\r\n};\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/login-01/components/card-wrapper.tsx",
      "content": "\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"@/components/ui/card\";\r\nimport { Social } from \"@/registry/default/blocks/login-02/components/social\";\r\n\r\ninterface BackButtonProps {\r\n  href: string;\r\n  label: string;\r\n}\r\n\r\nconst BackButton = ({ href, label }: BackButtonProps) => {\r\n  return (\r\n    <Button className=\"font-normal w-full\" size=\"sm\" variant=\"link\" asChild>\r\n      <Link href={href}>{label}</Link>\r\n    </Button>\r\n  );\r\n};\r\n\r\ninterface HeaderProps {\r\n  mainLabel: string;\r\n  subLabel: string;\r\n}\r\n\r\nconst Header = ({ mainLabel, subLabel }: HeaderProps) => {\r\n  return (\r\n    <div className=\"w-full flex flex-col gap-y-4 items-center justify-center\">\r\n      <h1 className=\"text-3xl font-bold\">{mainLabel}</h1>\r\n      <p className=\"text-muted-foreground text-sm\">{subLabel}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardWrapperProps {\r\n  children: React.ReactNode;\r\n  mainHeaderLabel: string;\r\n  subHeaderLabel: string;\r\n  backButtonLabel: string;\r\n  backButtonHref: string;\r\n  showSocial?: boolean;\r\n}\r\n\r\nexport const CardWrapper = ({\r\n  children,\r\n  mainHeaderLabel,\r\n  subHeaderLabel,\r\n  backButtonLabel,\r\n  backButtonHref,\r\n  showSocial,\r\n}: CardWrapperProps) => {\r\n  return (\r\n    <Card className=\"w-[400px] shadow-lg\">\r\n      <CardHeader>\r\n        <Header mainLabel={mainHeaderLabel} subLabel={subHeaderLabel} />\r\n      </CardHeader>\r\n      <CardContent>{children}</CardContent>\r\n      {showSocial && (\r\n        <CardFooter>\r\n          <Social />\r\n        </CardFooter>\r\n      )}\r\n      <CardFooter>\r\n        <BackButton label={backButtonLabel} href={backButtonHref} />\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport { BackButton, Header, Social };\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/login-01/components/social.tsx",
      "content": "\"use client\";\r\n\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nexport const Social = () => {\r\n  const onClick = async () => {\r\n    try {\r\n      // Handle OAuth login\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center w-full gap-x-2\">\r\n      <Button\r\n        size=\"lg\"\r\n        className=\"w-full\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          onClick();\r\n        }}\r\n      >\r\n        <FcGoogle className=\"h-5 w-5\" />\r\n      </Button>\r\n\r\n      <Button\r\n        size=\"lg\"\r\n        className=\"w-full\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          onClick();\r\n        }}\r\n      >\r\n        <FaGithub className=\"h-5 w-5\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "authentication",
    "login"
  ]
}