{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "logo-cloud-simple",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A logo cloud simple component.",
  "files": [
    {
      "path": "blocks/logo-cloud-simple.tsx",
      "content": "\"use client\";\n\nimport { useRef, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function LogoCloudSimple() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const logos = [\n    {\n      src: \"https://html.tailus.io/blocks/customers/nvidia.svg\",\n      alt: \"Nvidia Logo\",\n      className: \"h-5\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/column.svg\",\n      alt: \"Column Logo\",\n      className: \"h-4\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/github.svg\",\n      alt: \"GitHub Logo\",\n      className: \"h-4\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/nike.svg\",\n      alt: \"Nike Logo\",\n      className: \"h-5\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/lemonsqueezy.svg\",\n      alt: \"Lemon Squeezy Logo\",\n      className: \"h-5\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/laravel.svg\",\n      alt: \"Laravel Logo\",\n      className: \"h-4\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/lilly.svg\",\n      alt: \"Lilly Logo\",\n      className: \"h-7\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/openai.svg\",\n      alt: \"OpenAI Logo\",\n      className: \"h-6\",\n    },\n  ];\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const scrollWidth = container.scrollWidth;\n    const clientWidth = container.clientWidth;\n\n    if (scrollWidth <= clientWidth) return;\n\n    let animationId: number;\n    let position = 0;\n    const speed = 0.5;\n\n    const animate = () => {\n      position -= speed;\n\n      // Reset position when we've scrolled the full width of the first set of logos\n      if (position <= -scrollWidth / 2) {\n        position = 0;\n      }\n\n      if (container) {\n        container.style.transform = `translateX(${position}px)`;\n      }\n\n      animationId = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      cancelAnimationFrame(animationId);\n    };\n  }, []);\n\n  return (\n    <section className=\"py-12 md:py-20\">\n      <div className=\"container px-4 md:px-6\">\n        <div className=\"flex flex-col items-center justify-between gap-4 text-center md:flex-row md:text-left\">\n          <div className=\"space-y-2\">\n            <h2 className=\"text-2xl font-bold tracking-tight md:text-3xl\">\n              Trusted by industry leaders\n            </h2>\n            <p className=\"text-muted-foreground\">\n              Join thousands of companies using our library\n            </p>\n          </div>\n        </div>\n\n        <div className=\"relative mt-8 overflow-hidden\">\n          <div className=\"absolute left-0 top-0 h-full w-20 bg-gradient-to-r from-background to-transparent z-10\"></div>\n          <div className=\"absolute right-0 top-0 h-full w-20 bg-gradient-to-l from-background to-transparent z-10\"></div>\n\n          <div className=\"flex overflow-hidden\">\n            <div\n              ref={containerRef}\n              className=\"flex items-center gap-8 py-4 transition-transform duration-1000\"\n              style={{ width: \"fit-content\" }}\n            >\n              {/* First set of logos */}\n              {logos.map((logo, index) => (\n                <div\n                  key={`first-${index}`}\n                  className=\"flex items-center justify-center\"\n                >\n                  <div\n                    className={cn(\n                      \"flex h-16 w-32 items-center justify-center rounded-lg border bg-background p-4 transition-all duration-200 hover:scale-105 hover:shadow-md\",\n                    )}\n                  >\n                    <img\n                      className={`w-auto dark:invert ${logo.className}`}\n                      src={logo.src || \"/placeholder.svg\"}\n                      alt={logo.alt}\n                      width=\"auto\"\n                      height={logo.className.replace(\"h-\", \"\")}\n                    />\n                  </div>\n                </div>\n              ))}\n\n              {/* Duplicate set for seamless scrolling */}\n              {logos.map((logo, index) => (\n                <div\n                  key={`second-${index}`}\n                  className=\"flex items-center justify-center\"\n                >\n                  <div\n                    className={cn(\n                      \"flex h-16 w-32 items-center justify-center rounded-lg border bg-background p-4 transition-all duration-200 hover:scale-105 hover:shadow-md\",\n                    )}\n                  >\n                    <img\n                      className={`w-auto dark:invert ${logo.className}`}\n                      src={logo.src || \"/placeholder.svg\"}\n                      alt={logo.alt}\n                      width=\"auto\"\n                      height={logo.className.replace(\"h-\", \"\")}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}