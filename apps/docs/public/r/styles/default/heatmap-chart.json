{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "heatmap-chart",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "charts/heatmap-chart.tsx",
      "content": "\"use client\";\r\n\r\nimport { TrendingUp } from \"lucide-react\";\r\nimport {\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  Scatter,\r\n  ScatterChart,\r\n  Rectangle,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/default/ui/card\";\r\nimport {\r\n  type ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/default/ui/chart\";\r\n\r\nconst chartData = [\r\n  { hour: \"00:00\", day: \"Mon\", value: 10 },\r\n  { hour: \"04:00\", day: \"Mon\", value: 15 },\r\n  { hour: \"08:00\", day: \"Mon\", value: 35 },\r\n  { hour: \"12:00\", day: \"Mon\", value: 45 },\r\n  { hour: \"16:00\", day: \"Mon\", value: 40 },\r\n  { hour: \"20:00\", day: \"Mon\", value: 30 },\r\n\r\n  { hour: \"00:00\", day: \"Tue\", value: 5 },\r\n  { hour: \"04:00\", day: \"Tue\", value: 10 },\r\n  { hour: \"08:00\", day: \"Tue\", value: 40 },\r\n  { hour: \"12:00\", day: \"Tue\", value: 50 },\r\n  { hour: \"16:00\", day: \"Tue\", value: 45 },\r\n  { hour: \"20:00\", day: \"Tue\", value: 25 },\r\n\r\n  { hour: \"00:00\", day: \"Wed\", value: 8 },\r\n  { hour: \"04:00\", day: \"Wed\", value: 12 },\r\n  { hour: \"08:00\", day: \"Wed\", value: 42 },\r\n  { hour: \"12:00\", day: \"Wed\", value: 55 },\r\n  { hour: \"16:00\", day: \"Wed\", value: 50 },\r\n  { hour: \"20:00\", day: \"Wed\", value: 28 },\r\n\r\n  { hour: \"00:00\", day: \"Thu\", value: 12 },\r\n  { hour: \"04:00\", day: \"Thu\", value: 18 },\r\n  { hour: \"08:00\", day: \"Thu\", value: 45 },\r\n  { hour: \"12:00\", day: \"Thu\", value: 60 },\r\n  { hour: \"16:00\", day: \"Thu\", value: 55 },\r\n  { hour: \"20:00\", day: \"Thu\", value: 35 },\r\n\r\n  { hour: \"00:00\", day: \"Fri\", value: 15 },\r\n  { hour: \"04:00\", day: \"Fri\", value: 20 },\r\n  { hour: \"08:00\", day: \"Fri\", value: 48 },\r\n  { hour: \"12:00\", day: \"Fri\", value: 58 },\r\n  { hour: \"16:00\", day: \"Fri\", value: 52 },\r\n  { hour: \"20:00\", day: \"Fri\", value: 32 },\r\n\r\n  { hour: \"00:00\", day: \"Sat\", value: 20 },\r\n  { hour: \"04:00\", day: \"Sat\", value: 15 },\r\n  { hour: \"08:00\", day: \"Sat\", value: 30 },\r\n  { hour: \"12:00\", day: \"Sat\", value: 40 },\r\n  { hour: \"16:00\", day: \"Sat\", value: 35 },\r\n  { hour: \"20:00\", day: \"Sat\", value: 25 },\r\n\r\n  { hour: \"00:00\", day: \"Sun\", value: 18 },\r\n  { hour: \"04:00\", day: \"Sun\", value: 12 },\r\n  { hour: \"08:00\", day: \"Sun\", value: 25 },\r\n  { hour: \"12:00\", day: \"Sun\", value: 35 },\r\n  { hour: \"16:00\", day: \"Sun\", value: 30 },\r\n  { hour: \"20:00\", day: \"Sun\", value: 20 },\r\n];\r\n\r\nconst hours = [\"00:00\", \"04:00\", \"08:00\", \"12:00\", \"16:00\", \"20:00\"];\r\nconst days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\nconst chartConfig = {\r\n  value: {\r\n    label: \"Activity\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n} satisfies ChartConfig;\r\n\r\nconst getColor = (value: number) => {\r\n  if (value < 15) return \"hsl(var(--chart-1) / 0.2)\";\r\n  if (value < 30) return \"hsl(var(--chart-1) / 0.4)\";\r\n  if (value < 45) return \"hsl(var(--chart-1) / 0.7)\";\r\n  return \"hsl(var(--chart-1))\";\r\n};\r\n\r\nexport function HeatmapChart() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Heatmap Chart</CardTitle>\r\n        <CardDescription>Weekly activity by hour</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"h-auto\">\r\n        <ChartContainer\r\n          config={{\r\n            ...chartConfig,\r\n            \"value-10\": { label: \"Low\", color: \"hsl(var(--chart-1) / 0.2)\" },\r\n            \"value-30\": { label: \"Medium\", color: \"hsl(var(--chart-1) / 0.4)\" },\r\n            \"value-50\": { label: \"High\", color: \"hsl(var(--chart-1) / 0.7)\" },\r\n            \"value-70\": { label: \"Very High\", color: \"hsl(var(--chart-1))\" },\r\n          }}\r\n        >\r\n          <ResponsiveContainer width=\"100%\" height=\"85%\">\r\n            <ScatterChart\r\n              margin={{ top: 20, right: 20, bottom: 20, left: 10 }}\r\n              isAnimationActive={true}\r\n              animationDuration={800}\r\n            >\r\n              <XAxis\r\n                dataKey=\"hour\"\r\n                type=\"category\"\r\n                allowDuplicatedCategory={false}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                ticks={hours}\r\n                interval={0}\r\n                tick={{ fontSize: 10 }}\r\n                padding={{ left: 10, right: 10 }}\r\n              />\r\n              <YAxis\r\n                dataKey=\"day\"\r\n                type=\"category\"\r\n                allowDuplicatedCategory={false}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                ticks={days}\r\n                interval={0}\r\n                tick={{ fontSize: 10 }}\r\n                padding={{ top: 10, bottom: 10 }}\r\n                width={35}\r\n              />\r\n              <ChartTooltip\r\n                cursor={false}\r\n                content={\r\n                  <ChartTooltipContent\r\n                    formatter={(value) => value + \" activity points\"}\r\n                  />\r\n                }\r\n              />\r\n              <Scatter\r\n                data={chartData}\r\n                isAnimationActive={true}\r\n                animationDuration={800}\r\n                shape={(props: any) => {\r\n                  const { x, y, width, height, value } = props;\r\n                  return (\r\n                    <Rectangle\r\n                      x={x}\r\n                      y={y}\r\n                      width={width - 3}\r\n                      height={height - 3}\r\n                      fill={getColor(value)}\r\n                      className=\"transition-colors duration-300\"\r\n                      rx={3}\r\n                      ry={3}\r\n                      aria-label={\r\n                        props.day +\r\n                        \" at \" +\r\n                        props.hour +\r\n                        \": \" +\r\n                        value +\r\n                        \" activity points\"\r\n                      }\r\n                    />\r\n                  );\r\n                }}\r\n              >\r\n                {chartData.map((entry, index) => (\r\n                  <Cell key={\"cell-\" + index} fill={getColor(entry.value)} />\r\n                ))}\r\n              </Scatter>\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n\r\n          <div className=\"mt-2 flex flex-wrap justify-center gap-4\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"mr-1 h-3 w-3 rounded-sm bg-[hsl(var(--chart-1)/0.2)]\"></div>\r\n              <span className=\"text-xs\">Low</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <div className=\"mr-1 h-3 w-3 rounded-sm bg-[hsl(var(--chart-1)/0.4)]\"></div>\r\n              <span className=\"text-xs\">Medium</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <div className=\"mr-1 h-3 w-3 rounded-sm bg-[hsl(var(--chart-1)/0.7)]\"></div>\r\n              <span className=\"text-xs\">High</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <div className=\"mr-1 h-3 w-3 rounded-sm bg-[hsl(var(--chart-1))]\"></div>\r\n              <span className=\"text-xs\">Very High</span>\r\n            </div>\r\n          </div>\r\n        </ChartContainer>\r\n      </CardContent>\r\n      <CardFooter className=\"flex-col items-start gap-2 text-sm\">\r\n        <div className=\"flex gap-2 font-medium leading-none\">\r\n          Highest activity on Thursday at noon{\" \"}\r\n          <TrendingUp className=\"h-4 w-4\" />\r\n        </div>\r\n        <div className=\"leading-none text-muted-foreground\">\r\n          Data collected over the past month\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:block",
      "target": ""
    }
  ],
  "categories": [
    "charts",
    "charts-heatmap"
  ]
}