{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "pricing-comparison",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A pricing comparison component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "button",
    "badge",
    "table",
    "use-media-query"
  ],
  "files": [
    {
      "path": "blocks/pricing-comparison.tsx",
      "content": "\"use client\";\n\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/registry/default/ui/table\";\nimport { cn } from \"@/lib/utils\";\nimport { Check, X } from \"lucide-react\";\nimport { motion } from \"motion/react\";\nimport { useMediaQuery } from \"@/registry/default/hooks/use-media-query\";\n\nconst plans = [\n  {\n    name: \"Free\",\n    price: 0,\n    description: \"Basic features for personal projects\",\n    features: {\n      \"AI-generated portraits\": \"5\",\n      \"Turnaround time\": \"24 hours\",\n      \"Style options\": \"1\",\n      \"Filter options\": \"1\",\n      \"Retouch credits\": \"0\",\n      \"Commercial usage\": false,\n      \"Priority support\": false,\n      \"Custom branding\": false,\n      \"API access\": false,\n    },\n    buttonText: \"Start for free\",\n  },\n  {\n    name: \"Pro\",\n    price: 39,\n    isRecommended: true,\n    description: \"Everything you need for professional work\",\n    features: {\n      \"AI-generated portraits\": \"50\",\n      \"Turnaround time\": \"3 hours\",\n      \"Style options\": \"5\",\n      \"Filter options\": \"5\",\n      \"Retouch credits\": \"5\",\n      \"Commercial usage\": true,\n      \"Priority support\": true,\n      \"Custom branding\": false,\n      \"API access\": false,\n    },\n    buttonText: \"Upgrade to Pro\",\n    isPopular: true,\n  },\n  {\n    name: \"Enterprise\",\n    price: 99,\n    description: \"Advanced features for teams and businesses\",\n    features: {\n      \"AI-generated portraits\": \"Unlimited\",\n      \"Turnaround time\": \"1 hour\",\n      \"Style options\": \"10\",\n      \"Filter options\": \"10\",\n      \"Retouch credits\": \"20\",\n      \"Commercial usage\": true,\n      \"Priority support\": true,\n      \"Custom branding\": true,\n      \"API access\": true,\n    },\n    buttonText: \"Contact sales\",\n  },\n];\n\nconst featureLabels = {\n  \"AI-generated portraits\": \"Number of portraits you can generate per month\",\n  \"Turnaround time\": \"Average time to receive your generated portraits\",\n  \"Style options\": \"Number of different artistic styles available\",\n  \"Filter options\": \"Number of different filters to enhance your portraits\",\n  \"Retouch credits\": \"Credits to request manual retouching by our designers\",\n  \"Commercial usage\": \"Use generated portraits for commercial purposes\",\n  \"Priority support\": \"Get faster responses from our support team\",\n  \"Custom branding\": \"Add your own branding to the generated portraits\",\n  \"API access\": \"Integrate with our API for automated workflows\",\n};\n\nexport default function PricingComparison() {\n  const isDesktop = useMediaQuery(\"(min-width: 1024px)\");\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0, transition: { duration: 0.5 } },\n  };\n\n  // Render mobile cards view\n  const renderMobileView = () => (\n    <div className=\"space-y-8\">\n      {plans.map((plan) => (\n        <motion.div\n          key={plan.name}\n          className={cn(\"relative border rounded-lg p-6\", {\n            \"border-[2px] border-primary\": plan.isPopular,\n          })}\n          variants={item}\n          whileHover={{ y: -5, transition: { duration: 0.2 } }}\n        >\n          {plan.isPopular && (\n            <Badge className=\"absolute top-2 left-2 bg-primary text-primary-foreground\">\n              Most Popular\n            </Badge>\n          )}\n          <h3 className=\"text-lg font-medium\">{plan.name}</h3>\n          <p className=\"mt-2 text-4xl font-bold\">\n            ${plan.price}\n            <span className=\"text-sm text-muted-foreground font-normal ml-1\">\n              /month\n            </span>\n          </p>\n          <p className=\"mt-4 font-medium text-muted-foreground\">\n            {plan.description}\n          </p>\n          <Button\n            variant={plan.isPopular ? \"default\" : \"outline\"}\n            size=\"lg\"\n            className=\"w-full mt-6\"\n          >\n            {plan.buttonText}\n          </Button>\n\n          <div className=\"mt-6 space-y-4\">\n            <h4 className=\"font-medium\">Features</h4>\n            <div className=\"space-y-3\">\n              {Object.entries(plan.features).map(([feature, value]) => (\n                <div\n                  key={feature}\n                  className=\"flex justify-between items-center py-2 border-b\"\n                >\n                  <span className=\"text-sm\">{feature}</span>\n                  <span className=\"font-medium\">\n                    {typeof value === \"boolean\" ? (\n                      value ? (\n                        <Check className=\"h-5 w-5 text-green-600\" />\n                      ) : (\n                        <X className=\"h-5 w-5 text-red-500\" />\n                      )\n                    ) : (\n                      value\n                    )}\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      ))}\n    </div>\n  );\n\n  // Render desktop table view\n  const renderDesktopView = () => (\n    <div className=\"overflow-x-auto\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"w-[250px]\">Features</TableHead>\n            {plans.map((plan) => (\n              <TableHead key={plan.name} className=\"text-center\">\n                <div\n                  className={cn(\n                    \"relative pb-8 pt-2\",\n                    plan.isPopular ? \"text-primary\" : \"\",\n                  )}\n                >\n                  {plan.isPopular && (\n                    <Badge className=\"absolute top-2 left-1/2 -translate-x-1/2 bg-primary text-primary-foreground\">\n                      Most Popular\n                    </Badge>\n                  )}\n                  <div className=\"text-lg font-medium\">{plan.name}</div>\n                  <div className=\"mt-2 text-3xl font-bold\">\n                    ${plan.price}\n                    <span className=\"text-xs text-muted-foreground font-normal\">\n                      /month\n                    </span>\n                  </div>\n                  <Button\n                    variant={plan.isPopular ? \"default\" : \"outline\"}\n                    className=\"mt-4 w-full\"\n                  >\n                    {plan.buttonText}\n                  </Button>\n                </div>\n              </TableHead>\n            ))}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {Object.entries(featureLabels).map(\n            ([feature, description], index) => (\n              <TableRow key={feature}>\n                <TableCell className=\"font-medium\">\n                  <div>\n                    <div>{feature}</div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      {description}\n                    </div>\n                  </div>\n                </TableCell>\n                {plans.map((plan) => {\n                  const value =\n                    plan.features[feature as keyof typeof plan.features];\n                  return (\n                    <TableCell\n                      key={`${plan.name}-${feature}`}\n                      className=\"text-center\"\n                    >\n                      <motion.div\n                        initial={{ scale: 0.8, opacity: 0 }}\n                        animate={{ scale: 1, opacity: 1 }}\n                        transition={{ delay: 0.05 * index }}\n                        className=\"flex justify-center\"\n                      >\n                        {typeof value === \"boolean\" ? (\n                          value ? (\n                            <Check className=\"h-5 w-5 text-green-600\" />\n                          ) : (\n                            <X className=\"h-5 w-5 text-red-500\" />\n                          )\n                        ) : (\n                          <span className=\"font-medium\">{value}</span>\n                        )}\n                      </motion.div>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ),\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center py-12 px-4 md:px-6\">\n      <motion.h1\n        className=\"text-5xl font-bold text-center tracking-tight mb-4\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        Compare Plans\n      </motion.h1>\n      <motion.p\n        className=\"text-xl text-center text-muted-foreground max-w-2xl mb-12\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n      >\n        Choose the perfect plan for your needs. All plans include access to our\n        AI portrait generator.\n      </motion.p>\n\n      <motion.div\n        className=\"w-full max-w-6xl\"\n        variants={container}\n        initial=\"hidden\"\n        animate=\"show\"\n      >\n        {isDesktop ? renderDesktopView() : renderMobileView()}\n      </motion.div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}