{
  "$schema": "http://localhost:3000/schema/registry-item.json",
  "name": "line-chart",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "dependencies": [
    "recharts"
  ],
  "files": [
    {
      "path": "ui/line-chart.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ResponsiveContainer,\n  LineChart as RechartsLineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n} from \"recharts\";\n\ninterface SimpleLineChartProps {\n  data: Record<string, any>[];\n\n  lines: {\n    dataKey: string;\n    strokeColor?: string;\n  }[];\n\n  xAxisKey?: string;\n\n  width?: number | string;\n\n  height?: number;\n\n  margin?: {\n    top?: number;\n    right?: number;\n    left?: number;\n    bottom?: number;\n  };\n\n  showGrid?: boolean;\n\n  className?: string;\n\n  ariaLabel?: string;\n}\n\nexport function SimpleLineChart({\n  data,\n  lines,\n  xAxisKey = \"name\",\n  width = \"100%\",\n  height = 300,\n  margin = { top: 5, right: 30, left: 20, bottom: 5 },\n  showGrid = true,\n  className,\n  ariaLabel = \"Line Chart\",\n}: SimpleLineChartProps) {\n  return (\n    <div\n      className={`w-full overflow-hidden rounded-md border bg-background p-4 ${className ?? \"\"}`}\n    >\n      {/* Screen reader-only label for accessibility */}\n      <h2 className=\"sr-only\">{ariaLabel}</h2>\n\n      <ResponsiveContainer width=\"100%\" height={height}>\n        <RechartsLineChart data={data} margin={margin}>\n          {showGrid && (\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--border)\" />\n          )}\n\n          <XAxis dataKey={xAxisKey} tick={false} stroke=\"var(--foreground)\" />\n          <YAxis tick={false} stroke=\"var(--foreground)\" />\n\n          {/* Customize tooltip background and text color via contentStyle */}\n          <Tooltip\n            contentStyle={{\n              backgroundColor: \"hsl(var(--background))\",\n              color: \"hsl(var(--foreground))\",\n              border: \"1px solid hsl(var(--border))\",\n            }}\n          />\n\n          {lines.map((line, index) => (\n            <Line\n              key={index}\n              type=\"monotone\"\n              dataKey={line.dataKey}\n              stroke={line.strokeColor ?? \"hsl(var(--primary))\"}\n              activeDot={{ r: 8 }}\n            />\n          ))}\n        </RechartsLineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}