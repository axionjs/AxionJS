{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "composed-area-chart",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "charts/composed-area-chart.tsx",
      "content": "\"use client\";\r\n\r\nimport { AreaChart } from \"lucide-react\";\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/default/ui/card\";\r\n\r\nimport {\r\n  type ChartConfig,\r\n  ChartContainer,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/default/ui/chart\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    a: [0, 0],\r\n    b: 0,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    a: [50, 300],\r\n    b: 106,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    a: [150, 423],\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    b: 312,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    a: [367, 678],\r\n    b: 451,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    a: [305, 821],\r\n    b: 623,\r\n  },\r\n];\r\n\r\nconst chartConfig = {\r\n  b: {\r\n    label: \"Series B\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n};\r\n\r\nexport function ComposedAreaChart() {\r\n  // Custom render functions to exclude \"a\" from tooltip and legend\r\n  const CustomizedTooltip = (props) => {\r\n    const { payload, ...rest } = props;\r\n    if (payload && payload.length) {\r\n      const newPayload = payload.filter((x) => x.dataKey !== \"a\");\r\n      return (\r\n        <ChartTooltipContent indicator=\"line\" payload={newPayload} {...rest} />\r\n      );\r\n    }\r\n    return <ChartTooltipContent indicator=\"line\" {...rest} />;\r\n  };\r\n\r\n  const CustomizedLegend = (props) => {\r\n    const { payload, ...rest } = props;\r\n    if (payload && payload.length) {\r\n      const newPayload = payload.filter((x) => x.dataKey !== \"a\");\r\n      return <ChartLegendContent payload={newPayload} {...rest} />;\r\n    }\r\n    return <ChartLegendContent {...rest} />;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Composed Area Chart</CardTitle>\r\n        <CardDescription>\r\n          Combining area ranges with line series\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <ChartContainer config={chartConfig}>\r\n          <ComposedChart\r\n            accessibilityLayer\r\n            data={data}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n            />\r\n            <YAxis tickLine={false} axisLine={false} tickMargin={8} />\r\n            <ChartTooltip cursor={false} content={<CustomizedTooltip />} />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"a\"\r\n              stroke=\"none\"\r\n              fill=\"#cccccc\"\r\n              fillOpacity={0.4}\r\n              connectNulls\r\n              dot={false}\r\n              activeDot={false}\r\n            />\r\n            <Line\r\n              type=\"natural\"\r\n              dataKey=\"b\"\r\n              stroke=\"var(--color-b)\"\r\n              connectNulls\r\n            />\r\n            <ChartLegend content={<CustomizedLegend />} />\r\n          </ComposedChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <div className=\"flex w-full items-start gap-2 text-sm\">\r\n          <div className=\"grid gap-2\">\r\n            <div className=\"flex items-center gap-2 font-medium leading-none\">\r\n              Range areas with trend lines <AreaChart className=\"h-4 w-4\" />\r\n            </div>\r\n            <div className=\"flex items-center gap-2 leading-none text-muted-foreground\">\r\n              Pages A through F with connected nulls\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ComposedAreaChart;\r\n",
      "type": "registry:block",
      "target": ""
    }
  ],
  "categories": [
    "charts",
    "charts-composed"
  ]
}