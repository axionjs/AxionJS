{
  "$schema": "http://localhost:3001/schema/registry-item.json",
  "name": "logo-cloud-infinite",
  "type": "registry:block",
  "author": "axionjs (https://www.axionjs.com)",
  "description": "A logo cloud infinite component.",
  "files": [
    {
      "path": "blocks/logo-cloud-infinite.tsx",
      "content": "\"use client\";\n\nimport { useRef, useEffect } from \"react\";\n\nexport default function LogoCloudInfinite() {\n  const logos = [\n    {\n      src: \"https://html.tailus.io/blocks/customers/nvidia.svg\",\n      alt: \"Nvidia Logo\",\n      className: \"h-5\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/column.svg\",\n      alt: \"Column Logo\",\n      className: \"h-4\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/github.svg\",\n      alt: \"GitHub Logo\",\n      className: \"h-4\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/nike.svg\",\n      alt: \"Nike Logo\",\n      className: \"h-5\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/lemonsqueezy.svg\",\n      alt: \"Lemon Squeezy Logo\",\n      className: \"h-5\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/laravel.svg\",\n      alt: \"Laravel Logo\",\n      className: \"h-4\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/lilly.svg\",\n      alt: \"Lilly Logo\",\n      className: \"h-7\",\n    },\n    {\n      src: \"https://html.tailus.io/blocks/customers/openai.svg\",\n      alt: \"OpenAI Logo\",\n      className: \"h-6\",\n    },\n  ];\n\n  // Double the logos for the infinite scroll effect\n  const allLogos = [...logos, ...logos];\n\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const scrollContainer = scrollRef.current;\n    if (!scrollContainer) return;\n\n    let animationId: number;\n    let scrollPos = 0;\n    const speed = 0.5;\n\n    const scroll = () => {\n      if (!scrollContainer) return;\n\n      scrollPos += speed;\n      if (scrollPos >= scrollContainer.scrollWidth / 2) {\n        scrollPos = 0;\n      }\n\n      scrollContainer.style.transform = `translateX(-${scrollPos}px)`;\n      animationId = requestAnimationFrame(scroll);\n    };\n\n    scroll();\n\n    return () => {\n      cancelAnimationFrame(animationId);\n    };\n  }, []);\n\n  return (\n    <section className=\"bg-background overflow-hidden py-16\">\n      <div className=\"group relative m-auto max-w-7xl px-6\">\n        <div className=\"flex flex-col items-center md:flex-row\">\n          <div className=\"md:max-w-44 md:border-r md:pr-6\">\n            <p className=\"text-end text-sm\">Powering the best teams</p>\n          </div>\n          <div className=\"relative py-6 md:w-[calc(100%-11rem)] overflow-hidden\">\n            <div className=\"flex\" ref={scrollRef} style={{ gap: \"112px\" }}>\n              {allLogos.map((logo, index) => (\n                <div key={index} className=\"flex-shrink-0\">\n                  <img\n                    className={`mx-auto w-fit dark:invert ${logo.className}`}\n                    src={logo.src || \"/placeholder.svg\"}\n                    alt={logo.alt}\n                    width=\"auto\"\n                    height={logo.className.replace(\"h-\", \"\")}\n                  />\n                </div>\n              ))}\n            </div>\n\n            {/* Gradient overlays for fading effect */}\n            <div className=\"absolute inset-y-0 left-0 w-20 bg-gradient-to-r from-background to-transparent\"></div>\n            <div className=\"absolute inset-y-0 right-0 w-20 bg-gradient-to-l from-background to-transparent\"></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}