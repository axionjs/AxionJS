{
  "$schema": "http://localhost:3000/schema/registry-item.json",
  "name": "tag-input",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "dependencies": [
    "emblor"
  ],
  "registryDependencies": [
    "label"
  ],
  "files": [
    {
      "path": "ui/tag-input.tsx",
      "content": "\"use client\";\r\nimport { useState } from \"react\";\r\nimport { Label } from \"@/registry/default/ui/label\";\r\nimport { TagInput as EmblorTagInput } from \"emblor\";\r\n\r\ninterface TagInputProps {\r\n  id: string;\r\n  label: string;\r\n  maxTags?: number;\r\n}\r\n\r\nexport function TagInput({ id, label, maxTags = 5 }: TagInputProps) {\r\n  const [tags, setTags] = useState<string[]>([]);\r\n\r\n  const handleSetTags = (newTags: string[]) => {\r\n    if (newTags.length <= maxTags) {\r\n      setTags(newTags);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <EmblorTagInput\r\n        id={id}\r\n        tags={tags}\r\n        setTags={handleSetTags}\r\n        placeholder=\"Add a tag\"\r\n        styleClasses={{\r\n          inlineTagsContainer:\r\n            \"border-input rounded-lg bg-background shadow-sm shadow-black/5 transition-shadow focus-within:border-ring focus-within:outline-none focus-within:ring-[3px] focus-within:ring-ring/20 p-1 gap-1\",\r\n          input:\r\n            \"w-full min-w-[80px] focus-visible:outline-none shadow-none px-2 h-7\",\r\n          tag: {\r\n            body: \"h-7 relative bg-background border border-input hover:bg-background rounded-md font-medium text-xs ps-2 pe-7\",\r\n            closeButton:\r\n              \"absolute -inset-y-px -end-px p-0 rounded-e-lg flex size-7 transition-colors outline-0 focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70 text-muted-foreground/80 hover:text-foreground\",\r\n          },\r\n        }}\r\n      />\r\n      {tags.length >= maxTags && (\r\n        <p className=\"text-sm text-red-500\">\r\n          You have reached the maximum number of tags ({maxTags}).\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}