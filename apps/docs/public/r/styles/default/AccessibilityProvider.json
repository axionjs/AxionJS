{
  "$schema": "http://localhost:3000/schema/registry-item.json",
  "name": "AccessibilityProvider",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "files": [
    {
      "path": "ui/AccessibilityProvider.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useAccessibilityStore } from \"@/registry/default/lib/accessibility-store\";\r\n\r\nexport function AccessibilityProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const {\r\n    isOpen,\r\n    toggleOpen,\r\n    highContrast,\r\n    highlightLinks,\r\n    biggerText,\r\n    textSpacing,\r\n    hideImages,\r\n    dyslexiaFriendly,\r\n    lineHeight,\r\n    saturation,\r\n  } = useAccessibilityStore();\r\n\r\n  // Listen for Ctrl + U to open or close the accessibility menu\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      // Check if ctrlKey (or metaKey for Mac) + key \"u\"\r\n      if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === \"u\") {\r\n        event.preventDefault();\r\n        toggleOpen();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [toggleOpen]);\r\n\r\n  // We can dynamically add classes to the <html> or <body> based on toggles:\r\n  useEffect(() => {\r\n    const html = document.documentElement;\r\n\r\n    // High Contrast\r\n    if (highContrast) {\r\n      html.classList.add(\"high-contrast\");\r\n    } else {\r\n      html.classList.remove(\"high-contrast\");\r\n    }\r\n\r\n    // Highlight Links\r\n    if (highlightLinks) {\r\n      html.classList.add(\"highlight-links\");\r\n    } else {\r\n      html.classList.remove(\"highlight-links\");\r\n    }\r\n\r\n    // Bigger Text\r\n    if (biggerText) {\r\n      html.classList.add(\"text-xl\");\r\n    } else {\r\n      html.classList.remove(\"text-xl\");\r\n    }\r\n\r\n    // Text Spacing\r\n    if (textSpacing) {\r\n      html.classList.add(\"text-spacing\");\r\n    } else {\r\n      html.classList.remove(\"text-spacing\");\r\n    }\r\n\r\n    // Hide Images\r\n    if (hideImages) {\r\n      html.classList.add(\"hide-images\");\r\n    } else {\r\n      html.classList.remove(\"hide-images\");\r\n    }\r\n\r\n    // Dyslexia Friendly\r\n    if (dyslexiaFriendly) {\r\n      html.classList.add(\"dyslexia-friendly\");\r\n    } else {\r\n      html.classList.remove(\"dyslexia-friendly\");\r\n    }\r\n\r\n    // Increased Line Height\r\n    if (lineHeight) {\r\n      html.classList.add(\"increased-line-height\");\r\n    } else {\r\n      html.classList.remove(\"increased-line-height\");\r\n    }\r\n\r\n    // Reduced/Grayscale Saturation\r\n    if (saturation) {\r\n      html.classList.add(\"low-saturation\");\r\n    } else {\r\n      html.classList.remove(\"low-saturation\");\r\n    }\r\n  }, [\r\n    highContrast,\r\n    highlightLinks,\r\n    biggerText,\r\n    textSpacing,\r\n    hideImages,\r\n    dyslexiaFriendly,\r\n    lineHeight,\r\n    saturation,\r\n  ]);\r\n\r\n  return <>{children}</>;\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "lib/accessibility-store.ts",
      "content": "\"use client\";\r\n\r\nimport { create } from \"zustand\";\r\n\r\ninterface AccessibilityState {\r\n  isOpen: boolean;\r\n  toggleOpen: () => void;\r\n\r\n  // Accessibility toggles\r\n  highContrast: boolean;\r\n  toggleHighContrast: () => void;\r\n\r\n  highlightLinks: boolean;\r\n  toggleHighlightLinks: () => void;\r\n\r\n  biggerText: boolean;\r\n  toggleBiggerText: () => void;\r\n\r\n  textSpacing: boolean;\r\n  toggleTextSpacing: () => void;\r\n\r\n  hideImages: boolean;\r\n  toggleHideImages: () => void;\r\n\r\n  dyslexiaFriendly: boolean;\r\n  toggleDyslexiaFriendly: () => void;\r\n\r\n  lineHeight: boolean;\r\n  toggleLineHeight: () => void;\r\n\r\n  saturation: boolean;\r\n  toggleSaturation: () => void;\r\n}\r\n\r\nexport const useAccessibilityStore = create<AccessibilityState>((set) => ({\r\n  isOpen: false,\r\n  toggleOpen: () =>\r\n    set((state) => ({\r\n      isOpen: !state.isOpen,\r\n    })),\r\n\r\n  // Accessibility toggles\r\n  highContrast: false,\r\n  toggleHighContrast: () =>\r\n    set((state) => ({\r\n      highContrast: !state.highContrast,\r\n    })),\r\n\r\n  highlightLinks: false,\r\n  toggleHighlightLinks: () =>\r\n    set((state) => ({\r\n      highlightLinks: !state.highlightLinks,\r\n    })),\r\n\r\n  biggerText: false,\r\n  toggleBiggerText: () =>\r\n    set((state) => ({\r\n      biggerText: !state.biggerText,\r\n    })),\r\n\r\n  textSpacing: false,\r\n  toggleTextSpacing: () =>\r\n    set((state) => ({\r\n      textSpacing: !state.textSpacing,\r\n    })),\r\n\r\n  hideImages: false,\r\n  toggleHideImages: () =>\r\n    set((state) => ({\r\n      hideImages: !state.hideImages,\r\n    })),\r\n\r\n  dyslexiaFriendly: false,\r\n  toggleDyslexiaFriendly: () =>\r\n    set((state) => ({\r\n      dyslexiaFriendly: !state.dyslexiaFriendly,\r\n    })),\r\n\r\n  lineHeight: false,\r\n  toggleLineHeight: () =>\r\n    set((state) => ({\r\n      lineHeight: !state.lineHeight,\r\n    })),\r\n\r\n  saturation: false,\r\n  toggleSaturation: () =>\r\n    set((state) => ({\r\n      saturation: !state.saturation,\r\n    })),\r\n}));\r\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}