{
  "$schema": "http://localhost:3000/schema/registry-item.json",
  "name": "flex",
  "type": "registry:ui",
  "author": "axionjs (https://www.axionjs.com)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/flex.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst flexVariants = cva(\"flex\", {\n  variants: {\n    direction: {\n      row: \"flex-row\",\n      column: \"flex-col\",\n      \"row-reverse\": \"flex-row-reverse\",\n      \"column-reverse\": \"flex-col-reverse\",\n    },\n    align: {\n      start: \"items-start\",\n      center: \"items-center\",\n      end: \"items-end\",\n      stretch: \"items-stretch\",\n      baseline: \"items-baseline\",\n    },\n    justify: {\n      start: \"justify-start\",\n      center: \"justify-center\",\n      end: \"justify-end\",\n      between: \"justify-between\",\n      around: \"justify-around\",\n      evenly: \"justify-evenly\",\n    },\n    gap: {\n      none: \"gap-0\",\n      sm: \"gap-2\",\n      md: \"gap-4\",\n      lg: \"gap-6\",\n      xl: \"gap-8\",\n    },\n    wrap: {\n      true: \"flex-wrap\",\n      false: \"flex-nowrap\",\n    },\n  },\n  defaultVariants: {\n    direction: \"row\",\n    align: \"stretch\",\n    justify: \"start\",\n    gap: \"none\",\n    wrap: false,\n  },\n});\n\ninterface FlexProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof flexVariants> {\n  asChild?: boolean;\n}\n\nconst Flex = React.forwardRef<HTMLDivElement, FlexProps>(\n  (\n    { className, direction, align, justify, gap, wrap, asChild, ...props },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"div\";\n    return (\n      <Comp\n        ref={ref}\n        className={cn(\n          flexVariants({\n            direction,\n            align,\n            justify,\n            gap,\n            wrap,\n            className,\n          }),\n        )}\n        {...props}\n      />\n    );\n  },\n);\nFlex.displayName = \"Flex\";\n\nexport { Flex };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}