// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "new-york": {
    "accordion": {
      name: "accordion",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/accordion.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/accordion.tsx")),
      source: "",
      meta: undefined,
    },
    "accessibility": {
      name: "accessibility",
      description: "",
      type: "registry:ui",
      registryDependencies: ["dialog","switch","button","avatar","tabs","tooltip","slider"],
      files: [{
        path: "registry/new-york/ui/accessibility/components/AccessibilityUI.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "registry/new-york/ui/accessibility/lib/accessibility-store.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/ui/accessibility/lib/screen-reader-service.ts",
        type: "registry:lib",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/accessibility/components/AccessibilityUI.tsx")),
      source: "",
      meta: undefined,
    },
    "alert": {
      name: "alert",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/alert.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/alert.tsx")),
      source: "",
      meta: undefined,
    },
    "alert-dialog": {
      name: "alert-dialog",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/ui/alert-dialog.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/alert-dialog.tsx")),
      source: "",
      meta: undefined,
    },
    "aspect-ratio": {
      name: "aspect-ratio",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/aspect-ratio.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/aspect-ratio.tsx")),
      source: "",
      meta: undefined,
    },
    "avatar": {
      name: "avatar",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/avatar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/avatar.tsx")),
      source: "",
      meta: undefined,
    },
    "badge": {
      name: "badge",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/badge.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/badge.tsx")),
      source: "",
      meta: undefined,
    },
    "bento": {
      name: "bento",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/ui/bento.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/bento.tsx")),
      source: "",
      meta: undefined,
    },
    "button": {
      name: "button",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/button.tsx")),
      source: "",
      meta: undefined,
    },
    "calendar": {
      name: "calendar",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/ui/calendar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/calendar.tsx")),
      source: "",
      meta: undefined,
    },
    "card": {
      name: "card",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/card.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/card.tsx")),
      source: "",
      meta: undefined,
    },
    "carousel": {
      name: "carousel",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/ui/carousel.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/carousel.tsx")),
      source: "",
      meta: undefined,
    },
    "chart": {
      name: "chart",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/chart.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/chart.tsx")),
      source: "",
      meta: undefined,
    },
    "checkbox": {
      name: "checkbox",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/checkbox.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/checkbox.tsx")),
      source: "",
      meta: undefined,
    },
    "collapsible": {
      name: "collapsible",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/collapsible.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/collapsible.tsx")),
      source: "",
      meta: undefined,
    },
    "command": {
      name: "command",
      description: "",
      type: "registry:ui",
      registryDependencies: ["dialog"],
      files: [{
        path: "registry/new-york/ui/command.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/command.tsx")),
      source: "",
      meta: undefined,
    },
    "container": {
      name: "container",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/container.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/container.tsx")),
      source: "",
      meta: undefined,
    },
    "context-menu": {
      name: "context-menu",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/context-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/context-menu.tsx")),
      source: "",
      meta: undefined,
    },
    "dialog": {
      name: "dialog",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/dialog.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/dialog.tsx")),
      source: "",
      meta: undefined,
    },
    "drawer": {
      name: "drawer",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/drawer.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/drawer.tsx")),
      source: "",
      meta: undefined,
    },
    "dot": {
      name: "dot",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/dot.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/dot.tsx")),
      source: "",
      meta: undefined,
    },
    "dropdown-menu": {
      name: "dropdown-menu",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/dropdown-menu.tsx")),
      source: "",
      meta: undefined,
    },
    "draggable": {
      name: "draggable",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/ui/draggable.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/draggable.tsx")),
      source: "",
      meta: undefined,
    },
    "flex": {
      name: "flex",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/flex.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/flex.tsx")),
      source: "",
      meta: undefined,
    },
    "form": {
      name: "form",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button","label"],
      files: [{
        path: "registry/new-york/ui/form.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/form.tsx")),
      source: "",
      meta: undefined,
    },
    "hover-card": {
      name: "hover-card",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/hover-card.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/hover-card.tsx")),
      source: "",
      meta: undefined,
    },
    "input": {
      name: "input",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/input.tsx")),
      source: "",
      meta: undefined,
    },
    "input-otp": {
      name: "input-otp",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/input-otp.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/input-otp.tsx")),
      source: "",
      meta: undefined,
    },
    "label": {
      name: "label",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/label.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/label.tsx")),
      source: "",
      meta: undefined,
    },
    "limited-input": {
      name: "limited-input",
      description: "",
      type: "registry:ui",
      registryDependencies: ["input"],
      files: [{
        path: "registry/new-york/ui/limited-input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/limited-input.tsx")),
      source: "",
      meta: undefined,
    },
    "marquee": {
      name: "marquee",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/marquee.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/marquee.tsx")),
      source: "",
      meta: undefined,
    },
    "menubar": {
      name: "menubar",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/menubar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/menubar.tsx")),
      source: "",
      meta: undefined,
    },
    "navigation-menu": {
      name: "navigation-menu",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/navigation-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/navigation-menu.tsx")),
      source: "",
      meta: undefined,
    },
    "pagination": {
      name: "pagination",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/ui/pagination.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/pagination.tsx")),
      source: "",
      meta: undefined,
    },
    "password-input": {
      name: "password-input",
      description: "",
      type: "registry:ui",
      registryDependencies: ["input"],
      files: [{
        path: "registry/new-york/ui/password-input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/password-input.tsx")),
      source: "",
      meta: undefined,
    },
    "popover": {
      name: "popover",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/popover.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/popover.tsx")),
      source: "",
      meta: undefined,
    },
    "progress": {
      name: "progress",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/progress.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/progress.tsx")),
      source: "",
      meta: undefined,
    },
    "radio-group": {
      name: "radio-group",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/radio-group.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/radio-group.tsx")),
      source: "",
      meta: undefined,
    },
    "resizable": {
      name: "resizable",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/resizable.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/resizable.tsx")),
      source: "",
      meta: undefined,
    },
    "scroll-area": {
      name: "scroll-area",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/scroll-area.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/scroll-area.tsx")),
      source: "",
      meta: undefined,
    },
    "select": {
      name: "select",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/select.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/select.tsx")),
      source: "",
      meta: undefined,
    },
    "separator": {
      name: "separator",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/separator.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/separator.tsx")),
      source: "",
      meta: undefined,
    },
    "sheet": {
      name: "sheet",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/sheet.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/sheet.tsx")),
      source: "",
      meta: undefined,
    },
    "skeleton": {
      name: "skeleton",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/skeleton.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/skeleton.tsx")),
      source: "",
      meta: undefined,
    },
    "slider": {
      name: "slider",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/slider.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/slider.tsx")),
      source: "",
      meta: undefined,
    },
    "sonner": {
      name: "sonner",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/sonner.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/sonner.tsx")),
      source: "",
      meta: undefined,
    },
    "switch": {
      name: "switch",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/switch.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/switch.tsx")),
      source: "",
      meta: undefined,
    },
    "table": {
      name: "table",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/table.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/table.tsx")),
      source: "",
      meta: undefined,
    },
    "tabs": {
      name: "tabs",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/tabs.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/tabs.tsx")),
      source: "",
      meta: undefined,
    },
    "tag-input": {
      name: "tag-input",
      description: "",
      type: "registry:ui",
      registryDependencies: ["label"],
      files: [{
        path: "registry/new-york/ui/tag-input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/tag-input.tsx")),
      source: "",
      meta: undefined,
    },
    "textarea": {
      name: "textarea",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/textarea.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/textarea.tsx")),
      source: "",
      meta: undefined,
    },
    "toast": {
      name: "toast",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/toast.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/toast.tsx")),
      source: "",
      meta: undefined,
    },
    "toaster": {
      name: "toaster",
      description: "",
      type: "registry:ui",
      registryDependencies: ["toast","use-toast"],
      files: [{
        path: "registry/new-york/ui/toaster.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/toaster.tsx")),
      source: "",
      meta: undefined,
    },
    "toggle": {
      name: "toggle",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/toggle.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/toggle.tsx")),
      source: "",
      meta: undefined,
    },
    "toggle-group": {
      name: "toggle-group",
      description: "",
      type: "registry:ui",
      registryDependencies: ["toggle"],
      files: [{
        path: "registry/new-york/ui/toggle-group.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/toggle-group.tsx")),
      source: "",
      meta: undefined,
    },
    "tooltip": {
      name: "tooltip",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/ui/tooltip.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/ui/tooltip.tsx")),
      source: "",
      meta: undefined,
    },
    "utils": {
      name: "utils",
      description: "",
      type: "registry:lib",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/lib/utils.ts",
        type: "registry:lib",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/lib/utils.ts")),
      source: "",
      meta: undefined,
    },
    "use-async": {
      name: "use-async",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-async.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-async.tsx")),
      source: "",
      meta: undefined,
    },
    "use-click-outside": {
      name: "use-click-outside",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-click-outside.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-click-outside.tsx")),
      source: "",
      meta: undefined,
    },
    "use-copy-to-clipboard": {
      name: "use-copy-to-clipboard",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-copy-to-clipboard.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-copy-to-clipboard.tsx")),
      source: "",
      meta: undefined,
    },
    "use-debounce": {
      name: "use-debounce",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-debounce.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-debounce.tsx")),
      source: "",
      meta: undefined,
    },
    "use-form": {
      name: "use-form",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-form.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-form.tsx")),
      source: "",
      meta: undefined,
    },
    "use-fullscreen": {
      name: "use-fullscreen",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-fullscreen.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-fullscreen.ts")),
      source: "",
      meta: undefined,
    },
    "use-geolocation": {
      name: "use-geolocation",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-geolocation.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-geolocation.tsx")),
      source: "",
      meta: undefined,
    },
    "use-idle-timeout": {
      name: "use-idle-timeout",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-idle-timeout.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-idle-timeout.tsx")),
      source: "",
      meta: undefined,
    },
    "use-infinite-scroll": {
      name: "use-infinite-scroll",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-infinite-scroll.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-infinite-scroll.tsx")),
      source: "",
      meta: undefined,
    },
    "use-intersection-observer": {
      name: "use-intersection-observer",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-intersection-observer.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-intersection-observer.tsx")),
      source: "",
      meta: undefined,
    },
    "use-keyboard": {
      name: "use-keyboard",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-keyboard.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-keyboard.tsx")),
      source: "",
      meta: undefined,
    },
    "use-local-storage": {
      name: "use-local-storage",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-local-storage.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-local-storage.tsx")),
      source: "",
      meta: undefined,
    },
    "use-media-query": {
      name: "use-media-query",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-media-query.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-media-query.tsx")),
      source: "",
      meta: undefined,
    },
    "use-mobile": {
      name: "use-mobile",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-mobile.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-mobile.tsx")),
      source: "",
      meta: undefined,
    },
    "use-pagination": {
      name: "use-pagination",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-pagination.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-pagination.tsx")),
      source: "",
      meta: undefined,
    },
    "use-polling": {
      name: "use-polling",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-polling.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-polling.ts")),
      source: "",
      meta: undefined,
    },
    "use-scroll-position": {
      name: "use-scroll-position",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-scroll-position.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-scroll-position.tsx")),
      source: "",
      meta: undefined,
    },
    "use-sse-listener": {
      name: "use-sse-listener",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-sse-listener.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-sse-listener.tsx")),
      source: "",
      meta: undefined,
    },
    "use-theme": {
      name: "use-theme",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-theme.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-theme.tsx")),
      source: "",
      meta: undefined,
    },
    "use-toast": {
      name: "use-toast",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-toast.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-toast.tsx")),
      source: "",
      meta: undefined,
    },
    "use-toggle": {
      name: "use-toggle",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-toggle.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-toggle.tsx")),
      source: "",
      meta: undefined,
    },
    "use-undo-redo": {
      name: "use-undo-redo",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-undo-redo.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-undo-redo.tsx")),
      source: "",
      meta: undefined,
    },
    "use-virtual-list": {
      name: "use-virtual-list",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-virtual-list.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-virtual-list.tsx")),
      source: "",
      meta: undefined,
    },
    "use-web-socket": {
      name: "use-web-socket",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/hooks/use-web-socket.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/hooks/use-web-socket.tsx")),
      source: "",
      meta: undefined,
    },
    "login-01": {
      name: "login-01",
      description: "A simple login page.",
      type: "registry:block",
      registryDependencies: ["button","card","input","form"],
      files: [{
        path: "registry/new-york/blocks/login-01/page.tsx",
        type: "registry:page",
        target: "app/login/page.tsx"
      },{
        path: "registry/new-york/blocks/login-01/components/login-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/blocks/login-01/components/card-wrapper.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/blocks/login-01/components/social.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: ["authentication","login"],
      component: React.lazy(() => import("@/registry/new-york/blocks/login-01/page.tsx")),
      source: "__registry__/new-york/blocks/login-01/page.tsx",
      meta: undefined,
    },
    "login-02": {
      name: "login-02",
      description: "A two column login page with a cover image.",
      type: "registry:block",
      registryDependencies: ["button","card","input","form"],
      files: [{
        path: "registry/new-york/blocks/login-02/page.tsx",
        type: "registry:page",
        target: "app/login/page.tsx"
      },{
        path: "registry/new-york/blocks/login-02/components/login-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/blocks/login-02/components/card-wrapper.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/blocks/login-02/components/social.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/blocks/login-02/images/placeholder.svg",
        type: "registry:file",
        target: "public/placeholder.svg"
      },{
        path: "registry/new-york/blocks/login-02/images/login-logo.svg",
        type: "registry:file",
        target: "public/login-logo.svg"
      }],
      categories: ["authentication","login"],
      component: React.lazy(() => import("@/registry/new-york/blocks/login-02/page.tsx")),
      source: "__registry__/new-york/blocks/login-02/page.tsx",
      meta: undefined,
    },
    "animated-group": {
      name: "animated-group",
      description: "A simple animated group block.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/animated-group.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/animated-group.tsx")),
      source: "__registry__/new-york/blocks/animated-group.tsx",
      meta: undefined,
    },
    "cta-card": {
      name: "cta-card",
      description: "A simple call to action card block.",
      type: "registry:block",
      registryDependencies: ["button","card"],
      files: [{
        path: "registry/new-york/blocks/cta-card.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/cta-card.tsx")),
      source: "__registry__/new-york/blocks/cta-card.tsx",
      meta: undefined,
    },
    "cta-centered": {
      name: "cta-centered",
      description: "A centered call to action block.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/cta-centered.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/cta-centered.tsx")),
      source: "__registry__/new-york/blocks/cta-centered.tsx",
      meta: undefined,
    },
    "event-registration-form-1": {
      name: "event-registration-form-1",
      description: "A form for event registration.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","radio-group","checkbox","select","use-toast","badge","tooltip"],
      files: [{
        path: "registry/new-york/blocks/event-registration-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/event-registration-form-1.tsx")),
      source: "__registry__/new-york/blocks/event-registration-form-1.tsx",
      meta: undefined,
    },
    "event-registration-form-2": {
      name: "event-registration-form-2",
      description: "A form for event registration.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","textarea","checkbox","select","use-toast","separator"],
      files: [{
        path: "registry/new-york/blocks/event-registration-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/event-registration-form-2.tsx")),
      source: "__registry__/new-york/blocks/event-registration-form-2.tsx",
      meta: undefined,
    },
    "event-registration-form-3": {
      name: "event-registration-form-3",
      description: "A form for event registration.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast","radio-group"],
      files: [{
        path: "registry/new-york/blocks/event-registration-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/event-registration-form-3.tsx")),
      source: "__registry__/new-york/blocks/event-registration-form-3.tsx",
      meta: undefined,
    },
    "faq-accordion": {
      name: "faq-accordion",
      description: "A FAQ accordion component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/faq-accordion.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/faq-accordion.tsx")),
      source: "__registry__/new-york/blocks/faq-accordion.tsx",
      meta: undefined,
    },
    "faq-grid": {
      name: "faq-grid",
      description: "A FAQ grid component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/faq-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/faq-grid.tsx")),
      source: "__registry__/new-york/blocks/faq-grid.tsx",
      meta: undefined,
    },
    "faq-tabs": {
      name: "faq-tabs",
      description: "A FAQ tabs component.",
      type: "registry:block",
      registryDependencies: ["tabs","input"],
      files: [{
        path: "registry/new-york/blocks/faq-tabs.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/faq-tabs.tsx")),
      source: "__registry__/new-york/blocks/faq-tabs.tsx",
      meta: undefined,
    },
    "footer-dark": {
      name: "footer-dark",
      description: "A dark footer component.",
      type: "registry:block",
      registryDependencies: ["logo","input","button"],
      files: [{
        path: "registry/new-york/blocks/footer-dark.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/footer-dark.tsx")),
      source: "__registry__/new-york/blocks/footer-dark.tsx",
      meta: undefined,
    },
    "footer-multi-column": {
      name: "footer-multi-column",
      description: "A multi-column footer component.",
      type: "registry:block",
      registryDependencies: ["logo","input","button"],
      files: [{
        path: "registry/new-york/blocks/footer-multi-column.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/footer-multi-column.tsx")),
      source: "__registry__/new-york/blocks/footer-multi-column.tsx",
      meta: undefined,
    },
    "footer-simple": {
      name: "footer-simple",
      description: "A simple footer component.",
      type: "registry:block",
      registryDependencies: ["logo"],
      files: [{
        path: "registry/new-york/blocks/footer-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/footer-simple.tsx")),
      source: "__registry__/new-york/blocks/footer-simple.tsx",
      meta: undefined,
    },
    "hero-app": {
      name: "hero-app",
      description: "A hero app component.",
      type: "registry:block",
      registryDependencies: ["button","badge"],
      files: [{
        path: "registry/new-york/blocks/hero-app.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/hero-app.tsx")),
      source: "__registry__/new-york/blocks/hero-app.tsx",
      meta: undefined,
    },
    "hero-centered": {
      name: "hero-centered",
      description: "A centered hero component.",
      type: "registry:block",
      registryDependencies: ["button","badge"],
      files: [{
        path: "registry/new-york/blocks/hero-centered.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/hero-centered.tsx")),
      source: "__registry__/new-york/blocks/hero-centered.tsx",
      meta: undefined,
    },
    "hero-gradient": {
      name: "hero-gradient",
      description: "A gradient hero component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/hero-gradient.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/hero-gradient.tsx")),
      source: "__registry__/new-york/blocks/hero-gradient.tsx",
      meta: undefined,
    },
    "hero-simple": {
      name: "hero-simple",
      description: "A simple hero component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/hero-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/hero-simple.tsx")),
      source: "__registry__/new-york/blocks/hero-simple.tsx",
      meta: undefined,
    },
    "hero-split": {
      name: "hero-split",
      description: "A split hero component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/hero-split.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/hero-split.tsx")),
      source: "__registry__/new-york/blocks/hero-split.tsx",
      meta: undefined,
    },
    "hero-video": {
      name: "hero-video",
      description: "A video hero component.",
      type: "registry:block",
      registryDependencies: ["button","dialog"],
      files: [{
        path: "registry/new-york/blocks/hero-video.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/hero-video.tsx")),
      source: "__registry__/new-york/blocks/hero-video.tsx",
      meta: undefined,
    },
    "infinite-slider": {
      name: "infinite-slider",
      description: "An infinite slider component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/infinite-slider.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/infinite-slider.tsx")),
      source: "__registry__/new-york/blocks/infinite-slider.tsx",
      meta: undefined,
    },
    "login-form-1": {
      name: "login-form-1",
      description: "A login form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","checkbox","use-toast","password-input"],
      files: [{
        path: "registry/new-york/blocks/login-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/login-form-1.tsx")),
      source: "__registry__/new-york/blocks/login-form-1.tsx",
      meta: undefined,
    },
    "login-form-2": {
      name: "login-form-2",
      description: "A login form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast"],
      files: [{
        path: "registry/new-york/blocks/login-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/login-form-2.tsx")),
      source: "__registry__/new-york/blocks/login-form-2.tsx",
      meta: undefined,
    },
    "login-form-3": {
      name: "login-form-3",
      description: "A login form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast"],
      files: [{
        path: "registry/new-york/blocks/login-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/login-form-3.tsx")),
      source: "__registry__/new-york/blocks/login-form-3.tsx",
      meta: undefined,
    },
    "logo-cloud-featured": {
      name: "logo-cloud-featured",
      description: "A logo cloud featured component.",
      type: "registry:block",
      registryDependencies: ["badge"],
      files: [{
        path: "registry/new-york/blocks/logo-cloud-featured.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/logo-cloud-featured.tsx")),
      source: "__registry__/new-york/blocks/logo-cloud-featured.tsx",
      meta: undefined,
    },
    "logo-cloud-grid": {
      name: "logo-cloud-grid",
      description: "A logo cloud grid component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/logo-cloud-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/logo-cloud-grid.tsx")),
      source: "__registry__/new-york/blocks/logo-cloud-grid.tsx",
      meta: undefined,
    },
    "logo-cloud-infinite": {
      name: "logo-cloud-infinite",
      description: "A logo cloud infinite component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/logo-cloud-infinite.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/logo-cloud-infinite.tsx")),
      source: "__registry__/new-york/blocks/logo-cloud-infinite.tsx",
      meta: undefined,
    },
    "logo-cloud-simple": {
      name: "logo-cloud-simple",
      description: "A logo cloud simple component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/logo-cloud-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/logo-cloud-simple.tsx")),
      source: "__registry__/new-york/blocks/logo-cloud-simple.tsx",
      meta: undefined,
    },
    "navbar-animated": {
      name: "navbar-animated",
      description: "A navbar animated component.",
      type: "registry:block",
      registryDependencies: ["button","input","avatar","sheet","logo"],
      files: [{
        path: "registry/new-york/blocks/navbar-animated.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-animated.tsx")),
      source: "__registry__/new-york/blocks/navbar-animated.tsx",
      meta: undefined,
    },
    "navbar-bottom-icons": {
      name: "navbar-bottom-icons",
      description: "A navbar bottom icons component.",
      type: "registry:block",
      registryDependencies: ["button","separator","tooltip"],
      files: [{
        path: "registry/new-york/blocks/navbar-bottom-icons.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-bottom-icons.tsx")),
      source: "__registry__/new-york/blocks/navbar-bottom-icons.tsx",
      meta: undefined,
    },
    "navbar-desktop": {
      name: "navbar-desktop",
      description: "A navbar desktop component.",
      type: "registry:block",
      registryDependencies: ["button","logo","navigation-menu","mode-toggle"],
      files: [{
        path: "registry/new-york/blocks/navbar-desktop.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-desktop.tsx")),
      source: "__registry__/new-york/blocks/navbar-desktop.tsx",
      meta: undefined,
    },
    "navbar-dropdown": {
      name: "navbar-dropdown",
      description: "A navbar dropdown component.",
      type: "registry:block",
      registryDependencies: ["button","dropdown-menu"],
      files: [{
        path: "registry/new-york/blocks/navbar-dropdown.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-dropdown.tsx")),
      source: "__registry__/new-york/blocks/navbar-dropdown.tsx",
      meta: undefined,
    },
    "navbar-mobile": {
      name: "navbar-mobile",
      description: "A navbar mobile component.",
      type: "registry:block",
      registryDependencies: ["button","logo","sheet","mode-toggle"],
      files: [{
        path: "registry/new-york/blocks/navbar-mobile.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-mobile.tsx")),
      source: "__registry__/new-york/blocks/navbar-mobile.tsx",
      meta: undefined,
    },
    "navbar-responsive": {
      name: "navbar-responsive",
      description: "A navbar responsive component.",
      type: "registry:block",
      registryDependencies: ["button","input","sheet"],
      files: [{
        path: "registry/new-york/blocks/navbar-responsive.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-responsive.tsx")),
      source: "__registry__/new-york/blocks/navbar-responsive.tsx",
      meta: undefined,
    },
    "navbar-simple": {
      name: "navbar-simple",
      description: "A simple navbar component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/navbar-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/navbar-simple.tsx")),
      source: "__registry__/new-york/blocks/navbar-simple.tsx",
      meta: undefined,
    },
    "newsletter-form-1": {
      name: "newsletter-form-1",
      description: "A newsletter form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast"],
      files: [{
        path: "registry/new-york/blocks/newsletter-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/newsletter-form-1.tsx")),
      source: "__registry__/new-york/blocks/newsletter-form-1.tsx",
      meta: undefined,
    },
    "newsletter-form-2": {
      name: "newsletter-form-2",
      description: "A newsletter form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast","checkbox","switch","tooltip"],
      files: [{
        path: "registry/new-york/blocks/newsletter-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/newsletter-form-2.tsx")),
      source: "__registry__/new-york/blocks/newsletter-form-2.tsx",
      meta: undefined,
    },
    "newsletter-form-3": {
      name: "newsletter-form-3",
      description: "A newsletter form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast","select"],
      files: [{
        path: "registry/new-york/blocks/newsletter-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/newsletter-form-3.tsx")),
      source: "__registry__/new-york/blocks/newsletter-form-3.tsx",
      meta: undefined,
    },
    "pricing-comparison": {
      name: "pricing-comparison",
      description: "A pricing comparison component.",
      type: "registry:block",
      registryDependencies: ["button","badge","table","use-media-query"],
      files: [{
        path: "registry/new-york/blocks/pricing-comparison.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/pricing-comparison.tsx")),
      source: "__registry__/new-york/blocks/pricing-comparison.tsx",
      meta: undefined,
    },
    "pricing-simple": {
      name: "pricing-simple",
      description: "A simple pricing component.",
      type: "registry:block",
      registryDependencies: ["button","badge","separator"],
      files: [{
        path: "registry/new-york/blocks/pricing-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/pricing-simple.tsx")),
      source: "__registry__/new-york/blocks/pricing-simple.tsx",
      meta: undefined,
    },
    "pricing-toggle": {
      name: "pricing-toggle",
      description: "A toggle pricing component.",
      type: "registry:block",
      registryDependencies: ["button","badge","separator","tabs","tooltip"],
      files: [{
        path: "registry/new-york/blocks/pricing-toggle.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/pricing-toggle.tsx")),
      source: "__registry__/new-york/blocks/pricing-toggle.tsx",
      meta: undefined,
    },
    "progressive-blur": {
      name: "progressive-blur",
      description: "A progressive blur component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/progressive-blur.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/progressive-blur.tsx")),
      source: "__registry__/new-york/blocks/progressive-blur.tsx",
      meta: undefined,
    },
    "questionnaire-form-1": {
      name: "questionnaire-form-1",
      description: "A questionnaire form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","radio-group","checkbox","textarea","use-toast"],
      files: [{
        path: "registry/new-york/blocks/questionnaire-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/questionnaire-form-1.tsx")),
      source: "__registry__/new-york/blocks/questionnaire-form-1.tsx",
      meta: undefined,
    },
    "questionnaire-form-2": {
      name: "questionnaire-form-2",
      description: "A questionnaire form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","separator","progress","radio-group","checkbox","textarea","use-toast"],
      files: [{
        path: "registry/new-york/blocks/questionnaire-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/questionnaire-form-2.tsx")),
      source: "__registry__/new-york/blocks/questionnaire-form-2.tsx",
      meta: undefined,
    },
    "questionnaire-form-3": {
      name: "questionnaire-form-3",
      description: "A questionnaire form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","textarea","use-toast"],
      files: [{
        path: "registry/new-york/blocks/questionnaire-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/questionnaire-form-3.tsx")),
      source: "__registry__/new-york/blocks/questionnaire-form-3.tsx",
      meta: undefined,
    },
    "reset-password-form-1": {
      name: "reset-password-form-1",
      description: "A reset password form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","alert"],
      files: [{
        path: "registry/new-york/blocks/reset-password-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/reset-password-form-1.tsx")),
      source: "__registry__/new-york/blocks/reset-password-form-1.tsx",
      meta: undefined,
    },
    "reset-password-form-2": {
      name: "reset-password-form-2",
      description: "A reset password form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","password-input","use-toast"],
      files: [{
        path: "registry/new-york/blocks/reset-password-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/reset-password-form-2.tsx")),
      source: "__registry__/new-york/blocks/reset-password-form-2.tsx",
      meta: undefined,
    },
    "reset-password-form-3": {
      name: "reset-password-form-3",
      description: "A reset password form.",
      type: "registry:block",
      registryDependencies: ["button","input","form"],
      files: [{
        path: "registry/new-york/blocks/reset-password-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/reset-password-form-3.tsx")),
      source: "__registry__/new-york/blocks/reset-password-form-3.tsx",
      meta: undefined,
    },
    "signup-form-1": {
      name: "signup-form-1",
      description: "A signup form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","use-toast","password-input","toast"],
      files: [{
        path: "registry/new-york/blocks/signup-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/signup-form-1.tsx")),
      source: "__registry__/new-york/blocks/signup-form-1.tsx",
      meta: undefined,
    },
    "signup-form-2": {
      name: "signup-form-2",
      description: "A signup form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast","password-input","separator","badge"],
      files: [{
        path: "registry/new-york/blocks/signup-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/signup-form-2.tsx")),
      source: "__registry__/new-york/blocks/signup-form-2.tsx",
      meta: undefined,
    },
    "signup-form-3": {
      name: "signup-form-3",
      description: "A signup form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast","password-input"],
      files: [{
        path: "registry/new-york/blocks/signup-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/signup-form-3.tsx")),
      source: "__registry__/new-york/blocks/signup-form-3.tsx",
      meta: undefined,
    },
    "stats-cards": {
      name: "stats-cards",
      description: "A stats cards component.",
      type: "registry:block",
      registryDependencies: ["card"],
      files: [{
        path: "registry/new-york/blocks/stats-cards.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/stats-cards.tsx")),
      source: "__registry__/new-york/blocks/stats-cards.tsx",
      meta: undefined,
    },
    "stats-feature": {
      name: "stats-feature",
      description: "A stats feature component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/new-york/blocks/stats-feature.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/stats-feature.tsx")),
      source: "__registry__/new-york/blocks/stats-feature.tsx",
      meta: undefined,
    },
    "stats-grid": {
      name: "stats-grid",
      description: "A stats grid component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/new-york/blocks/stats-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/stats-grid.tsx")),
      source: "__registry__/new-york/blocks/stats-grid.tsx",
      meta: undefined,
    },
    "table-basic": {
      name: "table-basic",
      description: "A basic table component.",
      type: "registry:block",
      registryDependencies: ["table","badge","avatar"],
      files: [{
        path: "registry/new-york/blocks/table-basic.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/table-basic.tsx")),
      source: "__registry__/new-york/blocks/table-basic.tsx",
      meta: undefined,
    },
    "table-complex": {
      name: "table-complex",
      description: "A complex table component.",
      type: "registry:block",
      registryDependencies: ["table"],
      files: [{
        path: "registry/new-york/blocks/table-complex.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/table-complex.tsx")),
      source: "__registry__/new-york/blocks/table-complex.tsx",
      meta: undefined,
    },
    "table-interactive": {
      name: "table-interactive",
      description: "An interactive table component.",
      type: "registry:block",
      registryDependencies: ["table","button","input","dropdown-menu"],
      files: [{
        path: "registry/new-york/blocks/table-interactive.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/table-interactive.tsx")),
      source: "__registry__/new-york/blocks/table-interactive.tsx",
      meta: undefined,
    },
    "testimonials-carousel": {
      name: "testimonials-carousel",
      description: "An testimonials carousel component.",
      type: "registry:block",
      registryDependencies: ["card","button","avatar"],
      files: [{
        path: "registry/new-york/blocks/testimonials-carousel.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/testimonials-carousel.tsx")),
      source: "__registry__/new-york/blocks/testimonials-carousel.tsx",
      meta: undefined,
    },
    "testimonials-featured": {
      name: "testimonials-featured",
      description: "An featured testimonials component.",
      type: "registry:block",
      registryDependencies: ["card","avatar","badge"],
      files: [{
        path: "registry/new-york/blocks/testimonials-featured.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/testimonials-featured.tsx")),
      source: "__registry__/new-york/blocks/testimonials-featured.tsx",
      meta: undefined,
    },
    "testimonials-grid": {
      name: "testimonials-grid",
      description: "A grid of testimonials.",
      type: "registry:block",
      registryDependencies: ["card","avatar"],
      files: [{
        path: "registry/new-york/blocks/testimonials-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/blocks/testimonials-grid.tsx")),
      source: "__registry__/new-york/blocks/testimonials-grid.tsx",
      meta: undefined,
    },
    "rbac-auth": {
      name: "rbac-auth",
      description: "A role-based authentication system with user management, email verification, and password reset functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["badge","form","input","button","label","card","avatar","switch","dropdown-menu"],
      files: [{
        path: "registry/new-york/dynamic-components/auth/pages/auth/login/page.tsx",
        type: "registry:page",
        target: "app/auth/login/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/auth/layout.tsx",
        type: "registry:file",
        target: "app/auth/layout.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/page.tsx",
        type: "registry:page",
        target: "app/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/auth/register/page.tsx",
        type: "registry:page",
        target: "app/auth/register/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/(protected)/profile/change-password/page.tsx",
        type: "registry:page",
        target: "app/(protected)/profile/change-password/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/auth/verify/page.tsx",
        type: "registry:page",
        target: "app/auth/verify/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/auth/new-password/page.tsx",
        type: "registry:page",
        target: "app/auth/new-password/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/auth/reset/page.tsx",
        type: "registry:page",
        target: "app/auth/reset/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/(protected)/admin/page.tsx",
        type: "registry:page",
        target: "app/(protected)/admin/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/(protected)/layout.tsx",
        type: "registry:file",
        target: "app/(protected)/layout.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/pages/dashboard/page.tsx",
        type: "registry:page",
        target: "app/dashboard/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/lib/get-user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/user-info.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/pages/(protected)/profile/page.tsx",
        type: "registry:page",
        target: "app/(protected)/profile/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/lib/mail.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/pages/auth/error/page.tsx",
        type: "registry:page",
        target: "app/auth/error/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/auth/middleware.ts",
        type: "registry:middleware",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/login-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/schemas/index.ts",
        type: "registry:schemas",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/route.ts",
        type: "registry:api",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/register-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/social.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/change-password-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/new-password-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/new-verification-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/reset-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/card-wrapper.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/back-button.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/error-card.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/form-success.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/form-error.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/navbar.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/user-button.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/logout-button.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/actions/auth-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/auth-helpers.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/auth.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/next-auth.d.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/routes.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/auth.config.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/actions/two-factor.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/settings-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/components/role-gate.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/emails/reset-password-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/emails/verification-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/auth/emails/two-factor-email.tsx",
        type: "registry:email",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/auth/pages/auth/login/page.tsx")),
      source: "__registry__/new-york/dynamic-components/auth/pages/auth/login/page.tsx",
      meta: undefined,
    },
    "contact-form": {
      name: "contact-form",
      description: "A contact form with email sending functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","textarea","input","form","card","dropdown-menu","tabs","badge","use-toast","toaster"],
      files: [{
        path: "registry/new-york/dynamic-components/contact-form/actions/contact-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/contact-form/hooks/use-contact-form.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/contact-form/hooks/use-message-list.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/contact-form/components/contact-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/contact-form/components/message-list.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/contact-form/admin/page.tsx",
        type: "registry:page",
        target: "app/(contact-form)/admin/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/contact-form/admin/messages/page.tsx",
        type: "registry:page",
        target: "app/(contact-form)/admin/messages/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/contact-form/admin/layout.tsx",
        type: "registry:file",
        target: "app/(contact-form)/admin/layout.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/contact-form/actions/contact-actions.ts")),
      source: "__registry__/new-york/dynamic-components/contact-form/actions/contact-actions.ts",
      meta: undefined,
    },
    "simple-auth": {
      name: "simple-auth",
      description: "A simple authentication system with email verification and password reset.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","input","form","card"],
      files: [{
        path: "registry/new-york/dynamic-components/simple-auth/components/login-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/register-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/new-password-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/new-verification-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/reset-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/card-wrapper.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/back-button.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/form-error.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/components/form-success.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/actions/auth-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/auth.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/routes.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/auth-helpers.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/get-user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/next-auth.d.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/auth.config.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/lib/mail.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/route.ts",
        type: "registry:api",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/emails/verification-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/emails/reset-password-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/auth/login/page.tsx",
        type: "registry:page",
        target: "app/auth/login/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/simple-auth/auth/register/page.tsx",
        type: "registry:page",
        target: "app/auth/register/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/simple-auth/auth/reset/page.tsx",
        type: "registry:page",
        target: "app/auth/reset/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/simple-auth/auth/new-password/page.tsx",
        type: "registry:page",
        target: "app/auth/new-password/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/simple-auth/auth/verify/page.tsx",
        type: "registry:page",
        target: "app/auth/verify/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/simple-auth/schemas/index.ts",
        type: "registry:schemas",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-auth/auth/layout.tsx",
        type: "registry:file",
        target: "app/auth/layout.tsx"
      },{
        path: "registry/new-york/dynamic-components/simple-auth/middleware.ts",
        type: "registry:middleware",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/simple-auth/components/login-form.tsx")),
      source: "__registry__/new-york/dynamic-components/simple-auth/components/login-form.tsx",
      meta: undefined,
    },
    "simple-crud-table": {
      name: "simple-crud-table",
      description: "A simple CRUD table with create, read, update, and delete functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","input","table","use-toast","toaster"],
      files: [{
        path: "registry/new-york/dynamic-components/simple-crud-table/actions/crud-table-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-crud-table/hooks/use-crud-table.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/simple-crud-table/components/simple-crud-table.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/simple-crud-table/actions/crud-table-actions.ts")),
      source: "__registry__/new-york/dynamic-components/simple-crud-table/actions/crud-table-actions.ts",
      meta: undefined,
    },
    "subscribe-newsletter": {
      name: "subscribe-newsletter",
      description: "A newsletter subscription form with email functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","textarea","input","label","alert","card","use-toast","toaster","table","badge","dropdown-menu","tabs"],
      files: [{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/actions/subscribe-newsletter-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/hooks/use-unsubscribe-form.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/components/newsletter-campaign-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/components/newsletter-subscription.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/components/subscriber-list.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/components/unsubscribe.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/components/unsubscribe-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/admin/page.tsx",
        type: "registry:page",
        target: "app/(subscribe-newsletter)/admin/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/unsubscribe/page.tsx",
        type: "registry:page",
        target: "app/(subscribe-newsletter)/unsubscribe/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/admin/newsletter/page.tsx",
        type: "registry:page",
        target: "app/(subscribe-newsletter)/admin/newsletter/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/subscribe-newsletter/admin/layout.tsx",
        type: "registry:file",
        target: "app/(subscribe-newsletter)/admin/layout.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/subscribe-newsletter/actions/subscribe-newsletter-actions.ts")),
      source: "__registry__/new-york/dynamic-components/subscribe-newsletter/actions/subscribe-newsletter-actions.ts",
      meta: undefined,
    },
    "media-uploader": {
      name: "media-uploader",
      description: "A media uploader with image and video support.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","alert-dialog","card","progress"],
      files: [{
        path: "registry/new-york/dynamic-components/media-uploader/actions/media-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/media-uploader/components/media-uploader.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/media-uploader/components/media-gallery.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/media-uploader/media/page.tsx",
        type: "registry:page",
        target: "app/(media-uploader)/media/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/media-uploader/actions/media-actions.ts")),
      source: "__registry__/new-york/dynamic-components/media-uploader/actions/media-actions.ts",
      meta: undefined,
    },
    "inventory-manager": {
      name: "inventory-manager",
      description: "An inventory manager with CRUD functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","alert","alert-dialog","dialog","toaster","skeleton","badge","dropdown-menu","table","input","select","use-toast","form"],
      files: [{
        path: "registry/new-york/dynamic-components/inventory-manager/actions/inventory.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/components/inventory-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/components/inventory-data-table.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/components/data-table.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/components/columns.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/inventory/page.tsx",
        type: "registry:page",
        target: "app/(inventory-manager)/inventory/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/lib/context.tsx",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/inventory-manager/hooks/use-inventory-data-table.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/inventory-manager/actions/inventory.ts")),
      source: "__registry__/new-york/dynamic-components/inventory-manager/actions/inventory.ts",
      meta: undefined,
    },
    "multi-step-form": {
      name: "multi-step-form",
      description: "A multi-step form with progress tracking and validation.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","avatar","form","switch","input","textarea","radio-group","select","separator","progress","use-toast"],
      files: [{
        path: "registry/new-york/dynamic-components/multi-step-form/actions/multi-step-form-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/multi-step-form/components/onboarding-wizard.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/multi-step-form/components/avatar-upload-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/multi-step-form/components/notifications-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/multi-step-form/components/personal-info-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/multi-step-form/components/preferences-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/multi-step-form/onboarding/page.tsx",
        type: "registry:page",
        target: "app/(multi-step-form)/onboarding/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/multi-step-form/actions/multi-step-form-actions.ts")),
      source: "__registry__/new-york/dynamic-components/multi-step-form/actions/multi-step-form-actions.ts",
      meta: undefined,
    },
    "quiz": {
      name: "quiz",
      description: "A quiz component with creation, taking, and result viewing functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","input","card","textarea","form","select","checkbox","radio-group","separator","use-toast","alert-dialog","progress"],
      files: [{
        path: "registry/new-york/dynamic-components/quiz/actions/quiz-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/quiz/components/quiz-builder.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/quiz/components/quiz-list.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/quiz/components/quiz-results.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/quiz/components/quiz-taker.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/quiz/lib/types.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/quiz/quizzes/[id]/results/[submissionId]/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/[id]/results/[submissionId]/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/quiz/quizzes/[id]/take/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/[id]/take/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/quiz/quizzes/[id]/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/[id]/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/quiz/quizzes/create/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/create/page.tsx"
      },{
        path: "registry/new-york/dynamic-components/quiz/quizzes/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/quiz/actions/quiz-actions.ts")),
      source: "__registry__/new-york/dynamic-components/quiz/actions/quiz-actions.ts",
      meta: undefined,
    },
    "social-auth": {
      name: "social-auth",
      description: "A social authentication component that allows users to log in using OAuth provider (Github).",
      type: "registry:dynamic-component",
      registryDependencies: ["button","card","alert"],
      files: [{
        path: "registry/new-york/dynamic-components/social-auth/actions/oauth-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/social-auth/components/oauth-login.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/social-auth/lib/oauth-utils.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/social-auth/social/page.tsx",
        type: "registry:page",
        target: "app/(social-auth)/social/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/social-auth/actions/oauth-actions.ts")),
      source: "__registry__/new-york/dynamic-components/social-auth/actions/oauth-actions.ts",
      meta: undefined,
    },
    "two-factor-form": {
      name: "two-factor-form",
      description: "A social authentication component that allows users to log in using OAuth provider (Github).",
      type: "registry:dynamic-component",
      registryDependencies: ["button","card","alert","form","input","label"],
      files: [{
        path: "registry/new-york/dynamic-components/two-factor-form/actions/two-factor-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/new-york/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/two-factor-form/components/two-factor-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/two-factor-form/lib/two-factor-utils.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/two-factor-form/emails/two-factor-template.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/new-york/dynamic-components/two-factor-form/twoFA/page.tsx",
        type: "registry:page",
        target: "app/(two-factor-form)/twoFA/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/new-york/dynamic-components/two-factor-form/actions/two-factor-actions.ts")),
      source: "__registry__/new-york/dynamic-components/two-factor-form/actions/two-factor-actions.ts",
      meta: undefined,
    },
    "area-chart-legend": {
      name: "area-chart-legend",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/area-chart-legend.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/new-york/charts/area-chart-legend.tsx")),
      source: "__registry__/new-york/charts/area-chart-legend.tsx",
      meta: undefined,
    },
    "area-chart-stacked": {
      name: "area-chart-stacked",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/area-chart-stacked.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/new-york/charts/area-chart-stacked.tsx")),
      source: "__registry__/new-york/charts/area-chart-stacked.tsx",
      meta: undefined,
    },
    "area-chart-step": {
      name: "area-chart-step",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/area-chart-step.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/new-york/charts/area-chart-step.tsx")),
      source: "__registry__/new-york/charts/area-chart-step.tsx",
      meta: undefined,
    },
    "stacked-area-percent": {
      name: "stacked-area-percent",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/stacked-area-percent.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/new-york/charts/stacked-area-percent.tsx")),
      source: "__registry__/new-york/charts/stacked-area-percent.tsx",
      meta: undefined,
    },
    "bar-chart-horizontal": {
      name: "bar-chart-horizontal",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/bar-chart-horizontal.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/new-york/charts/bar-chart-horizontal.tsx")),
      source: "__registry__/new-york/charts/bar-chart-horizontal.tsx",
      meta: undefined,
    },
    "bar-chart-label": {
      name: "bar-chart-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/bar-chart-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/new-york/charts/bar-chart-label.tsx")),
      source: "__registry__/new-york/charts/bar-chart-label.tsx",
      meta: undefined,
    },
    "bar-chart-multiple": {
      name: "bar-chart-multiple",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/bar-chart-multiple.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/new-york/charts/bar-chart-multiple.tsx")),
      source: "__registry__/new-york/charts/bar-chart-multiple.tsx",
      meta: undefined,
    },
    "bar-chart-multiple-2": {
      name: "bar-chart-multiple-2",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/bar-chart-multiple-2.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/new-york/charts/bar-chart-multiple-2.tsx")),
      source: "__registry__/new-york/charts/bar-chart-multiple-2.tsx",
      meta: undefined,
    },
    "brush-chart": {
      name: "brush-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/brush-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-brush"],
      component: React.lazy(() => import("@/registry/new-york/charts/brush-chart.tsx")),
      source: "__registry__/new-york/charts/brush-chart.tsx",
      meta: undefined,
    },
    "bubble-chart": {
      name: "bubble-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/bubble-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bubble"],
      component: React.lazy(() => import("@/registry/new-york/charts/bubble-chart.tsx")),
      source: "__registry__/new-york/charts/bubble-chart.tsx",
      meta: undefined,
    },
    "bullet-chart": {
      name: "bullet-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/bullet-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bullet"],
      component: React.lazy(() => import("@/registry/new-york/charts/bullet-chart.tsx")),
      source: "__registry__/new-york/charts/bullet-chart.tsx",
      meta: undefined,
    },
    "composed-area-chart": {
      name: "composed-area-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/composed-area-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-composed"],
      component: React.lazy(() => import("@/registry/new-york/charts/composed-area-chart.tsx")),
      source: "__registry__/new-york/charts/composed-area-chart.tsx",
      meta: undefined,
    },
    "composed-chart": {
      name: "composed-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/composed-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-composed"],
      component: React.lazy(() => import("@/registry/new-york/charts/composed-chart.tsx")),
      source: "__registry__/new-york/charts/composed-chart.tsx",
      meta: undefined,
    },
    "custom-pie-chart": {
      name: "custom-pie-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/custom-pie-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/new-york/charts/custom-pie-chart.tsx")),
      source: "__registry__/new-york/charts/custom-pie-chart.tsx",
      meta: undefined,
    },
    "custom-radial-bar": {
      name: "custom-radial-bar",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/custom-radial-bar.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/new-york/charts/custom-radial-bar.tsx")),
      source: "__registry__/new-york/charts/custom-radial-bar.tsx",
      meta: undefined,
    },
    "funnel-chart": {
      name: "funnel-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/funnel-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-funnel"],
      component: React.lazy(() => import("@/registry/new-york/charts/funnel-chart.tsx")),
      source: "__registry__/new-york/charts/funnel-chart.tsx",
      meta: undefined,
    },
    "gauge-chart": {
      name: "gauge-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/gauge-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-gauge"],
      component: React.lazy(() => import("@/registry/new-york/charts/gauge-chart.tsx")),
      source: "__registry__/new-york/charts/gauge-chart.tsx",
      meta: undefined,
    },
    "gradient-chart": {
      name: "gradient-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/gradient-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-gradient"],
      component: React.lazy(() => import("@/registry/new-york/charts/gradient-chart.tsx")),
      source: "__registry__/new-york/charts/gradient-chart.tsx",
      meta: undefined,
    },
    "heatmap-chart": {
      name: "heatmap-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/heatmap-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-heatmap"],
      component: React.lazy(() => import("@/registry/new-york/charts/heatmap-chart.tsx")),
      source: "__registry__/new-york/charts/heatmap-chart.tsx",
      meta: undefined,
    },
    "line-chart-dots": {
      name: "line-chart-dots",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/line-chart-dots.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/new-york/charts/line-chart-dots.tsx")),
      source: "__registry__/new-york/charts/line-chart-dots.tsx",
      meta: undefined,
    },
    "reference-line-chart": {
      name: "reference-line-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/reference-line-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/new-york/charts/reference-line-chart.tsx")),
      source: "__registry__/new-york/charts/reference-line-chart.tsx",
      meta: undefined,
    },
    "line-chart-linear": {
      name: "line-chart-linear",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/line-chart-linear.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/new-york/charts/line-chart-linear.tsx")),
      source: "__registry__/new-york/charts/line-chart-linear.tsx",
      meta: undefined,
    },
    "line-chart-multiple": {
      name: "line-chart-multiple",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/line-chart-multiple.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/new-york/charts/line-chart-multiple.tsx")),
      source: "__registry__/new-york/charts/line-chart-multiple.tsx",
      meta: undefined,
    },
    "line-chart": {
      name: "line-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/line-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/new-york/charts/line-chart.tsx")),
      source: "__registry__/new-york/charts/line-chart.tsx",
      meta: undefined,
    },
    "vertical-line-chart": {
      name: "vertical-line-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/vertical-line-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/new-york/charts/vertical-line-chart.tsx")),
      source: "__registry__/new-york/charts/vertical-line-chart.tsx",
      meta: undefined,
    },
    "multi-radar-chart": {
      name: "multi-radar-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/multi-radar-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radar"],
      component: React.lazy(() => import("@/registry/new-york/charts/multi-radar-chart.tsx")),
      source: "__registry__/new-york/charts/multi-radar-chart.tsx",
      meta: undefined,
    },
    "radar-chart-grid-filled": {
      name: "radar-chart-grid-filled",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/radar-chart-grid-filled.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radar"],
      component: React.lazy(() => import("@/registry/new-york/charts/radar-chart-grid-filled.tsx")),
      source: "__registry__/new-york/charts/radar-chart-grid-filled.tsx",
      meta: undefined,
    },
    "radial-chart-label": {
      name: "radial-chart-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/radial-chart-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radial"],
      component: React.lazy(() => import("@/registry/new-york/charts/radial-chart-label.tsx")),
      source: "__registry__/new-york/charts/radial-chart-label.tsx",
      meta: undefined,
    },
    "radial-chart-shape": {
      name: "radial-chart-shape",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/radial-chart-shape.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radial"],
      component: React.lazy(() => import("@/registry/new-york/charts/radial-chart-shape.tsx")),
      source: "__registry__/new-york/charts/radial-chart-shape.tsx",
      meta: undefined,
    },
    "pie-chart-donut": {
      name: "pie-chart-donut",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/pie-chart-donut.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/new-york/charts/pie-chart-donut.tsx")),
      source: "__registry__/new-york/charts/pie-chart-donut.tsx",
      meta: undefined,
    },
    "pie-chart-interactive": {
      name: "pie-chart-interactive",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/pie-chart-interactive.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/new-york/charts/pie-chart-interactive.tsx")),
      source: "__registry__/new-york/charts/pie-chart-interactive.tsx",
      meta: undefined,
    },
    "pie-chart-label": {
      name: "pie-chart-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/pie-chart-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/new-york/charts/pie-chart-label.tsx")),
      source: "__registry__/new-york/charts/pie-chart-label.tsx",
      meta: undefined,
    },
    "polar-chart": {
      name: "polar-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/polar-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-polar"],
      component: React.lazy(() => import("@/registry/new-york/charts/polar-chart.tsx")),
      source: "__registry__/new-york/charts/polar-chart.tsx",
      meta: undefined,
    },
    "scatter-chart": {
      name: "scatter-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/scatter-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-scatter"],
      component: React.lazy(() => import("@/registry/new-york/charts/scatter-chart.tsx")),
      source: "__registry__/new-york/charts/scatter-chart.tsx",
      meta: undefined,
    },
    "sunburst-chart": {
      name: "sunburst-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/sunburst-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-sunburst"],
      component: React.lazy(() => import("@/registry/new-york/charts/sunburst-chart.tsx")),
      source: "__registry__/new-york/charts/sunburst-chart.tsx",
      meta: undefined,
    },
    "timeline-chart": {
      name: "timeline-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/timeline-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-timeline"],
      component: React.lazy(() => import("@/registry/new-york/charts/timeline-chart.tsx")),
      source: "__registry__/new-york/charts/timeline-chart.tsx",
      meta: undefined,
    },
    "toolooltip-no-label": {
      name: "toolooltip-no-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/tooltip-no-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-tooltip"],
      component: React.lazy(() => import("@/registry/new-york/charts/tooltip-no-label.tsx")),
      source: "__registry__/new-york/charts/tooltip-no-label.tsx",
      meta: undefined,
    },
    "waterfall-chart": {
      name: "waterfall-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/new-york/charts/waterfall-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-waterfall"],
      component: React.lazy(() => import("@/registry/new-york/charts/waterfall-chart.tsx")),
      source: "__registry__/new-york/charts/waterfall-chart.tsx",
      meta: undefined,
    },
  },  "default": {
    "accordion": {
      name: "accordion",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/accordion.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/accordion.tsx")),
      source: "",
      meta: undefined,
    },
    "accessibility": {
      name: "accessibility",
      description: "",
      type: "registry:ui",
      registryDependencies: ["dialog","switch","button","avatar","tabs","tooltip","slider"],
      files: [{
        path: "registry/default/ui/accessibility/components/AccessibilityUI.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "registry/default/ui/accessibility/lib/accessibility-store.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/ui/accessibility/lib/screen-reader-service.ts",
        type: "registry:lib",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/accessibility/components/AccessibilityUI.tsx")),
      source: "",
      meta: undefined,
    },
    "alert": {
      name: "alert",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/alert.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/alert.tsx")),
      source: "",
      meta: undefined,
    },
    "alert-dialog": {
      name: "alert-dialog",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/ui/alert-dialog.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/alert-dialog.tsx")),
      source: "",
      meta: undefined,
    },
    "aspect-ratio": {
      name: "aspect-ratio",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/aspect-ratio.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/aspect-ratio.tsx")),
      source: "",
      meta: undefined,
    },
    "avatar": {
      name: "avatar",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/avatar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/avatar.tsx")),
      source: "",
      meta: undefined,
    },
    "badge": {
      name: "badge",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/badge.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/badge.tsx")),
      source: "",
      meta: undefined,
    },
    "bento": {
      name: "bento",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/ui/bento.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/bento.tsx")),
      source: "",
      meta: undefined,
    },
    "button": {
      name: "button",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/button.tsx")),
      source: "",
      meta: undefined,
    },
    "calendar": {
      name: "calendar",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/ui/calendar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/calendar.tsx")),
      source: "",
      meta: undefined,
    },
    "card": {
      name: "card",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/card.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/card.tsx")),
      source: "",
      meta: undefined,
    },
    "carousel": {
      name: "carousel",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/ui/carousel.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/carousel.tsx")),
      source: "",
      meta: undefined,
    },
    "chart": {
      name: "chart",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/chart.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/chart.tsx")),
      source: "",
      meta: undefined,
    },
    "checkbox": {
      name: "checkbox",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/checkbox.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/checkbox.tsx")),
      source: "",
      meta: undefined,
    },
    "collapsible": {
      name: "collapsible",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/collapsible.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/collapsible.tsx")),
      source: "",
      meta: undefined,
    },
    "command": {
      name: "command",
      description: "",
      type: "registry:ui",
      registryDependencies: ["dialog"],
      files: [{
        path: "registry/default/ui/command.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/command.tsx")),
      source: "",
      meta: undefined,
    },
    "container": {
      name: "container",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/container.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/container.tsx")),
      source: "",
      meta: undefined,
    },
    "context-menu": {
      name: "context-menu",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/context-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/context-menu.tsx")),
      source: "",
      meta: undefined,
    },
    "dialog": {
      name: "dialog",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/dialog.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/dialog.tsx")),
      source: "",
      meta: undefined,
    },
    "drawer": {
      name: "drawer",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/drawer.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/drawer.tsx")),
      source: "",
      meta: undefined,
    },
    "dot": {
      name: "dot",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/dot.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/dot.tsx")),
      source: "",
      meta: undefined,
    },
    "dropdown-menu": {
      name: "dropdown-menu",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/dropdown-menu.tsx")),
      source: "",
      meta: undefined,
    },
    "draggable": {
      name: "draggable",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/ui/draggable.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/draggable.tsx")),
      source: "",
      meta: undefined,
    },
    "flex": {
      name: "flex",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/flex.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/flex.tsx")),
      source: "",
      meta: undefined,
    },
    "form": {
      name: "form",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button","label"],
      files: [{
        path: "registry/default/ui/form.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/form.tsx")),
      source: "",
      meta: undefined,
    },
    "hover-card": {
      name: "hover-card",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/hover-card.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/hover-card.tsx")),
      source: "",
      meta: undefined,
    },
    "input": {
      name: "input",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/input.tsx")),
      source: "",
      meta: undefined,
    },
    "input-otp": {
      name: "input-otp",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/input-otp.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/input-otp.tsx")),
      source: "",
      meta: undefined,
    },
    "label": {
      name: "label",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/label.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/label.tsx")),
      source: "",
      meta: undefined,
    },
    "limited-input": {
      name: "limited-input",
      description: "",
      type: "registry:ui",
      registryDependencies: ["input"],
      files: [{
        path: "registry/default/ui/limited-input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/limited-input.tsx")),
      source: "",
      meta: undefined,
    },
    "marquee": {
      name: "marquee",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/marquee.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/marquee.tsx")),
      source: "",
      meta: undefined,
    },
    "menubar": {
      name: "menubar",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/menubar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/menubar.tsx")),
      source: "",
      meta: undefined,
    },
    "navigation-menu": {
      name: "navigation-menu",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/navigation-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/navigation-menu.tsx")),
      source: "",
      meta: undefined,
    },
    "pagination": {
      name: "pagination",
      description: "",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/ui/pagination.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/pagination.tsx")),
      source: "",
      meta: undefined,
    },
    "password-input": {
      name: "password-input",
      description: "",
      type: "registry:ui",
      registryDependencies: ["input"],
      files: [{
        path: "registry/default/ui/password-input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/password-input.tsx")),
      source: "",
      meta: undefined,
    },
    "popover": {
      name: "popover",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/popover.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/popover.tsx")),
      source: "",
      meta: undefined,
    },
    "progress": {
      name: "progress",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/progress.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/progress.tsx")),
      source: "",
      meta: undefined,
    },
    "radio-group": {
      name: "radio-group",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/radio-group.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/radio-group.tsx")),
      source: "",
      meta: undefined,
    },
    "resizable": {
      name: "resizable",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/resizable.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/resizable.tsx")),
      source: "",
      meta: undefined,
    },
    "scroll-area": {
      name: "scroll-area",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/scroll-area.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/scroll-area.tsx")),
      source: "",
      meta: undefined,
    },
    "select": {
      name: "select",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/select.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/select.tsx")),
      source: "",
      meta: undefined,
    },
    "separator": {
      name: "separator",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/separator.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/separator.tsx")),
      source: "",
      meta: undefined,
    },
    "sheet": {
      name: "sheet",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/sheet.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/sheet.tsx")),
      source: "",
      meta: undefined,
    },
    "skeleton": {
      name: "skeleton",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/skeleton.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/skeleton.tsx")),
      source: "",
      meta: undefined,
    },
    "slider": {
      name: "slider",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/slider.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/slider.tsx")),
      source: "",
      meta: undefined,
    },
    "sonner": {
      name: "sonner",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/sonner.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/sonner.tsx")),
      source: "",
      meta: undefined,
    },
    "switch": {
      name: "switch",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/switch.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/switch.tsx")),
      source: "",
      meta: undefined,
    },
    "table": {
      name: "table",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/table.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/table.tsx")),
      source: "",
      meta: undefined,
    },
    "tabs": {
      name: "tabs",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/tabs.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/tabs.tsx")),
      source: "",
      meta: undefined,
    },
    "tag-input": {
      name: "tag-input",
      description: "",
      type: "registry:ui",
      registryDependencies: ["label"],
      files: [{
        path: "registry/default/ui/tag-input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/tag-input.tsx")),
      source: "",
      meta: undefined,
    },
    "textarea": {
      name: "textarea",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/textarea.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/textarea.tsx")),
      source: "",
      meta: undefined,
    },
    "toast": {
      name: "toast",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/toast.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/toast.tsx")),
      source: "",
      meta: undefined,
    },
    "toaster": {
      name: "toaster",
      description: "",
      type: "registry:ui",
      registryDependencies: ["toast","use-toast"],
      files: [{
        path: "registry/default/ui/toaster.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/toaster.tsx")),
      source: "",
      meta: undefined,
    },
    "toggle": {
      name: "toggle",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/toggle.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/toggle.tsx")),
      source: "",
      meta: undefined,
    },
    "toggle-group": {
      name: "toggle-group",
      description: "",
      type: "registry:ui",
      registryDependencies: ["toggle"],
      files: [{
        path: "registry/default/ui/toggle-group.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/toggle-group.tsx")),
      source: "",
      meta: undefined,
    },
    "tooltip": {
      name: "tooltip",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/ui/tooltip.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/ui/tooltip.tsx")),
      source: "",
      meta: undefined,
    },
    "utils": {
      name: "utils",
      description: "",
      type: "registry:lib",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/lib/utils.ts",
        type: "registry:lib",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/lib/utils.ts")),
      source: "",
      meta: undefined,
    },
    "use-async": {
      name: "use-async",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-async.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-async.tsx")),
      source: "",
      meta: undefined,
    },
    "use-click-outside": {
      name: "use-click-outside",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-click-outside.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-click-outside.tsx")),
      source: "",
      meta: undefined,
    },
    "use-copy-to-clipboard": {
      name: "use-copy-to-clipboard",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-copy-to-clipboard.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-copy-to-clipboard.tsx")),
      source: "",
      meta: undefined,
    },
    "use-debounce": {
      name: "use-debounce",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-debounce.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-debounce.tsx")),
      source: "",
      meta: undefined,
    },
    "use-form": {
      name: "use-form",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-form.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-form.tsx")),
      source: "",
      meta: undefined,
    },
    "use-fullscreen": {
      name: "use-fullscreen",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-fullscreen.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-fullscreen.ts")),
      source: "",
      meta: undefined,
    },
    "use-geolocation": {
      name: "use-geolocation",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-geolocation.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-geolocation.tsx")),
      source: "",
      meta: undefined,
    },
    "use-idle-timeout": {
      name: "use-idle-timeout",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-idle-timeout.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-idle-timeout.tsx")),
      source: "",
      meta: undefined,
    },
    "use-infinite-scroll": {
      name: "use-infinite-scroll",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-infinite-scroll.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-infinite-scroll.tsx")),
      source: "",
      meta: undefined,
    },
    "use-intersection-observer": {
      name: "use-intersection-observer",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-intersection-observer.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-intersection-observer.tsx")),
      source: "",
      meta: undefined,
    },
    "use-keyboard": {
      name: "use-keyboard",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-keyboard.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-keyboard.tsx")),
      source: "",
      meta: undefined,
    },
    "use-local-storage": {
      name: "use-local-storage",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-local-storage.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-local-storage.tsx")),
      source: "",
      meta: undefined,
    },
    "use-media-query": {
      name: "use-media-query",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-media-query.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-media-query.tsx")),
      source: "",
      meta: undefined,
    },
    "use-mobile": {
      name: "use-mobile",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-mobile.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-mobile.tsx")),
      source: "",
      meta: undefined,
    },
    "use-pagination": {
      name: "use-pagination",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-pagination.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-pagination.tsx")),
      source: "",
      meta: undefined,
    },
    "use-polling": {
      name: "use-polling",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-polling.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-polling.ts")),
      source: "",
      meta: undefined,
    },
    "use-scroll-position": {
      name: "use-scroll-position",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-scroll-position.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-scroll-position.tsx")),
      source: "",
      meta: undefined,
    },
    "use-sse-listener": {
      name: "use-sse-listener",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-sse-listener.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-sse-listener.tsx")),
      source: "",
      meta: undefined,
    },
    "use-theme": {
      name: "use-theme",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-theme.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-theme.tsx")),
      source: "",
      meta: undefined,
    },
    "use-toast": {
      name: "use-toast",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-toast.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-toast.tsx")),
      source: "",
      meta: undefined,
    },
    "use-toggle": {
      name: "use-toggle",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-toggle.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-toggle.tsx")),
      source: "",
      meta: undefined,
    },
    "use-undo-redo": {
      name: "use-undo-redo",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-undo-redo.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-undo-redo.tsx")),
      source: "",
      meta: undefined,
    },
    "use-virtual-list": {
      name: "use-virtual-list",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-virtual-list.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-virtual-list.tsx")),
      source: "",
      meta: undefined,
    },
    "use-web-socket": {
      name: "use-web-socket",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/hooks/use-web-socket.tsx",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/hooks/use-web-socket.tsx")),
      source: "",
      meta: undefined,
    },
    "login-01": {
      name: "login-01",
      description: "A simple login page.",
      type: "registry:block",
      registryDependencies: ["button","card","input","form"],
      files: [{
        path: "registry/default/blocks/login-01/page.tsx",
        type: "registry:page",
        target: "app/login/page.tsx"
      },{
        path: "registry/default/blocks/login-01/components/login-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/blocks/login-01/components/card-wrapper.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/blocks/login-01/components/social.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: ["authentication","login"],
      component: React.lazy(() => import("@/registry/default/blocks/login-01/page.tsx")),
      source: "__registry__/default/blocks/login-01/page.tsx",
      meta: undefined,
    },
    "login-02": {
      name: "login-02",
      description: "A two column login page with a cover image.",
      type: "registry:block",
      registryDependencies: ["button","card","input","form"],
      files: [{
        path: "registry/default/blocks/login-02/page.tsx",
        type: "registry:page",
        target: "app/login/page.tsx"
      },{
        path: "registry/default/blocks/login-02/components/login-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/blocks/login-02/components/card-wrapper.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/blocks/login-02/components/social.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/blocks/login-02/images/placeholder.svg",
        type: "registry:file",
        target: "public/placeholder.svg"
      },{
        path: "registry/default/blocks/login-02/images/login-logo.svg",
        type: "registry:file",
        target: "public/login-logo.svg"
      }],
      categories: ["authentication","login"],
      component: React.lazy(() => import("@/registry/default/blocks/login-02/page.tsx")),
      source: "__registry__/default/blocks/login-02/page.tsx",
      meta: undefined,
    },
    "animated-group": {
      name: "animated-group",
      description: "A simple animated group block.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/animated-group.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/animated-group.tsx")),
      source: "__registry__/default/blocks/animated-group.tsx",
      meta: undefined,
    },
    "cta-card": {
      name: "cta-card",
      description: "A simple call to action card block.",
      type: "registry:block",
      registryDependencies: ["button","card"],
      files: [{
        path: "registry/default/blocks/cta-card.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/cta-card.tsx")),
      source: "__registry__/default/blocks/cta-card.tsx",
      meta: undefined,
    },
    "cta-centered": {
      name: "cta-centered",
      description: "A centered call to action block.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/cta-centered.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/cta-centered.tsx")),
      source: "__registry__/default/blocks/cta-centered.tsx",
      meta: undefined,
    },
    "event-registration-form-1": {
      name: "event-registration-form-1",
      description: "A form for event registration.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","radio-group","checkbox","select","use-toast","badge","tooltip"],
      files: [{
        path: "registry/default/blocks/event-registration-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/event-registration-form-1.tsx")),
      source: "__registry__/default/blocks/event-registration-form-1.tsx",
      meta: undefined,
    },
    "event-registration-form-2": {
      name: "event-registration-form-2",
      description: "A form for event registration.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","textarea","checkbox","select","use-toast","separator"],
      files: [{
        path: "registry/default/blocks/event-registration-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/event-registration-form-2.tsx")),
      source: "__registry__/default/blocks/event-registration-form-2.tsx",
      meta: undefined,
    },
    "event-registration-form-3": {
      name: "event-registration-form-3",
      description: "A form for event registration.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast","radio-group"],
      files: [{
        path: "registry/default/blocks/event-registration-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/event-registration-form-3.tsx")),
      source: "__registry__/default/blocks/event-registration-form-3.tsx",
      meta: undefined,
    },
    "faq-accordion": {
      name: "faq-accordion",
      description: "A FAQ accordion component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/faq-accordion.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/faq-accordion.tsx")),
      source: "__registry__/default/blocks/faq-accordion.tsx",
      meta: undefined,
    },
    "faq-grid": {
      name: "faq-grid",
      description: "A FAQ grid component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/faq-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/faq-grid.tsx")),
      source: "__registry__/default/blocks/faq-grid.tsx",
      meta: undefined,
    },
    "faq-tabs": {
      name: "faq-tabs",
      description: "A FAQ tabs component.",
      type: "registry:block",
      registryDependencies: ["tabs","input"],
      files: [{
        path: "registry/default/blocks/faq-tabs.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/faq-tabs.tsx")),
      source: "__registry__/default/blocks/faq-tabs.tsx",
      meta: undefined,
    },
    "footer-dark": {
      name: "footer-dark",
      description: "A dark footer component.",
      type: "registry:block",
      registryDependencies: ["logo","input","button"],
      files: [{
        path: "registry/default/blocks/footer-dark.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/footer-dark.tsx")),
      source: "__registry__/default/blocks/footer-dark.tsx",
      meta: undefined,
    },
    "footer-multi-column": {
      name: "footer-multi-column",
      description: "A multi-column footer component.",
      type: "registry:block",
      registryDependencies: ["logo","input","button"],
      files: [{
        path: "registry/default/blocks/footer-multi-column.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/footer-multi-column.tsx")),
      source: "__registry__/default/blocks/footer-multi-column.tsx",
      meta: undefined,
    },
    "footer-simple": {
      name: "footer-simple",
      description: "A simple footer component.",
      type: "registry:block",
      registryDependencies: ["logo"],
      files: [{
        path: "registry/default/blocks/footer-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/footer-simple.tsx")),
      source: "__registry__/default/blocks/footer-simple.tsx",
      meta: undefined,
    },
    "hero-app": {
      name: "hero-app",
      description: "A hero app component.",
      type: "registry:block",
      registryDependencies: ["button","badge"],
      files: [{
        path: "registry/default/blocks/hero-app.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/hero-app.tsx")),
      source: "__registry__/default/blocks/hero-app.tsx",
      meta: undefined,
    },
    "hero-centered": {
      name: "hero-centered",
      description: "A centered hero component.",
      type: "registry:block",
      registryDependencies: ["button","badge"],
      files: [{
        path: "registry/default/blocks/hero-centered.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/hero-centered.tsx")),
      source: "__registry__/default/blocks/hero-centered.tsx",
      meta: undefined,
    },
    "hero-gradient": {
      name: "hero-gradient",
      description: "A gradient hero component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/hero-gradient.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/hero-gradient.tsx")),
      source: "__registry__/default/blocks/hero-gradient.tsx",
      meta: undefined,
    },
    "hero-simple": {
      name: "hero-simple",
      description: "A simple hero component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/hero-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/hero-simple.tsx")),
      source: "__registry__/default/blocks/hero-simple.tsx",
      meta: undefined,
    },
    "hero-split": {
      name: "hero-split",
      description: "A split hero component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/hero-split.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/hero-split.tsx")),
      source: "__registry__/default/blocks/hero-split.tsx",
      meta: undefined,
    },
    "hero-video": {
      name: "hero-video",
      description: "A video hero component.",
      type: "registry:block",
      registryDependencies: ["button","dialog"],
      files: [{
        path: "registry/default/blocks/hero-video.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/hero-video.tsx")),
      source: "__registry__/default/blocks/hero-video.tsx",
      meta: undefined,
    },
    "infinite-slider": {
      name: "infinite-slider",
      description: "An infinite slider component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/infinite-slider.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/infinite-slider.tsx")),
      source: "__registry__/default/blocks/infinite-slider.tsx",
      meta: undefined,
    },
    "login-form-1": {
      name: "login-form-1",
      description: "A login form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","checkbox","use-toast","password-input"],
      files: [{
        path: "registry/default/blocks/login-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/login-form-1.tsx")),
      source: "__registry__/default/blocks/login-form-1.tsx",
      meta: undefined,
    },
    "login-form-2": {
      name: "login-form-2",
      description: "A login form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast"],
      files: [{
        path: "registry/default/blocks/login-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/login-form-2.tsx")),
      source: "__registry__/default/blocks/login-form-2.tsx",
      meta: undefined,
    },
    "login-form-3": {
      name: "login-form-3",
      description: "A login form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast"],
      files: [{
        path: "registry/default/blocks/login-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/login-form-3.tsx")),
      source: "__registry__/default/blocks/login-form-3.tsx",
      meta: undefined,
    },
    "logo-cloud-featured": {
      name: "logo-cloud-featured",
      description: "A logo cloud featured component.",
      type: "registry:block",
      registryDependencies: ["badge"],
      files: [{
        path: "registry/default/blocks/logo-cloud-featured.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/logo-cloud-featured.tsx")),
      source: "__registry__/default/blocks/logo-cloud-featured.tsx",
      meta: undefined,
    },
    "logo-cloud-grid": {
      name: "logo-cloud-grid",
      description: "A logo cloud grid component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/logo-cloud-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/logo-cloud-grid.tsx")),
      source: "__registry__/default/blocks/logo-cloud-grid.tsx",
      meta: undefined,
    },
    "logo-cloud-infinite": {
      name: "logo-cloud-infinite",
      description: "A logo cloud infinite component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/logo-cloud-infinite.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/logo-cloud-infinite.tsx")),
      source: "__registry__/default/blocks/logo-cloud-infinite.tsx",
      meta: undefined,
    },
    "logo-cloud-simple": {
      name: "logo-cloud-simple",
      description: "A logo cloud simple component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/logo-cloud-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/logo-cloud-simple.tsx")),
      source: "__registry__/default/blocks/logo-cloud-simple.tsx",
      meta: undefined,
    },
    "navbar-animated": {
      name: "navbar-animated",
      description: "A navbar animated component.",
      type: "registry:block",
      registryDependencies: ["button","input","avatar","sheet","logo"],
      files: [{
        path: "registry/default/blocks/navbar-animated.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-animated.tsx")),
      source: "__registry__/default/blocks/navbar-animated.tsx",
      meta: undefined,
    },
    "navbar-bottom-icons": {
      name: "navbar-bottom-icons",
      description: "A navbar bottom icons component.",
      type: "registry:block",
      registryDependencies: ["button","separator","tooltip"],
      files: [{
        path: "registry/default/blocks/navbar-bottom-icons.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-bottom-icons.tsx")),
      source: "__registry__/default/blocks/navbar-bottom-icons.tsx",
      meta: undefined,
    },
    "navbar-desktop": {
      name: "navbar-desktop",
      description: "A navbar desktop component.",
      type: "registry:block",
      registryDependencies: ["button","logo","navigation-menu","mode-toggle"],
      files: [{
        path: "registry/default/blocks/navbar-desktop.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-desktop.tsx")),
      source: "__registry__/default/blocks/navbar-desktop.tsx",
      meta: undefined,
    },
    "navbar-dropdown": {
      name: "navbar-dropdown",
      description: "A navbar dropdown component.",
      type: "registry:block",
      registryDependencies: ["button","dropdown-menu"],
      files: [{
        path: "registry/default/blocks/navbar-dropdown.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-dropdown.tsx")),
      source: "__registry__/default/blocks/navbar-dropdown.tsx",
      meta: undefined,
    },
    "navbar-mobile": {
      name: "navbar-mobile",
      description: "A navbar mobile component.",
      type: "registry:block",
      registryDependencies: ["button","logo","sheet","mode-toggle"],
      files: [{
        path: "registry/default/blocks/navbar-mobile.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-mobile.tsx")),
      source: "__registry__/default/blocks/navbar-mobile.tsx",
      meta: undefined,
    },
    "navbar-responsive": {
      name: "navbar-responsive",
      description: "A navbar responsive component.",
      type: "registry:block",
      registryDependencies: ["button","input","sheet"],
      files: [{
        path: "registry/default/blocks/navbar-responsive.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-responsive.tsx")),
      source: "__registry__/default/blocks/navbar-responsive.tsx",
      meta: undefined,
    },
    "navbar-simple": {
      name: "navbar-simple",
      description: "A simple navbar component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/navbar-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/navbar-simple.tsx")),
      source: "__registry__/default/blocks/navbar-simple.tsx",
      meta: undefined,
    },
    "newsletter-form-1": {
      name: "newsletter-form-1",
      description: "A newsletter form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast"],
      files: [{
        path: "registry/default/blocks/newsletter-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/newsletter-form-1.tsx")),
      source: "__registry__/default/blocks/newsletter-form-1.tsx",
      meta: undefined,
    },
    "newsletter-form-2": {
      name: "newsletter-form-2",
      description: "A newsletter form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast","checkbox","switch","tooltip"],
      files: [{
        path: "registry/default/blocks/newsletter-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/newsletter-form-2.tsx")),
      source: "__registry__/default/blocks/newsletter-form-2.tsx",
      meta: undefined,
    },
    "newsletter-form-3": {
      name: "newsletter-form-3",
      description: "A newsletter form component.",
      type: "registry:block",
      registryDependencies: ["button","input","form","use-toast","select"],
      files: [{
        path: "registry/default/blocks/newsletter-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/newsletter-form-3.tsx")),
      source: "__registry__/default/blocks/newsletter-form-3.tsx",
      meta: undefined,
    },
    "pricing-comparison": {
      name: "pricing-comparison",
      description: "A pricing comparison component.",
      type: "registry:block",
      registryDependencies: ["button","badge","table","use-media-query"],
      files: [{
        path: "registry/default/blocks/pricing-comparison.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/pricing-comparison.tsx")),
      source: "__registry__/default/blocks/pricing-comparison.tsx",
      meta: undefined,
    },
    "pricing-simple": {
      name: "pricing-simple",
      description: "A simple pricing component.",
      type: "registry:block",
      registryDependencies: ["button","badge","separator"],
      files: [{
        path: "registry/default/blocks/pricing-simple.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/pricing-simple.tsx")),
      source: "__registry__/default/blocks/pricing-simple.tsx",
      meta: undefined,
    },
    "pricing-toggle": {
      name: "pricing-toggle",
      description: "A toggle pricing component.",
      type: "registry:block",
      registryDependencies: ["button","badge","separator","tabs","tooltip"],
      files: [{
        path: "registry/default/blocks/pricing-toggle.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/pricing-toggle.tsx")),
      source: "__registry__/default/blocks/pricing-toggle.tsx",
      meta: undefined,
    },
    "progressive-blur": {
      name: "progressive-blur",
      description: "A progressive blur component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/progressive-blur.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/progressive-blur.tsx")),
      source: "__registry__/default/blocks/progressive-blur.tsx",
      meta: undefined,
    },
    "questionnaire-form-1": {
      name: "questionnaire-form-1",
      description: "A questionnaire form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","radio-group","checkbox","textarea","use-toast"],
      files: [{
        path: "registry/default/blocks/questionnaire-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/questionnaire-form-1.tsx")),
      source: "__registry__/default/blocks/questionnaire-form-1.tsx",
      meta: undefined,
    },
    "questionnaire-form-2": {
      name: "questionnaire-form-2",
      description: "A questionnaire form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","separator","progress","radio-group","checkbox","textarea","use-toast"],
      files: [{
        path: "registry/default/blocks/questionnaire-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/questionnaire-form-2.tsx")),
      source: "__registry__/default/blocks/questionnaire-form-2.tsx",
      meta: undefined,
    },
    "questionnaire-form-3": {
      name: "questionnaire-form-3",
      description: "A questionnaire form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","textarea","use-toast"],
      files: [{
        path: "registry/default/blocks/questionnaire-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/questionnaire-form-3.tsx")),
      source: "__registry__/default/blocks/questionnaire-form-3.tsx",
      meta: undefined,
    },
    "reset-password-form-1": {
      name: "reset-password-form-1",
      description: "A reset password form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","alert"],
      files: [{
        path: "registry/default/blocks/reset-password-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/reset-password-form-1.tsx")),
      source: "__registry__/default/blocks/reset-password-form-1.tsx",
      meta: undefined,
    },
    "reset-password-form-2": {
      name: "reset-password-form-2",
      description: "A reset password form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","password-input","use-toast"],
      files: [{
        path: "registry/default/blocks/reset-password-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/reset-password-form-2.tsx")),
      source: "__registry__/default/blocks/reset-password-form-2.tsx",
      meta: undefined,
    },
    "reset-password-form-3": {
      name: "reset-password-form-3",
      description: "A reset password form.",
      type: "registry:block",
      registryDependencies: ["button","input","form"],
      files: [{
        path: "registry/default/blocks/reset-password-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/reset-password-form-3.tsx")),
      source: "__registry__/default/blocks/reset-password-form-3.tsx",
      meta: undefined,
    },
    "signup-form-1": {
      name: "signup-form-1",
      description: "A signup form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","card","use-toast","password-input","toast"],
      files: [{
        path: "registry/default/blocks/signup-form-1.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/signup-form-1.tsx")),
      source: "__registry__/default/blocks/signup-form-1.tsx",
      meta: undefined,
    },
    "signup-form-2": {
      name: "signup-form-2",
      description: "A signup form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast","password-input","separator","badge"],
      files: [{
        path: "registry/default/blocks/signup-form-2.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/signup-form-2.tsx")),
      source: "__registry__/default/blocks/signup-form-2.tsx",
      meta: undefined,
    },
    "signup-form-3": {
      name: "signup-form-3",
      description: "A signup form.",
      type: "registry:block",
      registryDependencies: ["button","input","form","checkbox","use-toast","password-input"],
      files: [{
        path: "registry/default/blocks/signup-form-3.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/signup-form-3.tsx")),
      source: "__registry__/default/blocks/signup-form-3.tsx",
      meta: undefined,
    },
    "stats-cards": {
      name: "stats-cards",
      description: "A stats cards component.",
      type: "registry:block",
      registryDependencies: ["card"],
      files: [{
        path: "registry/default/blocks/stats-cards.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/stats-cards.tsx")),
      source: "__registry__/default/blocks/stats-cards.tsx",
      meta: undefined,
    },
    "stats-feature": {
      name: "stats-feature",
      description: "A stats feature component.",
      type: "registry:block",
      registryDependencies: ["button"],
      files: [{
        path: "registry/default/blocks/stats-feature.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/stats-feature.tsx")),
      source: "__registry__/default/blocks/stats-feature.tsx",
      meta: undefined,
    },
    "stats-grid": {
      name: "stats-grid",
      description: "A stats grid component.",
      type: "registry:block",
      registryDependencies: undefined,
      files: [{
        path: "registry/default/blocks/stats-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/stats-grid.tsx")),
      source: "__registry__/default/blocks/stats-grid.tsx",
      meta: undefined,
    },
    "table-basic": {
      name: "table-basic",
      description: "A basic table component.",
      type: "registry:block",
      registryDependencies: ["table","badge","avatar"],
      files: [{
        path: "registry/default/blocks/table-basic.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/table-basic.tsx")),
      source: "__registry__/default/blocks/table-basic.tsx",
      meta: undefined,
    },
    "table-complex": {
      name: "table-complex",
      description: "A complex table component.",
      type: "registry:block",
      registryDependencies: ["table"],
      files: [{
        path: "registry/default/blocks/table-complex.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/table-complex.tsx")),
      source: "__registry__/default/blocks/table-complex.tsx",
      meta: undefined,
    },
    "table-interactive": {
      name: "table-interactive",
      description: "An interactive table component.",
      type: "registry:block",
      registryDependencies: ["table","button","input","dropdown-menu"],
      files: [{
        path: "registry/default/blocks/table-interactive.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/table-interactive.tsx")),
      source: "__registry__/default/blocks/table-interactive.tsx",
      meta: undefined,
    },
    "testimonials-carousel": {
      name: "testimonials-carousel",
      description: "An testimonials carousel component.",
      type: "registry:block",
      registryDependencies: ["card","button","avatar"],
      files: [{
        path: "registry/default/blocks/testimonials-carousel.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/testimonials-carousel.tsx")),
      source: "__registry__/default/blocks/testimonials-carousel.tsx",
      meta: undefined,
    },
    "testimonials-featured": {
      name: "testimonials-featured",
      description: "An featured testimonials component.",
      type: "registry:block",
      registryDependencies: ["card","avatar","badge"],
      files: [{
        path: "registry/default/blocks/testimonials-featured.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/testimonials-featured.tsx")),
      source: "__registry__/default/blocks/testimonials-featured.tsx",
      meta: undefined,
    },
    "testimonials-grid": {
      name: "testimonials-grid",
      description: "A grid of testimonials.",
      type: "registry:block",
      registryDependencies: ["card","avatar"],
      files: [{
        path: "registry/default/blocks/testimonials-grid.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/blocks/testimonials-grid.tsx")),
      source: "__registry__/default/blocks/testimonials-grid.tsx",
      meta: undefined,
    },
    "rbac-auth": {
      name: "rbac-auth",
      description: "A role-based authentication system with user management, email verification, and password reset functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["badge","form","input","button","label","card","avatar","switch","dropdown-menu"],
      files: [{
        path: "registry/default/dynamic-components/auth/pages/auth/login/page.tsx",
        type: "registry:page",
        target: "app/auth/login/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/auth/layout.tsx",
        type: "registry:file",
        target: "app/auth/layout.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/page.tsx",
        type: "registry:page",
        target: "app/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/auth/register/page.tsx",
        type: "registry:page",
        target: "app/auth/register/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/(protected)/profile/change-password/page.tsx",
        type: "registry:page",
        target: "app/(protected)/profile/change-password/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/auth/verify/page.tsx",
        type: "registry:page",
        target: "app/auth/verify/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/auth/new-password/page.tsx",
        type: "registry:page",
        target: "app/auth/new-password/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/auth/reset/page.tsx",
        type: "registry:page",
        target: "app/auth/reset/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/(protected)/admin/page.tsx",
        type: "registry:page",
        target: "app/(protected)/admin/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/(protected)/layout.tsx",
        type: "registry:file",
        target: "app/(protected)/layout.tsx"
      },{
        path: "registry/default/dynamic-components/auth/pages/dashboard/page.tsx",
        type: "registry:page",
        target: "app/dashboard/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/lib/get-user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/user-info.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/pages/(protected)/profile/page.tsx",
        type: "registry:page",
        target: "app/(protected)/profile/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/lib/mail.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/pages/auth/error/page.tsx",
        type: "registry:page",
        target: "app/auth/error/page.tsx"
      },{
        path: "registry/default/dynamic-components/auth/middleware.ts",
        type: "registry:middleware",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/login-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/schemas/index.ts",
        type: "registry:schemas",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/route.ts",
        type: "registry:api",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/register-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/social.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/change-password-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/new-password-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/new-verification-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/reset-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/card-wrapper.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/back-button.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/error-card.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/form-success.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/form-error.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/navbar.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/user-button.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/logout-button.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/actions/auth-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/auth-helpers.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/auth.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/next-auth.d.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/routes.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/auth.config.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/actions/two-factor.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/settings-form.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/components/role-gate.tsx",
        type: "registry:auth_comp",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/emails/reset-password-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/emails/verification-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/default/dynamic-components/auth/emails/two-factor-email.tsx",
        type: "registry:email",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/auth/pages/auth/login/page.tsx")),
      source: "__registry__/default/dynamic-components/auth/pages/auth/login/page.tsx",
      meta: undefined,
    },
    "contact-form": {
      name: "contact-form",
      description: "A contact form with email sending functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","textarea","input","form","card","dropdown-menu","tabs","badge","use-toast","toaster"],
      files: [{
        path: "registry/default/dynamic-components/contact-form/actions/contact-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/contact-form/hooks/use-contact-form.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/default/dynamic-components/contact-form/hooks/use-message-list.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/default/dynamic-components/contact-form/components/contact-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/contact-form/components/message-list.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/contact-form/admin/page.tsx",
        type: "registry:page",
        target: "app/(contact-form)/admin/page.tsx"
      },{
        path: "registry/default/dynamic-components/contact-form/admin/messages/page.tsx",
        type: "registry:page",
        target: "app/(contact-form)/admin/messages/page.tsx"
      },{
        path: "registry/default/dynamic-components/contact-form/admin/layout.tsx",
        type: "registry:file",
        target: "app/(contact-form)/admin/layout.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/contact-form/actions/contact-actions.ts")),
      source: "__registry__/default/dynamic-components/contact-form/actions/contact-actions.ts",
      meta: undefined,
    },
    "simple-auth": {
      name: "simple-auth",
      description: "A simple authentication system with email verification and password reset.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","input","form","card"],
      files: [{
        path: "registry/default/dynamic-components/simple-auth/components/login-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/register-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/new-password-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/new-verification-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/reset-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/card-wrapper.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/back-button.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/form-error.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/components/form-success.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/actions/auth-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/auth.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/routes.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/auth-helpers.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/get-user.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/next-auth.d.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/auth.config.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/lib/mail.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/route.ts",
        type: "registry:api",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/emails/verification-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/emails/reset-password-email.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/auth/login/page.tsx",
        type: "registry:page",
        target: "app/auth/login/page.tsx"
      },{
        path: "registry/default/dynamic-components/simple-auth/auth/register/page.tsx",
        type: "registry:page",
        target: "app/auth/register/page.tsx"
      },{
        path: "registry/default/dynamic-components/simple-auth/auth/reset/page.tsx",
        type: "registry:page",
        target: "app/auth/reset/page.tsx"
      },{
        path: "registry/default/dynamic-components/simple-auth/auth/new-password/page.tsx",
        type: "registry:page",
        target: "app/auth/new-password/page.tsx"
      },{
        path: "registry/default/dynamic-components/simple-auth/auth/verify/page.tsx",
        type: "registry:page",
        target: "app/auth/verify/page.tsx"
      },{
        path: "registry/default/dynamic-components/simple-auth/schemas/index.ts",
        type: "registry:schemas",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-auth/auth/layout.tsx",
        type: "registry:file",
        target: "app/auth/layout.tsx"
      },{
        path: "registry/default/dynamic-components/simple-auth/middleware.ts",
        type: "registry:middleware",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/simple-auth/components/login-form.tsx")),
      source: "__registry__/default/dynamic-components/simple-auth/components/login-form.tsx",
      meta: undefined,
    },
    "simple-crud-table": {
      name: "simple-crud-table",
      description: "A simple CRUD table with create, read, update, and delete functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","input","table","use-toast","toaster"],
      files: [{
        path: "registry/default/dynamic-components/simple-crud-table/actions/crud-table-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-crud-table/hooks/use-crud-table.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/default/dynamic-components/simple-crud-table/components/simple-crud-table.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/simple-crud-table/actions/crud-table-actions.ts")),
      source: "__registry__/default/dynamic-components/simple-crud-table/actions/crud-table-actions.ts",
      meta: undefined,
    },
    "subscribe-newsletter": {
      name: "subscribe-newsletter",
      description: "A newsletter subscription form with email functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","textarea","input","label","alert","card","use-toast","toaster","table","badge","dropdown-menu","tabs"],
      files: [{
        path: "registry/default/dynamic-components/subscribe-newsletter/actions/subscribe-newsletter-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/hooks/use-unsubscribe-form.ts",
        type: "registry:hook",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/components/newsletter-campaign-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/components/newsletter-subscription.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/components/subscriber-list.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/components/unsubscribe.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/components/unsubscribe-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/admin/page.tsx",
        type: "registry:page",
        target: "app/(subscribe-newsletter)/admin/page.tsx"
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/unsubscribe/page.tsx",
        type: "registry:page",
        target: "app/(subscribe-newsletter)/unsubscribe/page.tsx"
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/admin/newsletter/page.tsx",
        type: "registry:page",
        target: "app/(subscribe-newsletter)/admin/newsletter/page.tsx"
      },{
        path: "registry/default/dynamic-components/subscribe-newsletter/admin/layout.tsx",
        type: "registry:file",
        target: "app/(subscribe-newsletter)/admin/layout.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/subscribe-newsletter/actions/subscribe-newsletter-actions.ts")),
      source: "__registry__/default/dynamic-components/subscribe-newsletter/actions/subscribe-newsletter-actions.ts",
      meta: undefined,
    },
    "media-uploader": {
      name: "media-uploader",
      description: "A media uploader with image and video support.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","alert-dialog","card","progress"],
      files: [{
        path: "registry/default/dynamic-components/media-uploader/actions/media-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/media-uploader/components/media-uploader.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/media-uploader/components/media-gallery.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/media-uploader/media/page.tsx",
        type: "registry:page",
        target: "app/(media-uploader)/media/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/media-uploader/actions/media-actions.ts")),
      source: "__registry__/default/dynamic-components/media-uploader/actions/media-actions.ts",
      meta: undefined,
    },
    "inventory-manager": {
      name: "inventory-manager",
      description: "An inventory manager with CRUD functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","alert","alert-dialog","dialog","toaster","skeleton","badge","dropdown-menu","table","input","select","use-toast","form"],
      files: [{
        path: "registry/default/dynamic-components/inventory-manager/actions/inventory.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/inventory-manager/components/inventory-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/inventory-manager/components/inventory-data-table.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/inventory-manager/components/data-table.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/inventory-manager/components/columns.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/inventory-manager/inventory/page.tsx",
        type: "registry:page",
        target: "app/(inventory-manager)/inventory/page.tsx"
      },{
        path: "registry/default/dynamic-components/inventory-manager/lib/context.tsx",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/inventory-manager/hooks/use-inventory-data-table.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/inventory-manager/actions/inventory.ts")),
      source: "__registry__/default/dynamic-components/inventory-manager/actions/inventory.ts",
      meta: undefined,
    },
    "multi-step-form": {
      name: "multi-step-form",
      description: "A multi-step form with progress tracking and validation.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","avatar","form","switch","input","textarea","radio-group","select","separator","progress","use-toast"],
      files: [{
        path: "registry/default/dynamic-components/multi-step-form/actions/multi-step-form-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/multi-step-form/components/onboarding-wizard.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/multi-step-form/components/avatar-upload-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/multi-step-form/components/notifications-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/multi-step-form/components/personal-info-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/multi-step-form/components/preferences-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/multi-step-form/onboarding/page.tsx",
        type: "registry:page",
        target: "app/(multi-step-form)/onboarding/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/multi-step-form/actions/multi-step-form-actions.ts")),
      source: "__registry__/default/dynamic-components/multi-step-form/actions/multi-step-form-actions.ts",
      meta: undefined,
    },
    "quiz": {
      name: "quiz",
      description: "A quiz component with creation, taking, and result viewing functionality.",
      type: "registry:dynamic-component",
      registryDependencies: ["button","input","card","textarea","form","select","checkbox","radio-group","separator","use-toast","alert-dialog","progress"],
      files: [{
        path: "registry/default/dynamic-components/quiz/actions/quiz-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/quiz/components/quiz-builder.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/quiz/components/quiz-list.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/quiz/components/quiz-results.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/quiz/components/quiz-taker.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/quiz/lib/types.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/quiz/quizzes/[id]/results/[submissionId]/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/[id]/results/[submissionId]/page.tsx"
      },{
        path: "registry/default/dynamic-components/quiz/quizzes/[id]/take/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/[id]/take/page.tsx"
      },{
        path: "registry/default/dynamic-components/quiz/quizzes/[id]/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/[id]/page.tsx"
      },{
        path: "registry/default/dynamic-components/quiz/quizzes/create/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/create/page.tsx"
      },{
        path: "registry/default/dynamic-components/quiz/quizzes/page.tsx",
        type: "registry:page",
        target: "app/(quiz)/quizzes/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/quiz/actions/quiz-actions.ts")),
      source: "__registry__/default/dynamic-components/quiz/actions/quiz-actions.ts",
      meta: undefined,
    },
    "social-auth": {
      name: "social-auth",
      description: "A social authentication component that allows users to log in using OAuth provider (Github).",
      type: "registry:dynamic-component",
      registryDependencies: ["button","card","alert"],
      files: [{
        path: "registry/default/dynamic-components/social-auth/actions/oauth-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/social-auth/components/oauth-login.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/social-auth/lib/oauth-utils.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/social-auth/social/page.tsx",
        type: "registry:page",
        target: "app/(social-auth)/social/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/social-auth/actions/oauth-actions.ts")),
      source: "__registry__/default/dynamic-components/social-auth/actions/oauth-actions.ts",
      meta: undefined,
    },
    "two-factor-form": {
      name: "two-factor-form",
      description: "A social authentication component that allows users to log in using OAuth provider (Github).",
      type: "registry:dynamic-component",
      registryDependencies: ["button","card","alert","form","input","label"],
      files: [{
        path: "registry/default/dynamic-components/two-factor-form/actions/two-factor-actions.ts",
        type: "registry:actions",
        target: ""
      },{
        path: "registry/default/lib/db.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/two-factor-form/components/two-factor-form.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "registry/default/dynamic-components/two-factor-form/lib/two-factor-utils.ts",
        type: "registry:lib",
        target: ""
      },{
        path: "registry/default/dynamic-components/two-factor-form/emails/two-factor-template.tsx",
        type: "registry:email",
        target: ""
      },{
        path: "registry/default/dynamic-components/two-factor-form/twoFA/page.tsx",
        type: "registry:page",
        target: "app/(two-factor-form)/twoFA/page.tsx"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/default/dynamic-components/two-factor-form/actions/two-factor-actions.ts")),
      source: "__registry__/default/dynamic-components/two-factor-form/actions/two-factor-actions.ts",
      meta: undefined,
    },
    "area-chart-legend": {
      name: "area-chart-legend",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/area-chart-legend.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/default/charts/area-chart-legend.tsx")),
      source: "__registry__/default/charts/area-chart-legend.tsx",
      meta: undefined,
    },
    "area-chart-stacked": {
      name: "area-chart-stacked",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/area-chart-stacked.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/default/charts/area-chart-stacked.tsx")),
      source: "__registry__/default/charts/area-chart-stacked.tsx",
      meta: undefined,
    },
    "area-chart-step": {
      name: "area-chart-step",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/area-chart-step.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/default/charts/area-chart-step.tsx")),
      source: "__registry__/default/charts/area-chart-step.tsx",
      meta: undefined,
    },
    "stacked-area-percent": {
      name: "stacked-area-percent",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/stacked-area-percent.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-area"],
      component: React.lazy(() => import("@/registry/default/charts/stacked-area-percent.tsx")),
      source: "__registry__/default/charts/stacked-area-percent.tsx",
      meta: undefined,
    },
    "bar-chart-horizontal": {
      name: "bar-chart-horizontal",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/bar-chart-horizontal.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/default/charts/bar-chart-horizontal.tsx")),
      source: "__registry__/default/charts/bar-chart-horizontal.tsx",
      meta: undefined,
    },
    "bar-chart-label": {
      name: "bar-chart-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/bar-chart-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/default/charts/bar-chart-label.tsx")),
      source: "__registry__/default/charts/bar-chart-label.tsx",
      meta: undefined,
    },
    "bar-chart-multiple": {
      name: "bar-chart-multiple",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/bar-chart-multiple.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/default/charts/bar-chart-multiple.tsx")),
      source: "__registry__/default/charts/bar-chart-multiple.tsx",
      meta: undefined,
    },
    "bar-chart-multiple-2": {
      name: "bar-chart-multiple-2",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/bar-chart-multiple-2.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/default/charts/bar-chart-multiple-2.tsx")),
      source: "__registry__/default/charts/bar-chart-multiple-2.tsx",
      meta: undefined,
    },
    "brush-chart": {
      name: "brush-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/brush-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-brush"],
      component: React.lazy(() => import("@/registry/default/charts/brush-chart.tsx")),
      source: "__registry__/default/charts/brush-chart.tsx",
      meta: undefined,
    },
    "bubble-chart": {
      name: "bubble-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/bubble-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bubble"],
      component: React.lazy(() => import("@/registry/default/charts/bubble-chart.tsx")),
      source: "__registry__/default/charts/bubble-chart.tsx",
      meta: undefined,
    },
    "bullet-chart": {
      name: "bullet-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/bullet-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bullet"],
      component: React.lazy(() => import("@/registry/default/charts/bullet-chart.tsx")),
      source: "__registry__/default/charts/bullet-chart.tsx",
      meta: undefined,
    },
    "composed-area-chart": {
      name: "composed-area-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/composed-area-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-composed"],
      component: React.lazy(() => import("@/registry/default/charts/composed-area-chart.tsx")),
      source: "__registry__/default/charts/composed-area-chart.tsx",
      meta: undefined,
    },
    "composed-chart": {
      name: "composed-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/composed-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-composed"],
      component: React.lazy(() => import("@/registry/default/charts/composed-chart.tsx")),
      source: "__registry__/default/charts/composed-chart.tsx",
      meta: undefined,
    },
    "custom-pie-chart": {
      name: "custom-pie-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/custom-pie-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/default/charts/custom-pie-chart.tsx")),
      source: "__registry__/default/charts/custom-pie-chart.tsx",
      meta: undefined,
    },
    "custom-radial-bar": {
      name: "custom-radial-bar",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/custom-radial-bar.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-bar"],
      component: React.lazy(() => import("@/registry/default/charts/custom-radial-bar.tsx")),
      source: "__registry__/default/charts/custom-radial-bar.tsx",
      meta: undefined,
    },
    "funnel-chart": {
      name: "funnel-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/funnel-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-funnel"],
      component: React.lazy(() => import("@/registry/default/charts/funnel-chart.tsx")),
      source: "__registry__/default/charts/funnel-chart.tsx",
      meta: undefined,
    },
    "gauge-chart": {
      name: "gauge-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/gauge-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-gauge"],
      component: React.lazy(() => import("@/registry/default/charts/gauge-chart.tsx")),
      source: "__registry__/default/charts/gauge-chart.tsx",
      meta: undefined,
    },
    "gradient-chart": {
      name: "gradient-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/gradient-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-gradient"],
      component: React.lazy(() => import("@/registry/default/charts/gradient-chart.tsx")),
      source: "__registry__/default/charts/gradient-chart.tsx",
      meta: undefined,
    },
    "heatmap-chart": {
      name: "heatmap-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/heatmap-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-heatmap"],
      component: React.lazy(() => import("@/registry/default/charts/heatmap-chart.tsx")),
      source: "__registry__/default/charts/heatmap-chart.tsx",
      meta: undefined,
    },
    "line-chart-dots": {
      name: "line-chart-dots",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/line-chart-dots.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/default/charts/line-chart-dots.tsx")),
      source: "__registry__/default/charts/line-chart-dots.tsx",
      meta: undefined,
    },
    "reference-line-chart": {
      name: "reference-line-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/reference-line-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/default/charts/reference-line-chart.tsx")),
      source: "__registry__/default/charts/reference-line-chart.tsx",
      meta: undefined,
    },
    "line-chart-linear": {
      name: "line-chart-linear",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/line-chart-linear.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/default/charts/line-chart-linear.tsx")),
      source: "__registry__/default/charts/line-chart-linear.tsx",
      meta: undefined,
    },
    "line-chart-multiple": {
      name: "line-chart-multiple",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/line-chart-multiple.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/default/charts/line-chart-multiple.tsx")),
      source: "__registry__/default/charts/line-chart-multiple.tsx",
      meta: undefined,
    },
    "line-chart": {
      name: "line-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/line-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/default/charts/line-chart.tsx")),
      source: "__registry__/default/charts/line-chart.tsx",
      meta: undefined,
    },
    "vertical-line-chart": {
      name: "vertical-line-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/vertical-line-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-line"],
      component: React.lazy(() => import("@/registry/default/charts/vertical-line-chart.tsx")),
      source: "__registry__/default/charts/vertical-line-chart.tsx",
      meta: undefined,
    },
    "multi-radar-chart": {
      name: "multi-radar-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/multi-radar-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radar"],
      component: React.lazy(() => import("@/registry/default/charts/multi-radar-chart.tsx")),
      source: "__registry__/default/charts/multi-radar-chart.tsx",
      meta: undefined,
    },
    "radar-chart-grid-filled": {
      name: "radar-chart-grid-filled",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/radar-chart-grid-filled.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radar"],
      component: React.lazy(() => import("@/registry/default/charts/radar-chart-grid-filled.tsx")),
      source: "__registry__/default/charts/radar-chart-grid-filled.tsx",
      meta: undefined,
    },
    "radial-chart-label": {
      name: "radial-chart-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/radial-chart-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radial"],
      component: React.lazy(() => import("@/registry/default/charts/radial-chart-label.tsx")),
      source: "__registry__/default/charts/radial-chart-label.tsx",
      meta: undefined,
    },
    "radial-chart-shape": {
      name: "radial-chart-shape",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/radial-chart-shape.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-radial"],
      component: React.lazy(() => import("@/registry/default/charts/radial-chart-shape.tsx")),
      source: "__registry__/default/charts/radial-chart-shape.tsx",
      meta: undefined,
    },
    "pie-chart-donut": {
      name: "pie-chart-donut",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/pie-chart-donut.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/default/charts/pie-chart-donut.tsx")),
      source: "__registry__/default/charts/pie-chart-donut.tsx",
      meta: undefined,
    },
    "pie-chart-interactive": {
      name: "pie-chart-interactive",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/pie-chart-interactive.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/default/charts/pie-chart-interactive.tsx")),
      source: "__registry__/default/charts/pie-chart-interactive.tsx",
      meta: undefined,
    },
    "pie-chart-label": {
      name: "pie-chart-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/pie-chart-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-pie"],
      component: React.lazy(() => import("@/registry/default/charts/pie-chart-label.tsx")),
      source: "__registry__/default/charts/pie-chart-label.tsx",
      meta: undefined,
    },
    "polar-chart": {
      name: "polar-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/polar-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-polar"],
      component: React.lazy(() => import("@/registry/default/charts/polar-chart.tsx")),
      source: "__registry__/default/charts/polar-chart.tsx",
      meta: undefined,
    },
    "scatter-chart": {
      name: "scatter-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/scatter-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-scatter"],
      component: React.lazy(() => import("@/registry/default/charts/scatter-chart.tsx")),
      source: "__registry__/default/charts/scatter-chart.tsx",
      meta: undefined,
    },
    "sunburst-chart": {
      name: "sunburst-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/sunburst-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-sunburst"],
      component: React.lazy(() => import("@/registry/default/charts/sunburst-chart.tsx")),
      source: "__registry__/default/charts/sunburst-chart.tsx",
      meta: undefined,
    },
    "timeline-chart": {
      name: "timeline-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/timeline-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-timeline"],
      component: React.lazy(() => import("@/registry/default/charts/timeline-chart.tsx")),
      source: "__registry__/default/charts/timeline-chart.tsx",
      meta: undefined,
    },
    "toolooltip-no-label": {
      name: "toolooltip-no-label",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/tooltip-no-label.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-tooltip"],
      component: React.lazy(() => import("@/registry/default/charts/tooltip-no-label.tsx")),
      source: "__registry__/default/charts/tooltip-no-label.tsx",
      meta: undefined,
    },
    "waterfall-chart": {
      name: "waterfall-chart",
      description: "",
      type: "registry:block",
      registryDependencies: ["card","chart"],
      files: [{
        path: "registry/default/charts/waterfall-chart.tsx",
        type: "registry:block",
        target: ""
      }],
      categories: ["charts","charts-waterfall"],
      component: React.lazy(() => import("@/registry/default/charts/waterfall-chart.tsx")),
      source: "__registry__/default/charts/waterfall-chart.tsx",
      meta: undefined,
    },
  },
}
